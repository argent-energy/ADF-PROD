{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-aeanalytics-prod"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Subledger_TransactionsList_Blend_CoreTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_Subledger_TL_Blend_CoreTables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Finance].[SQL_Subledger_TL_Blend_CoreTables]"
						},
						"linkedServiceName": {
							"referenceName": "SqlServerArgent",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Finance"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-11T20:19:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_TSA_Tables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_TSA_Tables",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "\r\n-- Build purchase orders table\r\n\tIF OBJECT_ID('SupplyChain.PurchaseOrdersAndContracts','U') IS NOT NULL\r\n\t\tDROP TABLE SupplyChain.PurchaseOrdersAndContracts\r\n\r\n\tSELECT\t\tpc.[Blanket Purchase Agreement Number],\r\n                po.[PO Header ID],\r\n                po.[Current Version ID],\r\n                po.[Purchase Document Status],\r\n                po.[Purchasing BU],\r\n\t\t\t\to.[Business Unit Name] AS [Purchasing BU Name],\r\n                po.Buyer,\r\n                po.[Purchase Document Type],\r\n                po.[Purchase Order Number],\r\n                po.Supplier,\r\n                po.[Supplier Site],\r\n                po.[Terms ID],\r\n                po.Incoterm,\r\n                po.[Purchase Document Currency],\r\n                po.[Agreement Start Date],\r\n                po.[Agreement End Date],\r\n                po.[Agreement Amount],\r\n                po.[Amount Released Against Agreement],\r\n                po.[Carrier ID],\r\n                po.[Note To Vendor],\r\n                po.[Bill To BU ID],\r\n                po.[Sold To BU ID],\r\n                po.[Req BU ID],\r\n                po.[Ship To Location ID],\r\n                po.[Bill To Location ID],\r\n                po.[Purchased Document Closed Date],\r\n                po.[Currency Conversion Rate],\r\n                po.[Note To Receiver],\r\n                po.[Purchase Document Description],\r\n                po.[From Type Lookup Code],\r\n                po.[Sustainability Position],\r\n                po.[Deal Date],\r\n                po.[Transporter Name],\r\n                po.[Transporter Unit Price],\r\n                po.[FFA Spec],\r\n                po.[Transporter Amount],\r\n                po.[Ultimo Order],\r\n                po.[Transporter Currency],\r\n                po.[Additional Charges 1 Supplier],\r\n                po.[Additional Charges 1 Unit Price],\r\n                po.[Additional Charges 1 Amount],\r\n                po.[Additional Charges 1 Currency],\r\n                po.[Additional Charges 1 Description],\r\n                po.[Additional Charges 2 Supplier],\r\n                po.[Additional Charges 2 Unit Price],\r\n                po.[Additional Charges 2 Amount],\r\n                po.[Additional Charges 2 Currency],\r\n                po.[PO Line ID],\r\n                po.[From Header ID],\r\n                po.[Procurement BU ID],\r\n                po.[Line Status],\r\n                po.[Line Number],\r\n                po.[Item ID],\r\n                po.[Category ID],\r\n                po.[Item Description],\r\n                po.[UOM Code],\r\n                po.[Unit Price],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'EUR'\r\n\t\t\t\t\t\tTHEN po.[Unit Price]\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'GBP'\r\n\t\t\t\t\t\tTHEN po.[Unit Price]/NULLIF(CAST(fx.[EUR GBP] AS DECIMAL(28,4)),0)\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'USD'\r\n\t\t\t\t\t\tTHEN po.[Unit Price]/NULLIF(CAST(fx.[EUR USD] AS DECIMAL(28,4)),0)\r\n\t\t\t\tEND AS [Unit Price EUR],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'GBP'\r\n\t\t\t\t\t\tTHEN po.[Unit Price]\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(po.[Unit Price] AS DECIMAL(28,4)) * CAST(fx.[EUR GBP] AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'USD'\r\n\t\t\t\t\t\tTHEN (CAST(po.[Unit Price] AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR USD] AS DECIMAL(28,4)),0))*CAST(fx.[EUR GBP] AS DECIMAL(28,4))\r\n\t\t\t\tEND AS [Unit Price GBP],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'USD'\r\n\t\t\t\t\t\tTHEN po.[Unit Price]\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(po.[Unit Price] AS DECIMAL(28,4)) * CAST(fx.[EUR USD] AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'GBP'\r\n\t\t\t\t\t\tTHEN (CAST(po.[Unit Price] AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR GBP] AS DECIMAL(28,4)),0))*CAST(fx.[EUR USD] AS DECIMAL(28,4))\r\n\t\t\t\tEND AS [Unit Price USD],\r\n                po.[Ordered Quantity],\r\n                po.[From Line ID],\r\n                po.[Supplier Item],\r\n                po.[Blanket Agreement Quantity],\r\n                po.[Closed Date],\r\n                po.[Cancel Reason],\r\n                po.[Requested Date],\r\n                po.[Pick up Date],\r\n                s.[Vendor ID],\r\n                s.[Supplier ID],\r\n                sn.[Party ID],\r\n                sn.[Supplier Name],\r\n                i.[Item Code],\r\n                i.[Inventory Item ID],\r\n                i.[Category Code],\r\n                i.[Item Name],\r\n                le.[Legal Entity ID],\r\n                le.[Legal Entity Name],\r\n\t\t\t\tp.[Shipping Method],\r\n\t\t\t\tfx.[EUR USD],\r\n\t\t\t\tfx.[EUR GBP],\r\n\t\t\t\tCAST([po].[Unit Price] AS DECIMAL(28,4)) * CAST([po].[Ordered Quantity] AS DECIMAL(28,4)) AS [Amount],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(po.[Unit Price] AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'GBP'\r\n\t\t\t\t\t\tTHEN CAST(po.[Unit Price] AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR GBP] AS DECIMAL(28,4)),0)\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'USD'\r\n\t\t\t\t\t\tTHEN CAST(po.[Unit Price] AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR USD] AS DECIMAL(28,4)),0)\r\n\t\t\t\t\tELSE '0'\r\n\t\t\t\tEND * CAST(ISNULL([po].[Ordered Quantity],0) AS DECIMAL(28,4)) AS [Amount EUR],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'GBP'\r\n\t\t\t\t\t\tTHEN po.[Unit Price]\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(po.[Unit Price] AS DECIMAL(28,4)) * CAST(fx.[EUR GBP] AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'USD'\r\n\t\t\t\t\t\tTHEN (CAST(po.[Unit Price] AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR USD] AS DECIMAL(28,4)),0))*CAST(ISNULL(fx.[EUR GBP],0) AS DECIMAL(28,4))\r\n\t\t\t\tEND * CAST(ISNULL([po].[Ordered Quantity],0) AS DECIMAL(28,4)) AS [Amount GBP],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'USD'\r\n\t\t\t\t\t\tTHEN po.[Unit Price]\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(po.[Unit Price] AS DECIMAL(28,4)) * CAST(fx.[EUR USD] AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'GBP'\r\n\t\t\t\t\t\tTHEN (CAST(po.[Unit Price] AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR GBP] AS DECIMAL(28,4)),0))*CAST(fx.[EUR USD] AS DECIMAL(28,4))\r\n\t\t\t\tEND * CAST(ISNULL([po].[Ordered Quantity],0) AS DECIMAL(28,4)) AS [Amount USD],\r\n\t\t\t\tCAST(GETDATE() AS DATE) AS [DateStamp]\r\n\tINTO\t\tSupplyChain.PurchaseOrdersAndContracts\r\n\tFROM\t\tCore.PurchaseOrders po\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\tDISTINCT [Blanket Purchase Agreement Number]\r\n\t\t\t\t\t,\t\t\t[PO Header ID]\r\n\t\t\t\t\t,\t\t\t[PO Line ID]\r\n\t\t\t\t\tFROM\t\tCore.PurchaseContracts\r\n\t\t\t\t) pc\r\n\tON\t\t\tpo.[From Header ID] = pc.[PO Header ID]\r\n\tAND\t\t\tpo.[From Line ID] = pc.[PO Line ID]\r\n\tLEFT JOIN\t[Core].[Suppliers] s\r\n\tON\t\t\tpo.[Supplier] = s.[Vendor ID]\r\n\tAND\t\t\tpo.[Supplier Site] = s.[Vendor Site ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Party ID] \r\n\t\t\t\t\t,\t\t\tMIN([Party Name])\tAS [Supplier Name]\r\n\t\t\t\t\tFROM\t\t[Core].[Parties]\r\n\t\t\t\t\tGROUP BY\t[Party ID]\r\n\t\t\t\t) sn\r\n\tON\t\t\ts.[Party ID] = sn.[Party ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Business Unit ID]\r\n\t\t\t\t\t,\t\t\t[Business Unit Name]\r\n\t\t\t\t\tFROM\t\t[Core].[Organizations]\r\n\t\t\t\t\tGROUP BY\t[Business Unit ID]\r\n\t\t\t\t\t,\t\t\t[Business Unit Name]\r\n\t\t\t\t) o\r\n\tON\t\t\tpo.[Purchasing BU] = o.[Business Unit ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Item Code]\r\n\t\t\t\t\t,\t\t\t[Inventory Item ID]\r\n\t\t\t\t\t,\t\t\t[Category Code]\r\n\t\t\t\t\t,\t\t\tMIN([Item Name])\tAS [Item Name]\r\n\t\t\t\t\tFROM\t\t[Core].[Items]\r\n\t\t\t\t\tGROUP BY\t[Item Code]\r\n\t\t\t\t\t,\t\t\t[Inventory Item ID]\r\n\t\t\t\t\t,\t\t\t[Category Code]\r\n\t\t\t\t) i \r\n\tON\t\t\ti.[Inventory Item ID] = po.[Item ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\tDISTINCT [Legal Entity ID]\r\n\t\t\t\t\t,\t\t\t[Legal Entity Name]\r\n\t\t\t\t\tFROM\t\tCore.Organizations\r\n\t\t\t\t) le\r\n\tON\t\t\tPO.[Sold To BU ID] = le.[Legal Entity ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Party ID]\r\n\t\t\t\t\t,\t\t\tMIN([Party Name])\tAS [Shipping Method]\r\n\t\t\t\t\tFROM\t\t[Core].[Parties]\r\n\t\t\t\t\tGROUP BY\t[Party ID]\r\n\t\t\t\t) p\r\n\tON\t\t\tpo.[Carrier ID] = p.[Party ID]\r\n\tLEFT JOIN\tCore.FXRates fx\r\n\tON\t\t\tCAST(LEFT([po].[Requested Date],10) AS DATE) = CAST(fx.[CONVERSION_DATE] AS DATE)\r\n\tWHERE\t\tpc.[Blanket Purchase Agreement Number] NOT IN (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSELECT\t\tDISTINCT [Blanket Purchase Agreement Number]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFROM\t\t[Core].[PurchaseContracts]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHERE\t\t[Amount Released Against Agreement] = 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAND\t\t\t[Agreement End Date] < '2021-07-01'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   ) \t\r\n\r\n\r\n-- Build sales orders table\r\n\tIF OBJECT_ID('SupplyChain.SalesOrdersAndContracts','U') IS NOT NULL\r\n\t\tDROP TABLE SupplyChain.SalesOrdersAndContracts\r\n\r\n\r\n\tSELECT\t\tso.[Header ID],\r\n                so.[Order Number],\r\n                so.[Org ID],\r\n                so.[Legal Entity ID],\r\n                so.[Ordered Date],\r\n                so.[Order Type Code],\r\n                so.[Transactional Currency Code],\r\n                so.[Status Code],\r\n                so.[Open Flag],\r\n                so.[On Hold],\r\n                so.[Canceled Flag],\r\n                so.[Change Version Number],\r\n                so.[Is Editable],\r\n                so.[Sold To Party ID],\r\n                so.[Pricing Segment Code],\r\n                so.[Pricing Strategy ID],\r\n                so.[Fulfill Org ID],\r\n                so.[Request Ship Date],\r\n                so.[Carrier ID],\r\n                so.[Ship Mode Of Transport],\r\n                so.[Ship Class Of Service],\r\n                so.[Submitted Flag],\r\n                so.[Reference Header ID],\r\n                so.[Payment Term ID],\r\n                so.[Modified Flag],\r\n                so.[Submitted Date],\r\n                so.[Submitted By],\r\n                so.[MDO Flag],\r\n                so.[Sold To Party Contact ID],\r\n                so.[Sold To Party Contact Point ID],\r\n                so.[Request Cancel Date],\r\n                so.[Cancel Reason Code],\r\n                so.[Customer PO Number],\r\n                so.Comments,\r\n                so.[Agreement Header ID],\r\n                so.[Agreement Version Number],\r\n                so.[Line ID],\r\n                so.[Line Number],\r\n                so.[Order Line Status],\r\n                so.[Ordered Qty],\r\n                so.[Ordered UOM],\r\n                so.[Extended Amount],\r\n                so.[Inventory Item ID],\r\n                so.[Unit List Price],\r\n                CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4)) AS [Unit Selling Price],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'GBP'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR GBP] AS DECIMAL(28,4)),0)\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'USD'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR USD] AS DECIMAL(28,4)),0)\r\n\t\t\t\tEND AS [Unit Price EUR],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'GBP'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4)) * CAST(fx.[EUR GBP] AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'USD'\r\n\t\t\t\t\t\tTHEN (CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR USD] AS DECIMAL(28,4)),0))*CAST(fx.[EUR GBP] AS DECIMAL(28,4))\r\n\t\t\t\tEND AS [Unit Price GBP],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'USD'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4)) * CAST(fx.[EUR USD] AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'GBP'\r\n\t\t\t\t\t\tTHEN (CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR GBP] AS DECIMAL(28,4)),0))*CAST(fx.[EUR USD] AS DECIMAL(28,4))\r\n\t\t\t\tEND AS [Unit Price USD],\r\n                so.[Reference Line ID],\r\n                so.[Inventory Organization ID],\r\n                so.[Display Line Number],\r\n                so.[Schedule Ship Date],\r\n                so.[RMA Delivered Qty],\r\n                so.[Canceled Qty],\r\n                sc.[Sales Contract Number],\r\n                sc.[Contract Header ID],\r\n\t\t\t\tsc.[Shipping Method],\r\n                c.[Party ID],\r\n                c.[Customer Number],\r\n                c.Customer,\r\n                o.[Business Unit ID],\r\n                o.[Business Unit Name],\r\n                i.[Organization ID],\r\n                i.[Item Code],\r\n                i.[Item Name],\r\n                i.[Category Code],\r\n\t\t\t\tfx.[EUR USD],\r\n\t\t\t\tfx.[EUR GBP],\r\n\t\t\t\tCAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4)) * CAST([so].[Ordered Qty] AS DECIMAL(28,4)) AS [Amount],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'GBP'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR GBP] AS DECIMAL(28,4)),0)\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'USD'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR USD] AS DECIMAL(28,4)),0)\r\n\t\t\t\t\tELSE '0'\r\n\t\t\t\tEND * CAST([so].[Ordered Qty] AS DECIMAL(28,4)) AS [Amount EUR],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'GBP'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4)) * CAST(fx.[EUR GBP] AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'USD'\r\n\t\t\t\t\t\tTHEN (CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR USD] AS DECIMAL(28,4)),0))*CAST(ISNULL(fx.[EUR GBP],0) AS DECIMAL(28,4))\r\n\t\t\t\tEND * CAST([so].[Ordered Qty] AS DECIMAL(28,4)) AS [Amount GBP],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'USD'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4)) * CAST(fx.[EUR USD] AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'GBP'\r\n\t\t\t\t\t\tTHEN (CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR GBP] AS DECIMAL(28,4)),0))*CAST(fx.[EUR USD] AS DECIMAL(28,4))\r\n\t\t\t\tEND * CAST([so].[Ordered Qty] AS DECIMAL(28,4)) AS [Amount USD],\r\n\t\t\t\tCAST(GETDATE() AS DATE) AS [DateStamp]\r\n\tINTO\t\tSupplyChain.SalesOrdersAndContracts\r\n\tFROM\t\tCore.SalesOrders so\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\tDISTINCT [Sales Contract Number]\r\n\t\t\t\t\t,\t\t\t[Contract Header ID]\r\n\t\t\t\t\t,\t\t\t[Sales Contract Version]\r\n\t\t\t\t\t,\t\t\t[Shipping Method]\r\n\t\t\t\t\tFROM\t\tCore.SalesContracts\t\r\n\t\t\t\t) sc\r\n\tON\t\t\tsc.[Contract Header ID] = so.[Agreement Header ID]\r\n\tAND\t\t\tsc.[Sales Contract Version] = so.[Agreement Version Number]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Party ID]\r\n\t\t\t\t\t,\t\t\t[Party Number]\t\tAS [Customer Number]\r\n\t\t\t\t\t,\t\t\tMIN([Party Name])\tAS [Customer]\r\n\t\t\t\t\tFROM\t\t[Core].[Parties]\r\n\t\t\t\t\tGROUP BY\t[Party ID]\r\n\t\t\t\t\t,\t\t\t[Party Number]\r\n\t\t\t\t) c\r\n\tON\t\t\tso.[Sold To Party ID] = c.[Party ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Business Unit ID]\r\n\t\t\t\t\t,\t\t\t[Business Unit Name]\r\n\t\t\t\t\tFROM\t\t[Core].[Organizations]\r\n\t\t\t\t\tGROUP BY\t[Business Unit ID]\r\n\t\t\t\t\t,\t\t\t[Business Unit Name]\r\n\t\t\t\t) o\r\n\tON\t\t\tso.[Org ID] = o.[Business Unit ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Inventory Item ID]\r\n\t\t\t\t\t,\t\t\t[Organization ID]\r\n\t\t\t\t\t,\t\t\t[Item Code]\r\n\t\t\t\t\t,\t\t\t[Item Name]\r\n\t\t\t\t\t,\t\t\t[Category Code]\r\n\t\t\t\t\tFROM\t\t[Core].[Items] \r\n\t\t\t\t\tGROUP BY\t[Inventory Item ID]\r\n\t\t\t\t\t,\t\t\t[Organization ID]\r\n\t\t\t\t\t,\t\t\t[Item Code]\r\n\t\t\t\t\t,\t\t\t[Item Name]\r\n\t\t\t\t\t,\t\t\t[Category Code]\r\n\t\t\t\t) i\r\n\tON\t\t\ti.[Inventory Item ID] = so.[Inventory Item ID]\r\n\tAND\t\t\tso.[Inventory Organization ID] = i.[Organization ID]\r\n\tLEFT JOIN\tCore.FXRates fx\r\n\tON\t\t\t[so].[Ordered Date] = CAST([fx].[CONVERSION_DATE] AS DATE)\r\n\r\n\r\n-- Third Party Inventory\r\n\tIF OBJECT_ID('SupplyChain.TSA_ThirdPartyInventory','U') IS NOT NULL\r\n\t\tDROP TABLE SupplyChain.TSA_ThirdPartyInventory\r\n\r\n\tSELECT\t\t*\r\n\tINTO\t\tSupplyChain.TSA_ThirdPartyInventory\r\n\tFROM\t\t[Core].[OnHandBalance] ohb\r\n\tWHERE\t\t[Business Unit Name] IN ('ROTIE BU','Quatra BU')\r\n"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Supply Chain"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_TransactionsList')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_TransactionsList",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Finance].[SQL_TransactionsList]"
						},
						"linkedServiceName": {
							"referenceName": "SqlServerArgent",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Finance"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-11T15:32:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/audit_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "audit_tables_rowcounts",
						"description": "This job gets details of row count and puts them in an audit table by calling a stored procedure ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[prc_audit_table_rowcount]"
						},
						"linkedServiceName": {
							"referenceName": "SqlServerArgent",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Audit"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-31T12:30:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AppianDataSuppliers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AppianDev",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AppianDataSuppliers_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_Destination_Oracle')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your data destination store.  ",
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "oracle-data"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_Source_Oracle')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your data source store. ",
				"linkedServiceName": {
					"referenceName": "FTP Oracle",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"fileName": "*.CSV"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary_Source_Oracle_OO')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ONE OFF. Connection to FTP server for copying one file.",
				"linkedServiceName": {
					"referenceName": "FTP Oracle",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"fileName": "Supplier_BankAccount_Join.csv"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Finance_Excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SheetName": {
						"type": "string",
						"defaultValue": "Value"
					}
				},
				"folder": {
					"name": "Finance"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().SheetName",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Finance DWH Excel data.xlsx",
						"container": "sharepoint-files"
					},
					"range": "A1",
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Finance_Excel_Get_Metadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Finance"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Tables",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Finance DWH Excel data.xlsx",
						"container": "sharepoint-files"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "SheetName",
						"type": "String"
					},
					{
						"name": "TableName",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Non_Oracle_Files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Trade"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"container": "manual-files"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Non_Oracle_Get_Metadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Trade"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "manual-files"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Oracle_Files')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"container": "oracle-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\"",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Oracle_Get_Metadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "oracle-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Pricing_Excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SheetName": {
						"type": "string",
						"defaultValue": "Value"
					}
				},
				"folder": {
					"name": "Trade/Pricing"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().SheetName",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Pricing dataset.xlsx",
						"container": "sharepoint-files"
					},
					"range": "B2",
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_Pricing_Get_Metadata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Trade/Pricing"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Tables",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Pricing dataset.xlsx",
						"container": "sharepoint-files"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "SheetName",
						"type": "String"
					},
					{
						"name": "TableName",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_SC_DataWallet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Supply Chain"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Tables",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Supply Chain Excel Data for DWH.xlsx",
						"container": "sharepoint-files"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "SheetName",
						"type": "String"
					},
					{
						"name": "TableName",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_SC_DataWallet_Sheets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SheetName": {
						"type": "string",
						"defaultValue": "Value"
					}
				},
				"folder": {
					"name": "Supply Chain"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": {
						"value": "@dataset().SheetName",
						"type": "Expression"
					},
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Supply Chain Excel Data for DWH.xlsx",
						"container": "sharepoint-files"
					},
					"range": "A1",
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_SC_SafetyStock_TankHeel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "InventorySafetyStockAndHeels.csv",
						"container": "supplychain-manualfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		}
	]
}