{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-aeanalytics-prod"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Margin_Traceability_Loop')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Trade].[SQL_MarginTraceabilityLoop]"
						},
						"linkedServiceName": {
							"referenceName": "SqlServerArgent",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Trade/Margin"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-21T16:18:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Margin_Traceability_Report_Script')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Margin Traceability Report Script",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlServerArgent",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "/*==============================================================================================================================*\r\n * Project:\t\tArgent\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * Purpose:\t\tFind the feedstock items that have been used to create each biodiesel sale\t\t\t\t\t\t\t\t\t\t*\r\n * Description:\t1) Create the traceability table which contains all movements of feedstock/biodiesel and the quantities involved*\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n *\t\t\t\t2) Self join the traceability table multiple times to trace each biodiesel sale back to the feedstock items\t    *\r\n *\t\t\t\t   that have been purchased.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * Prerequisites: Run Core tables script.\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n *\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * Outputs: Tables \"Trade.Traceability\", \"Trade.TraceabilityLooped\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n *\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n *\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * Date:       29/07/2022\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * Version:     1.0\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\t\r\n *\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * SQL ATR - Complicated process but made up of basic joins.\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t* \r\n *\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n *==============================================================================================================================*\r\n * Updates:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * Date\t\t| Version | Author\t\t| Change made\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * -----------------------------------------------------------------------------------------------------------------------------*\r\n * --/--/-- |  1.-\t  |\t\t\t\t|\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n *\t\t\t|\t\t  |\t\t\t\t|\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n *==============================================================================================================================*/\r\n/********************************************************************************************************\r\n\tStep 2.1\tCreate traceability table.\r\n\r\n\t\t\t\tThis table is built using [Core].[InventoryTransactions], [Core].[ShippingDetails],\r\n\t\t\t\t[Core].[SalesOrders], [Core].[SalesOrders_Fulfilled], [Core].[Organizations], [Core].[ReceivingTransactions],\r\n\t\t\t\t[Core].[PurchaseOrders], [Core].[InventoryLotNumberTransactions] and [Core].[InventoryLotNumbers].\r\n\r\n\t\t\t\tThe table contains details all movements of inventory items throughout the business. This includes all feedstock items\r\n\t\t\t\tthat have been purchased, the quantity of every feedstock/biodiesel batch that gets created as well as the quantities of\r\n\t\t\t\tthe items used to produce them and also the details of the biodiesel sold.\r\n********************************************************************************************************/\r\n\tIF OBJECT_ID('[Trade].[Traceability]','U') IS NOT NULL\r\n\t\tDROP TABLE [Trade].[Traceability]\r\n\r\n\tSELECT\t\to.[Business Unit Name]\r\n\t,\t\t\tit.[SUBINVENTORY_CODE]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Subinventory]\r\n\t,\t\t\tCOALESCE(\r\n\t\t\t\t\t\t\tLEFT(it.[ATTRIBUTE_TIMESTAMP1],10)\r\n\t\t\t\t\t\t,\tLEFT(rt.[ATTRIBUTE_TIMESTAMP2],10)\r\n\t\t\t\t\t\t,\tCASE\r\n\t\t\t\t\t\t\t\tWHEN so.[Comments] LIKE '%Time Off Site%'\r\n\t\t\t\t\t\t\t\t\tTHEN \r\n\t\t\t\t\t\t\t\t\t\tCONCAT(\r\n\t\t\t\t\t\t\t\t\t\t\tRIGHT(SUBSTRING(so.[Comments],CHARINDEX('Time Off Site',so.[Comments])+14,10),4)\r\n\t\t\t\t\t\t\t\t\t\t,\tSUBSTRING(SUBSTRING(so.[Comments],CHARINDEX('Time Off Site',so.[Comments])+14,10),3,4)\r\n\t\t\t\t\t\t\t\t\t\t,\tLEFT(SUBSTRING(so.[Comments],CHARINDEX('Time Off Site',so.[Comments])+14,10),2)\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\tELSE so.[Schedule Ship Date]\r\n\t\t\t\t\t\t\tEND\r\n\t\t\t\t\t\t,\tLEFT(sof.[REQUEST_SHIP_DATE],10)\r\n\t\t\t\t\t\t,\tLEFT(it.[TRANSACTION_DATE],10)\r\n\t\t\t\t\t\t)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Physical Date]\r\n\t,\t\t\tCOALESCE(\r\n\t\t\t\t\t\t\tpo.[Purchase Order Number]\r\n\t\t\t\t\t\t,\tso.[Order Number]\r\n\t\t\t\t\t\t,\tit.[TRANSACTION_SOURCE_NAME]\r\n\t\t\t\t\t\t,\tit.[TRANSACTION_REFERENCE]\t\r\n\t\t\t\t\t\t,\trsh.[RA_DOCUMENT_NUMBER]\r\n\t\t\t\t\t\t)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Document Number]\r\n\t,\t\t\tit.[TRANSACTION_TYPE_NAME]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Transaction Type]\r\n\t,\t\t\ti.[Item Code]\r\n\t,\t\t\ti.[Item Name]\r\n\t,\t\t\ti.[Unit of Measure]\t\t\t\t\t\t\t\t\t\t\t\r\n\t,\t\t\tCAST(ilnt.[PRIMARY_QUANTITY] AS NUMERIC(28,8))\t\t\t\t\t\t\t\t\t\t\tAS [Quantity]\r\n\t,\t\t\tit.[TRANSFER_SUBINVENTORY]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Transfer Subinventory]\r\n\t,\t\t\tilnt.[LOT_NUMBER]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Lot Numbers]\r\n\t,\t\t\tit.[TRANSACTION_ID]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Transaction ID]\r\n\t,\t\t\tit.[CREATION_DATE]\r\n\t,\t\t\tit.[TRANSACTION_DATE]\r\n\t,\t\t\tsd.[SOURCE_HEADER_NUMBER]\r\n\t,\t\t\tsd.[SOURCE_LINE_NUMBER]\r\n\t,\t\t\tCAST(GETDATE() AS DATE)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [DateStamp]\r\n\tINTO\t\t[Trade].[Traceability]\r\n\tFROM\t\t[Core].[InventoryTransactions] it\r\n\tLEFT JOIN\t[Core].[ShippingDetails] sd\r\n\tON\t\t\tit.[TRX_SOURCE_LINE_ID] = sd.[DELIVERY_DETAIL_ID]\r\n\tAND\t\t\tit.[TRANSACTION_SOURCE_TYPE_ID] = '2'\t\t\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Header ID]\r\n\t\t\t\t\t,\t\t\t[Order Number]\r\n\t\t\t\t\t,\t\t\t[Comments]\r\n\t\t\t\t\t,\t\t\tMAX([Schedule Ship Date]) AS [Schedule Ship Date]\r\n\t\t\t\t\t,\t\t\t[Submitted Flag]\r\n\t\t\t\t\tFROM\t\t[Core].[SalesOrders]\r\n\t\t\t\t\tGROUP BY\t[Header ID]\r\n\t\t\t\t\t,\t\t\t[Order Number]\r\n\t\t\t\t\t,\t\t\t[Comments]\r\n\t\t\t\t\t,\t\t\t[Submitted Flag]\r\n\t\t\t\t) so\r\n\tON\t\t\tso.[Order Number] = sd.[SOURCE_HEADER_NUMBER]\r\n\tAND\t\t\tso.[Submitted Flag] = 'Y'\t\r\n\tLEFT JOIN\t[Core].[SalesOrders_Fulfilled] sof\r\n\tON\t\t\tso.[Header ID] = sof.[HEADER_ID]\r\n\tAND\t\t\tsof.[FULFILL_LINE_ID] = sd.[SOURCE_SHIPMENT_ID]\r\n\tLEFT JOIN\t[Core].[Organizations] o\r\n\tON\t\t\to.[Organization ID] = it.[ORGANIZATION_ID]\r\n\tLEFT JOIN\t[Core].[Items] i\r\n\tON\t\t\ti.[Inventory Item ID] = it.[INVENTORY_ITEM_ID]\r\n\tAND\t\t\ti.[Organization ID] = it.[ORGANIZATION_ID]\r\n\tLEFT JOIN\t[Core].[ReceivingTransactions] rt\r\n\tON\t\t\trt.[Transaction ID] = it.[RCV_TRANSACTION_ID]\r\n\tLEFT JOIN\t[Core].[ReceivingShipmentHeaders] rsh\r\n\tON\t\t\trt.[Receipt Advice Header ID] = rsh.[SHIPMENT_HEADER_ID]\r\n    AND\t\t\trt.[Source Document Code] = 'RMA'\r\n    AND\t\t\trt.[Transaction Type] = 'DELIVER'\r\n\tLEFT JOIN\t[Core].[PurchaseOrders] po\r\n\tON\t\t\tpo.[PO Header ID] = rt.[PO Header ID]\r\n\tAND\t\t\tpo.[PO Line ID] = rt.[PO Line ID]\r\n\tLEFT JOIN\t[Core].[InventoryLotNumberTransactions] ilnt\r\n\tON\t\t\tilnt.[TRANSACTION_ID] = it.[TRANSACTION_ID]\r\n\tLEFT JOIN\t[Core].[InventoryLotNumbers] iln\r\n\tON\t\t\tiln.[LOT_NUMBER] = ilnt.[LOT_NUMBER]\r\n\tAND\t\t\tiln.[ORGANIZATION_ID] = o.[Organization ID]\r\n\tAND\t\t\tiln.[LOT_ATTRIBUTE_CATEGORY] IN ('Biodiesel','AENL Weigh Bridge')\r\n\tWHERE\t\to.[Business Unit Name] IN ('BDA BU','Motherwell','Stanlow')\r\n\tAND\t\t\to.[Inventory Organization Code] IN ('BDA','MBDR','MBLD''MCOM','MPTP','SBDR','SBLD','SCOM','SPOP','SPTP')\r\n\tAND\t\t\tLEFT(it.[TRANSACTION_DATE],10) >= '2021-01-01'\r\n\r\n/********************************************************************************************************\r\n\tStep 2.2\tFind the feedstock items that feed into each biodiesel batch.\r\n\r\n\t\t\t\tThis table is built by left joining [Trade].[Traceability] onto itself multiple times.\r\n********************************************************************************************************/\r\n\r\n\r\n\tIF OBJECT_ID('[Trade].[TraceabilityLooped]','U') IS NOT NULL\r\n\t\tDROP TABLE [Trade].[TraceabilityLooped]\r\n\r\n\tSELECT\t\tt1.[Physical Date]\r\n\t,\t\t\tt1.[CREATION_DATE]\r\n\t,\t\t\tt1.[Business Unit Name]\r\n\t,\t\t\tt1.[Document Number]\r\n\t,\t\t\tt1.[Transaction Type]\r\n\t,\t\t\tt1.[Item Code]\r\n\t,\t\t\tt1.[Item Name]\r\n\t,\t\t\tt1.[Unit of Measure]\r\n\t,\t\t\tCASE WHEN t1.[Unit of Measure] = 'LTR' THEN t1.[Quantity] * 0.0008745 ELSE t1.[Quantity] END AS [Quantity]\r\n\t,\t\t\tt1.[SOURCE_HEADER_NUMBER]\t\t\r\n\t,\t\t\tt1.[SOURCE_LINE_NUMBER]\r\n\t,\t\t\tt1.[Lot Numbers]\r\n\t,\t\t\tt2.[Document Number]\t\t\t\tAS [Document Number_2]\t\t\t\r\n\t,\t\t\tt2.[Transaction Type]\t\t\t\tAS [Transaction Type_2]\t\t\t\r\n\t,\t\t\tt2.[Item Code]\t\t\t\t\t\tAS [Item Code_2]\t\t\t\t\r\n\t,\t\t\tt2.[Item Name]\t\t\t\t\t\tAS [Item Name_2]\t\r\n\t,\t\t\tt2.[Unit of Measure]\t\t\t\tAS [Unit of Measure_2]\t\t\r\n\t,\t\t\tCASE WHEN t2.[Unit of Measure] = 'LTR' THEN t2.[Quantity] * 0.0008745 ELSE t2.[Quantity] END\t\t\t\t\t\tAS [Quantity_2]\t\t\t\t\t\r\n\t,\t\t\tt2.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_2]\t\t\t\r\n\t,\t\t\tt3.[Document Number] \t\t\t\tAS [Document Number_3] \t\t\t\r\n\t,\t\t\tt3.[Transaction Type]\t\t\t\tAS [Transaction Type_3]\t\t\t\r\n\t,\t\t\tt3.[Item Code]\t\t\t\t\t\tAS [Item Code_3]\t\t\t\t\r\n\t,\t\t\tt3.[Item Name]\t\t\t\t\t\tAS [Item Name_3]\t\r\n\t,\t\t\tt3.[Unit of Measure]\t\t\t\tAS [Unit of Measure_3]\t\t\t\t\r\n\t,\t\t\tCASE WHEN t3.[Unit of Measure] = 'LTR' THEN t3.[Quantity] * 0.0008745 ELSE t3.[Quantity] END\t\t\t\t\t\tAS [Quantity_3]\t\t\t\t\t\r\n\t,\t\t\tt3.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_3]\t\t\t\t\r\n\t,\t\t\tt4.[Document Number] \t\t\t\tAS [Document Number_4] \t\t\t\r\n\t,\t\t\tt4.[Transaction Type]\t\t\t\tAS [Transaction Type_4]\t\t\t\r\n\t,\t\t\tt4.[Item Code]\t\t\t\t\t\tAS [Item Code_4]\t\t\t\t\r\n\t,\t\t\tt4.[Item Name]\t\t\t\t\t\tAS [Item Name_4]\t\t\r\n\t,\t\t\tt4.[Unit of Measure]\t\t\t\tAS [Unit of Measure_4]\t\t\r\n\t,\t\t\tCASE WHEN t4.[Unit of Measure] = 'LTR' THEN t4.[Quantity] * 0.0008745 ELSE t4.[Quantity] END\t\t\t\t\t\tAS [Quantity_4]\t\t\t\t\t\r\n\t,\t\t\tt4.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_4]\t\t\t\t\r\n\t,\t\t\tt5.[Document Number] \t\t\t\tAS [Document Number_5] \t\t\t\r\n\t,\t\t\tt5.[Transaction Type]\t\t\t\tAS [Transaction Type_5]\t\t\t\r\n\t,\t\t\tt5.[Item Code]\t\t\t\t\t\tAS [Item Code_5]\t\t\t\t\r\n\t,\t\t\tt5.[Item Name]\t\t\t\t\t\tAS [Item Name_5]\r\n\t,\t\t\tt5.[Unit of Measure]\t\t\t\tAS [Unit of Measure_5]\t\t\t\t\t\r\n\t,\t\t\tCASE WHEN t5.[Unit of Measure] = 'LTR' THEN t5.[Quantity] * 0.0008745 ELSE t5.[Quantity] END\t\t\t\t\t\tAS [Quantity_5]\t\t\t\t\t\r\n\t,\t\t\tt5.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_5]\t\t\t\r\n\t,\t\t\tt6.[Document Number] \t\t\t\tAS [Document Number_6] \t\t\t\r\n\t,\t\t\tt6.[Transaction Type]\t\t\t\tAS [Transaction Type_6]\t\t\t\r\n\t,\t\t\tt6.[Item Code]\t\t\t\t\t\tAS [Item Code_6]\t\t\t\t\r\n\t,\t\t\tt6.[Item Name]\t\t\t\t\t\tAS [Item Name_6]\t\r\n\t,\t\t\tt6.[Unit of Measure]\t\t\t\tAS [Unit of Measure_6]\t\t\t\r\n\t,\t\t\tCASE WHEN t6.[Unit of Measure] = 'LTR' THEN t6.[Quantity] * 0.0008745 ELSE t6.[Quantity] END\t\t\t\t\t\tAS [Quantity_6]\t\t\t\t\t\r\n\t,\t\t\tt6.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_6]\t\r\n\t,\t\t\tt7.[Document Number] \t\t\t\tAS [Document Number_7] \t\t\t\r\n\t,\t\t\tt7.[Transaction Type]\t\t\t\tAS [Transaction Type_7]\t\t\t\r\n\t,\t\t\tt7.[Item Code]\t\t\t\t\t\tAS [Item Code_7]\t\t\t\t\r\n\t,\t\t\tt7.[Item Name]\t\t\t\t\t\tAS [Item Name_7]\t\r\n\t,\t\t\tt7.[Unit of Measure]\t\t\t\tAS [Unit of Measure_7]\t\t\t\t\r\n\t,\t\t\tCASE WHEN t7.[Unit of Measure] = 'LTR' THEN t7.[Quantity] * 0.0008745 ELSE t7.[Quantity] END\t\t\t\t\t\tAS [Quantity_7]\t\t\t\t\t\r\n\t,\t\t\tt7.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_7]\r\n\t,\t\t\tt8.[Document Number] \t\t\t\tAS [Document Number_8] \t\t\t\r\n\t,\t\t\tt8.[Transaction Type]\t\t\t\tAS [Transaction Type_8]\t\t\t\r\n\t,\t\t\tt8.[Item Code]\t\t\t\t\t\tAS [Item Code_8]\t\t\t\t\r\n\t,\t\t\tt8.[Item Name]\t\t\t\t\t\tAS [Item Name_8]\t\r\n\t,\t\t\tt8.[Unit of Measure]\t\t\t\tAS [Unit of Measure_8]\t\t\t\t\r\n\t,\t\t\tCASE WHEN t8.[Unit of Measure] = 'LTR' THEN t8.[Quantity] * 0.0008745 ELSE t8.[Quantity] END\t\t\t\t\tAS [Quantity_8]\t\t\t\t\t\r\n\t,\t\t\tt8.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_8]\t\t\t\r\n\t,\t\t\tt9.[Document Number] \t\t\t\tAS [Document Number_9] \t\t\t\r\n\t,\t\t\tt9.[Transaction Type]\t\t\t\tAS [Transaction Type_9]\t\t\t\r\n\t,\t\t\tt9.[Item Code]\t\t\t\t\t\tAS [Item Code_9]\t\t\t\t\r\n\t,\t\t\tt9.[Item Name]\t\t\t\t\t\tAS [Item Name_9]\t\r\n\t,\t\t\tt9.[Unit of Measure]\t\t\t\tAS [Unit of Measure_9]\t\t\t\t\r\n\t,\t\t\tCASE WHEN t9.[Unit of Measure] = 'LTR' THEN t9.[Quantity] * 0.0008745 ELSE t9.[Quantity] END\t\t\t\t\tAS [Quantity_9]\t\t\t\t\t\r\n\t,\t\t\tt9.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_9]\t\t\t\r\n\t,\t\t\tt10.[Document Number] \t\t\t\tAS [Document Number_10] \t\t\t\r\n\t,\t\t\tt10.[Transaction Type]\t\t\t\tAS [Transaction Type_10]\t\t\t\r\n\t,\t\t\tt10.[Item Code]\t\t\t\t\t\tAS [Item Code_10]\t\t\t\t\r\n\t,\t\t\tt10.[Item Name]\t\t\t\t\t\tAS [Item Name_10]\t\r\n\t,\t\t\tt10.[Unit of Measure]\t\t\t\tAS [Unit of Measure_10]\t\t\t\t\r\n\t,\t\t\tCASE WHEN t10.[Unit of Measure] = 'LTR' THEN t10.[Quantity] * 0.0008745 ELSE t10.[Quantity] END\t\t\t\t\tAS [Quantity_10]\t\t\t\t\t\r\n\t,\t\t\tt10.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_10]\t\r\n\t,\t\t\tt11.[Document Number]\t\t\t\tAS [Document Number_11] \t\r\n\t,\t\t\tt11.[Transaction Type]\t\t\t\tAS [Transaction Type_11]\t\r\n\t,\t\t\tt11.[Item Code]\t\t\t\t\t\tAS [Item Code_11]\t\t\t\r\n\t,\t\t\tt11.[Item Name]\t\t\t\t\t\tAS [Item Name_11]\t\t\r\n\t,\t\t\tt11.[Unit of Measure]\t\t\t\tAS [Unit of Measure_11]\t\t\r\n\t,\t\t\tCASE WHEN t11.[Unit of Measure] = 'LTR' THEN t11.[Quantity] * 0.0008745 ELSE t11.[Quantity] END\t\t\t\t\tAS [Quantity_11]\t\t\t\r\n\t,\t\t\tt11.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_11]\t\t\r\n\t,\t\t\tt12.[Document Number]\t\t\t\tAS [Document Number_12]\t\t\t\r\n\t,\t\t\tt12.[Transaction Type]\t\t\t\tAS [Transaction Type_12]\t\t\t\r\n\t,\t\t\tt12.[Item Code]\t\t\t\t\t\tAS [Item Code_12]\t\t\t\t\r\n\t,\t\t\tt12.[Item Name]\t\t\t\t\t\tAS [Item Name_12]\t\t\r\n\t,\t\t\tt12.[Unit of Measure]\t\t\t\tAS [Unit of Measure_12]\t\t\t\r\n\t,\t\t\tCASE WHEN t12.[Unit of Measure] = 'LTR' THEN t12.[Quantity] * 0.0008745 ELSE t12.[Quantity] END\t\t\t\t\tAS [Quantity_12]\t\t\t\t\t\r\n\t,\t\t\tt12.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_12]\t\t\t\r\n\t,\t\t\tt13.[Document Number] \t\t\t\tAS [Document Number_13] \t\t\t\r\n\t,\t\t\tt13.[Transaction Type]\t\t\t\tAS [Transaction Type_13]\t\t\t\r\n\t,\t\t\tt13.[Item Code]\t\t\t\t\t\tAS [Item Code_13]\t\t\t\t\r\n\t,\t\t\tt13.[Item Name]\t\t\t\t\t\tAS [Item Name_13]\t\t\r\n\t,\t\t\tt13.[Unit of Measure]\t\t\t\tAS [Unit of Measure_13]\t\t\t\r\n\t,\t\t\tCASE WHEN t13.[Unit of Measure] = 'LTR' THEN t13.[Quantity] * 0.0008745 ELSE t13.[Quantity] END\t\t\t\t\tAS [Quantity_13]\t\t\t\t\t\r\n\t,\t\t\tt13.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_13]\t\t\t\t\r\n\t,\t\t\tt14.[Document Number] \t\t\t\tAS [Document Number_14] \t\t\t\r\n\t,\t\t\tt14.[Transaction Type]\t\t\t\tAS [Transaction Type_14]\t\t\t\r\n\t,\t\t\tt14.[Item Code]\t\t\t\t\t\tAS [Item Code_14]\t\t\t\t\r\n\t,\t\t\tt14.[Item Name]\t\t\t\t\t\tAS [Item Name_14]\t\t\r\n\t,\t\t\tt14.[Unit of Measure]\t\t\t\tAS [Unit of Measure_14]\t\t\t\t\r\n\t,\t\t\tCASE WHEN t14.[Unit of Measure] = 'LTR' THEN t14.[Quantity] * 0.0008745 ELSE t14.[Quantity] END\t\t\t\t\tAS [Quantity_14]\t\t\t\t\t\r\n\t,\t\t\tt14.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_14]\t\t\t\t\r\n\t,\t\t\tt15.[Document Number] \t\t\t\tAS [Document Number_15] \t\t\t\r\n\t,\t\t\tt15.[Transaction Type]\t\t\t\tAS [Transaction Type_15]\t\t\t\r\n\t,\t\t\tt15.[Item Code]\t\t\t\t\t\tAS [Item Code_15]\t\t\t\t\r\n\t,\t\t\tt15.[Item Name]\t\t\t\t\t\tAS [Item Name_15]\t\t\r\n\t,\t\t\tt15.[Unit of Measure]\t\t\t\tAS [Unit of Measure_15]\t\t\t\r\n\t,\t\t\tCASE WHEN t15.[Unit of Measure] = 'LTR' THEN t15.[Quantity] * 0.0008745 ELSE t15.[Quantity] END\t\t\t\t\tAS [Quantity_15]\t\t\t\t\t\r\n\t,\t\t\tt15.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_15]\t\t\t\r\n\t,\t\t\tt16.[Document Number] \t\t\t\tAS [Document Number_16] \t\t\t\r\n\t,\t\t\tt16.[Transaction Type]\t\t\t\tAS [Transaction Type_16]\t\t\t\r\n\t,\t\t\tt16.[Item Code]\t\t\t\t\t\tAS [Item Code_16]\t\t\t\t\r\n\t,\t\t\tt16.[Item Name]\t\t\t\t\t\tAS [Item Name_16]\t\r\n\t,\t\t\tt16.[Unit of Measure]\t\t\t\tAS [Unit of Measure_16]\t\t\t\t\r\n\t,\t\t\tCASE WHEN t16.[Unit of Measure] = 'LTR' THEN t16.[Quantity] * 0.0008745 ELSE t16.[Quantity] END\t\t\t\t\tAS [Quantity_16]\t\t\t\t\t\r\n\t,\t\t\tt16.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_16]\t\r\n\t,\t\t\tt17.[Document Number] \t\t\t\tAS [Document Number_17] \t\t\t\r\n\t,\t\t\tt17.[Transaction Type]\t\t\t\tAS [Transaction Type_17]\t\t\t\r\n\t,\t\t\tt17.[Item Code]\t\t\t\t\t\tAS [Item Code_17]\t\t\t\t\r\n\t,\t\t\tt17.[Item Name]\t\t\t\t\t\tAS [Item Name_17]\t\t\r\n\t,\t\t\tt17.[Unit of Measure]\t\t\t\tAS [Unit of Measure_17]\t\t\t\r\n\t,\t\t\tCASE WHEN t17.[Unit of Measure] = 'LTR' THEN t17.[Quantity] * 0.0008745 ELSE t17.[Quantity] END\t\t\t\t\tAS [Quantity_17]\t\t\t\t\t\r\n\t,\t\t\tt17.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_17]\t\r\n\t,\t\t\tt18.[Document Number] \t\t\t\tAS [Document Number_18] \t\t\t\r\n\t,\t\t\tt18.[Transaction Type]\t\t\t\tAS [Transaction Type_18]\t\t\t\r\n\t,\t\t\tt18.[Item Code]\t\t\t\t\t\tAS [Item Code_18]\t\t\t\t\r\n\t,\t\t\tt18.[Item Name]\t\t\t\t\t\tAS [Item Name_18]\t\r\n\t,\t\t\tt18.[Unit of Measure]\t\t\t\tAS [Unit of Measure_18]\t\t\t\t\t\r\n\t,\t\t\tCASE WHEN t18.[Unit of Measure] = 'LTR' THEN t18.[Quantity] * 0.0008745 ELSE t18.[Quantity] END\t\t\t\t\tAS [Quantity_18]\t\t\t\t\t\r\n\t,\t\t\tt18.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_18]\t\t\r\n\t,\t\t\tt19.[Document Number] \t\t\t\tAS [Document Number_19] \t\t\t\r\n\t,\t\t\tt19.[Transaction Type]\t\t\t\tAS [Transaction Type_19]\t\t\t\r\n\t,\t\t\tt19.[Item Code]\t\t\t\t\t\tAS [Item Code_19]\t\t\t\t\r\n\t,\t\t\tt19.[Item Name]\t\t\t\t\t\tAS [Item Name_19]\t\t\r\n\t,\t\t\tt19.[Unit of Measure]\t\t\t\tAS [Unit of Measure_19]\t\t\t\r\n\t,\t\t\tCASE WHEN t19.[Unit of Measure] = 'LTR' THEN t19.[Quantity] * 0.0008745 ELSE t19.[Quantity] END\t\t\t\t\t\tAS [Quantity_19]\t\t\t\t\t\r\n\t,\t\t\tt19.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_19]\t\t\r\n\t,\t\t\tt20.[Document Number] \t\t\t\tAS [Document Number_20] \t\t\t\r\n\t,\t\t\tt20.[Transaction Type]\t\t\t\tAS [Transaction Type_20]\t\t\t\r\n\t,\t\t\tt20.[Item Code]\t\t\t\t\t\tAS [Item Code_20]\t\t\t\t\r\n\t,\t\t\tt20.[Item Name]\t\t\t\t\t\tAS [Item Name_20]\t\r\n\t,\t\t\tt20.[Unit of Measure]\t\t\t\tAS [Unit of Measure_20]\t\t\t\t\r\n\t,\t\t\tCASE WHEN t20.[Unit of Measure] = 'LTR' THEN t20.[Quantity] * 0.0008745 ELSE t20.[Quantity] END\t\t\t\t\t\tAS [Quantity_20]\t\t\t\t\t\r\n\t,\t\t\tt20.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_20]\t\r\n\t,\t\t\tt21.[Document Number] \t\t\t\tAS [Document Number_21] \t\t\t\r\n\t,\t\t\tt21.[Transaction Type]\t\t\t\tAS [Transaction Type_21]\t\t\t\r\n\t,\t\t\tt21.[Item Code]\t\t\t\t\t\tAS [Item Code_21]\t\t\t\t\r\n\t,\t\t\tt21.[Item Name]\t\t\t\t\t\tAS [Item Name_21]\t\r\n\t,\t\t\tt21.[Unit of Measure]\t\t\t\tAS [Unit of Measure_21]\t\t\t\t\r\n\t,\t\t\tCASE WHEN t21.[Unit of Measure] = 'LTR' THEN t21.[Quantity] * 0.0008745 ELSE t21.[Quantity] END\t\t\t\t\t\tAS [Quantity_21]\t\t\t\t\t\r\n\t,\t\t\tt21.[Lot Numbers]\t\t\t\t\tAS [Lot Numbers_21]\t\r\n\t,\t\t\tCAST(GETDATE() AS DATE)\t\t\t\tAS [DateStamp]\r\n\tINTO\t\t[Trade].[TraceabilityLooped]\r\n\tFROM\t\t[Trade].[Traceability] t1\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Product Completion'\r\n\t\t\t\t\tAND\t\t\t[Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t) t2\r\n\tON\t\t\tt1.[Lot Numbers] = t2.[Lot Numbers]\r\n\tAND\t\t\tt1.[Item Code] = t2.[Item Code]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Material Issue'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t3\r\n\tON\t\t\tt2.[Document Number] = t3.[Document Number]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Product Completion'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t4\r\n\tON\t\t\tt3.[Lot Numbers] = t4.[Lot Numbers]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Material Issue'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t5\r\n\tON\t\t\tt4.[Document Number] = t5.[Document Number]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Product Completion'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t6\r\n\tON\t\t\tt5.[Lot Numbers] = t6.[Lot Numbers]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Material Issue'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t7\r\n\tON\t\t\tt6.[Document Number] = t7.[Document Number]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Product Completion'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t8\r\n\tON\t\t\tt7.[Lot Numbers] = t8.[Lot Numbers]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Material Issue'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t9\r\n\tON\t\t\tt8.[Document Number] = t9.[Document Number]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Product Completion'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t10\r\n\tON\t\t\tt9.[Lot Numbers] = t10.[Lot Numbers]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Material Issue'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t11\r\n\tON\t\t\tt10.[Document Number] = t11.[Document Number]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Product Completion'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t12\r\n\tON\t\t\tt11.[Lot Numbers] = t12.[Lot Numbers]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Material Issue'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t13\r\n\tON\t\t\tt12.[Document Number] = t13.[Document Number]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Product Completion'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t14\r\n\tON\t\t\tt13.[Lot Numbers] = t14.[Lot Numbers]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Material Issue'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t15\r\n\tON\t\t\tt14.[Document Number] = t15.[Document Number]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Product Completion'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t16\r\n\tON\t\t\tt15.[Lot Numbers] = t16.[Lot Numbers]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Material Issue'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t17\r\n\tON\t\t\tt16.[Document Number] = t17.[Document Number]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Product Completion'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t18\r\n\tON\t\t\tt17.[Lot Numbers] = t18.[Lot Numbers]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Material Issue'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t19\r\n\tON\t\t\tt18.[Document Number] = t19.[Document Number]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Product Completion'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t20\r\n\tON\t\t\tt19.[Lot Numbers] = t20.[Lot Numbers]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Work in Process Material Issue'\r\n\t\t\t\t\tAND\t\t\t([Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')\r\n\t\t\t\t\tOR\t\t\t[Item Code] LIKE 'FS%')\r\n\t\t\t\t) t21\r\n\tON\t\t\tt20.[Document Number] = t21.[Document Number]\r\n\tWHERE\t\tt1.[Transaction Type] = 'Sales Order Issue'\r\n\tAND\t\t\tt1.[Item Code] IN ('PR00900','PR00220','PR00150','PR00102','PR00100')"
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Trade/Margin"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-21T20:07:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_OrdersAndInvoicesTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_OrdersAndInvoicesTables",
						"description": "Clears then repopulates all 3 tables used in Finance's Orders and Invoice Report.",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Finance].[SQL_OrdersAndInvoicesTables]"
						},
						"linkedServiceName": {
							"referenceName": "SqlServerArgent",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Finance/Ad-hoc Fianance Reporting"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Pricing_Data_Marks_Script')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Pricing Data Marks Script",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlServerArgent",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "/********************************************************************************************************\r\n\t1.1 Update the raw tables with the current day's data, pulled from the data warehouse.\r\n********************************************************************************************************/\r\n\r\n\tDECLARE @DeleteTableStatement NVARCHAR(MAX)\r\n\tDECLARE Cur2 CURSOR READ_ONLY\r\n\tFOR\r\n\t\t\tSELECT  'Delete from [RAW].[' + TABLE_NAME + ']  where stamp <> (select distinct max(stamp) from [RAW].[' + TABLE_NAME + '])'\r\n\t\t\tFROM    INFORMATION_SCHEMA.TABLES\r\n\t\t\tWHERE   TABLE_SCHEMA = 'RAW'\r\n\t\t\t\t\tAND TABLE_TYPE = 'BASE TABLE' and TABLE_NAME like 'RAW.P.%'\r\n\r\n\r\n\tOPEN Cur2\r\n\tFETCH NEXT FROM Cur2 INTO @DeleteTableStatement\r\n\tWHILE @@FETCH_STATUS = 0\r\n\t\t  BEGIN\r\n\t\t\t\tPRINT 'Executing ' + @DeleteTableStatement\r\n\t\t\t\tEXECUTE sp_executesql @DeleteTableStatement\r\n\t\t\t\tFETCH NEXT FROM Cur2 INTO @DeleteTableStatement\r\n\t\t  END\r\n\tCLOSE Cur2\r\n\tDEALLOCATE Cur2\r\n\r\n/***************************************************\r\nDrop list of dates*/\r\n\r\nIF OBJECT_ID('[RAW].[DateList]','U') IS NOT NULL \r\n\t\tDROP TABLE [RAW].[DateList]\r\n\r\n/***************************************************\r\nDeclare variables to produce list of dates*/\r\n\r\n-- prevent set or regional settings from interfering with \r\n-- interpretation of dates / literals\r\nSET DATEFIRST  1, -- 1 = Monday, 7 = Sunday\r\n    DATEFORMAT mdy, \r\n    LANGUAGE   BRITISH;\r\n-- assume the above is here in all subsequent code blocks.\r\n\r\n--DECLARE @StartDate  date = '20190101';\r\n\r\n--DECLARE @CutoffDate date = DATEADD(DAY, -1, DATEADD(YEAR, 4, @StartDate));\r\n\r\nDECLARE @StartDate  date = '20181211';\r\n\r\nDECLARE @CutoffDate date =\t(\r\n\t\t\t\t\t\t\t\tSELECT\tMAX([Date])\r\n\t\t\t\t\t\t\t\tFROM\t(\r\n\t\t\t\t\t\t\t\t\t\t\tSELECT CAST([Date] AS DATE) AS [Date] FROM [RAW].[RAW.P.Argus Pricing]\r\n\t\t\t\t\t\t\t\t\t\t\tUNION ALL\r\n\t\t\t\t\t\t\t\t\t\t\tSELECT CAST([Date] AS DATE) AS [Date] FROM [RAW].[RAW.P.Reuters MGO Pricing]\r\n\t\t\t\t\t\t\t\t\t\t\t--UNION ALL\r\n\t\t\t\t\t\t\t\t\t\t\t--SELECT CAST([Date] AS DATE) AS [Date] FROM [Core].[RAW.P.Reuters Pricing]\r\n\t\t\t\t\t\t\t\t\t\t)d\r\n\t\t\t\t\t\t\t);\r\n\r\n/***************************************************\r\nCreate list of dates and insert into table*/\r\n\r\n;WITH seq(n) AS \r\n(\r\n  SELECT 0 UNION ALL SELECT n + 1 FROM seq\r\n  WHERE n < DATEDIFF(DAY, @StartDate, @CutoffDate)\r\n),\r\nd([Date]) AS \r\n(\r\n  SELECT DATEADD(DAY, n, @StartDate) FROM seq\r\n)\r\nSELECT [Date] \r\nINTO [RAW].[DateList]\r\nFROM d\r\nORDER BY [Date]\r\nOPTION (MAXRECURSION 0);\r\n\r\n--1461\r\n\r\n/***************************************************\r\nJoin Pricing table to DateList on a 1=1 basis*/\r\n\r\nIF OBJECT_ID('[Core].[PreJoinArgusPricing]','U') IS NOT NULL \r\n\t\tDROP TABLE [Core].[PreJoinArgusPricing]\r\n\r\nSELECT * \r\nINTO [Core].[PreJoinArgusPricing]\r\nFROM [RAW].[DateList]\r\nLEFT JOIN  (SELECT DISTINCT\tCAST([Description] AS NVARCHAR(250)) AS [Description]\r\n\t\t\t\t\t\t\t,[Contract/Delivery]\r\n\t\t\t\t\t\t\t,[Time Stamp]\r\n\t\t\t\t\t\t\t,[Price Type]\r\n\t\t\t\t\t\t\t,[Currency/Unit]\r\n\t\t\t\t\t\t\t,[Delivery Mode]\r\n\t\t\t\t\t\t\t,[Fill Type]\t\r\n\t\t\t\t\t\t\t, 'Argus' AS [Source]\t\t\r\n\t\t\tFROM [RAW].[RAW.P.Argus Pricing]) REF\r\nON 1=1\r\n\r\nUNION ALL\r\n\r\nSELECT\t\tdl.[Date] AS [Date]\r\n,\t\t\t[Description] AS [Description]\r\n,\t\t\t'' AS [Contract/Delivery]\r\n,\t\t\t'' AS [Time Stamp]\r\n,\t\t\t[Price Type] \r\n,\t\t\t'' AS [Currency/Unit]\r\n,\t\t\t'' AS [Delivery Mode]\r\n,\t\t\t'' AS [Fill Type]\r\n,\t\t\t'Reuters' AS [Source]\r\nFROM\t\t[RAW].[DateList] dl\r\nLEFT JOIN\t(\r\n\t\t\t\tSELECT\t\tDISTINCT CAST([Description] AS NVARCHAR(250)) AS [Description]\r\n\t\t\t\t,\t\t\t[Price Type]\r\n\t\t\t\tFROM\t\t[RAW].[RAW.P.Reuters MGO Pricing]\r\n\t\t\t) mgo\r\nON\t\t\t1=1\r\n\r\n/*UNION ALL\r\n\r\nSELECT\t\tdl.[Date] AS [Date]\r\n,\t\t\t[Description] AS [Description]\r\n,\t\t\t'' AS [Contract/Delivery]\r\n,\t\t\t'' AS [Time Stamp]\r\n,\t\t\t[Price Type] \r\n,\t\t\t'' AS [Currency/Unit]\r\n,\t\t\t'' AS [Delivery Mode]\r\n,\t\t\t'' AS [Fill Type]\r\n,\t\t\t'Reuters' AS [Source]\r\nFROM\t\t[RAW].[DateList] dl\r\nLEFT JOIN\t(\r\n\t\t\t\tSELECT\t\tDISTINCT CAST([Description] AS NVARCHAR(250)) AS [Description]\r\n\t\t\t\t,\t\t\t[Price Type]\r\n\t\t\t\tFROM\t\t[RAW].[RAW.P.Reuters Pricing]\r\n\t\t\t\tWHERE\t\t[Description] NOT LIKE 'EUR%'\r\n\t\t\t\tAND\t\t\t[Date] IS NOT NULL\r\n\t\t\t) rp\r\nON\t\t\t1=1 */\r\n\r\n--33603\r\n\r\n/***************************************************\r\nSimplify fuel price descriptions*/\r\n\r\nIF OBJECT_ID('[Core].[DescIDArgusPricing]','U') IS NOT NULL \r\n\t\tDROP TABLE [Core].[DescIDArgusPricing]\r\n\r\nSELECT DISTINCT \r\n\t\tPJ.*,\r\n--\t\tPJ.[Description] + '_' + PJ.[Price Type] AS [DescPT],\r\n--\t\tCASE \r\n--\t\tWHEN PJ.[Description] = 'Biodiesel Palm OME RED ARA range barge fob'\t\t\t\t\t\t\t\t\t\tTHEN 'Argus_Fuel_Price1'\r\n--\t\tWHEN PJ.[Description] = 'Biodiesel FAME 0C CFPP RED ARA range barge fob'\t\t\t\t\t\t\t\t\tTHEN 'Argus_Fuel_Price2'\r\n--\t\tWHEN PJ.[Description] = 'Biodiesel palm oil mill effluent RED Malaysia/Indonesia fob'\t\t\t\t\t\tTHEN 'Argus_Fuel_Price3'\r\n--\t\tWHEN PJ.[Description] = 'Biodiesel Rapeseed OME RED ARA range barge fob'\t\t\t\t\t\t\t\t\tTHEN 'Argus_Fuel_Price4'\r\n--\t\tWHEN PJ.[Description] = 'Biodiesel tallow OME RED ARA range barge fob'\t\t\t\t\t\t\t\t\t\tTHEN 'Argus_Fuel_Price5'\r\n--\t\tWHEN PJ.[Description] = 'UCO (used cooking oil) cif ARA USD/t'\t\t\t\t\t\t\t\t\t\t\t\tTHEN 'Argus_Fuel_Price6'\r\n--\t\tWHEN PJ.[Description] = 'UCO (used cooking oil) fob China'\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN 'Argus_Fuel_Price7'\r\n--\t\tWHEN PJ.[Description] = 'Biodiesel UCOME (used cooking oil) RED ARA range barge fob'\t\t\t\t\t\tTHEN 'Argus_Fuel_Price8'\r\n--\t\tWHEN PJ.[Description] = 'HVO (hydrotreated vegetable oil) fob ARA range (Class I) USD/t'\t\t\t\t\tTHEN 'Argus_Fuel_Price9'\r\n--\t\tWHEN PJ.[Description] = 'HVO (hydrotreated vegetable oil) fob ARA range (Class II) USD/t'\t\t\t\t\tTHEN 'Argus_Fuel_Price10'\r\n--\t\tWHEN PJ.[Description] = 'HVO (hydrotreated vegetable oil) fob ARA range (Class III) USD/t'\t\t\t\t\tTHEN 'Argus_Fuel_Price11'\r\n--\t\tWHEN PJ.[Description] = 'Palm oil futures Bursa Malaysia month'\t\t\t\t\t\t\t\t\t\t\t\tTHEN 'Argus_Fuel_Price12'\r\n--\t\tWHEN PJ.[Description] = 'Rapeseed oil fob Dutch Mill RSO'\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN 'Argus_Fuel_Price13'\r\n--\t\tWHEN PJ.[Description] = 'SAF (sustainable aviation fuel) fob ARA range (Class II) USD/t'\t\t\t\t\tTHEN 'Argus_Fuel_Price14'\r\n--\t\tWHEN PJ.[Description] = 'Tallow (categories 1 & 2) fca northwest Europe EUR/t'\t\t\t\t\t\t\t\tTHEN 'Argus_Fuel_Price15'\r\n--\t\tWHEN PJ.[Description] = 'Freight PME Malaysia - ARA 3-5kt'\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN 'Argus_Fuel_Price16'\r\n--\t\tWHEN PJ.[Description] = 'UCO (used cooking oil) RED bulk China fob'\t\t\t\t\t\t\t\t\t\t\tTHEN 'Argus_Fuel_Price17'\r\n--\t\tWHEN PJ.[Description] = 'Gasoil NWE 7-28 day swaps'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN 'Argus_Fuel_Price18'\r\n--\t\tWHEN PJ.[Description] = 'Soybean oil Argentina waterborne fob upriver USD/t month'\t\t\t\t\t\t\tTHEN 'Argus_Fuel_Price19'\r\n--\t\tWHEN PJ.[Description] = 'Biofuel soybean oil Argentina vs CBOT waterborne fob San Lorenzo'--high\t\t\t\tTHEN 'Argus_Fuel_Price20'\r\n--\t\tWHEN PJ.[Description] = 'Biofuel soybean oil Argentina vs CBOT waterborne fob San Lorenzo'--low\t\t\t\t\tTHEN 'Argus_Fuel_Price21'\r\n--\t\tWHEN PJ.[Description] = 'Biodiesel SME Argentina waterborne fob upriver'\t\t\t\t\t\t\t\t\tTHEN 'Argus_Fuel_Price22'\r\n--\t\tWHEN PJ.[Description] = 'Biodiesel UCOME (used cooking oil) RED bulk China fob'\t\t\t\t\t\t\t\tTHEN 'Argus_Fuel_Price23'\r\n--\t\tELSE 'ERROR' END AS [Description ID],\r\n\t\tAP.[Value]\r\n--\t\tISNULL(AP.[value],LAG(AP.[value],33602,-999) OVER(ORDER BY PJ.[description], PJ.[Date] ASC))  AS [Filled Value]\r\n--\t\tLAST_VALUE(AP.[value]) OVER( ORDER BY PJ.[description],  pj.[date] ASC) AS [LASTVALUE]\r\nINTO [Core].[DescIDArgusPricing]\r\nFROM [Core].[PreJoinArgusPricing] PJ\r\nLEFT JOIN\t(\r\n\t\t\t\tSELECT\t\tDISTINCT [Date]\r\n\t\t\t\t,\t\t\t[Description]\r\n\t\t\t\t,\t\t\t[Contract/Delivery]\r\n\t\t\t\t,\t\t\t[Time Stamp]\r\n\t\t\t\t,\t\t\t[Price Type] \r\n\t\t\t\t,\t\t\t[Currency/Unit]\r\n\t\t\t\t,\t\t\t[Delivery Mode]\r\n\t\t\t\t,\t\t\t[Fill Type]\r\n\t\t\t\t,\t\t\t[Value]\r\n\t\t\t\tFROM\t\t[RAW].[RAW.P.Argus Pricing]\r\n\r\n\t\t\t\tUNION ALL\r\n\r\n\t\t\t\tSELECT\t\tDISTINCT [Date] AS [Date]\r\n\t\t\t\t,\t\t\t[Description] AS [Description]\r\n\t\t\t\t,\t\t\t'' AS [Contract/Delivery]\r\n\t\t\t\t,\t\t\t'' AS [Time Stamp]\r\n\t\t\t\t,\t\t\t[Price Type] \r\n\t\t\t\t,\t\t\t'' AS [Currency/Unit]\r\n\t\t\t\t,\t\t\t'' AS [Delivery Mode]\r\n\t\t\t\t,\t\t\t'' AS [Fill Type]\r\n\t\t\t\t,\t\t\t[Value] AS [Value]\r\n\t\t\t\tFROM\t\t[RAW].[RAW.P.Reuters MGO Pricing]\r\n\r\n\t\t\t\t/*UNION ALL\t\r\n\r\n\t\t\t\tSELECT\t\tDISTINCT [Date] --AS [Date]\r\n\t\t\t\t,\t\t\t[Description] --AS [Description]\r\n\t\t\t\t,\t\t\t'' AS [Contract/Delivery]\r\n\t\t\t\t,\t\t\t'' AS [Time Stamp]\r\n\t\t\t\t,\t\t\t[Price Type] \r\n\t\t\t\t,\t\t\t'' AS [Currency/Unit]\r\n\t\t\t\t,\t\t\t'' AS [Delivery Mode]\r\n\t\t\t\t,\t\t\t'' AS [Fill Type]\r\n\t\t\t\t,\t\t\t[Value] AS [Value]\r\n\t\t\t\tFROM\t\t[RAW].[RAW.P.Reuters Pricing]\r\n\t\t\t\tWHERE\t\t[Description] NOT LIKE 'EUR%'\r\n\t\t\t\tAND\t\t\t[Date] IS NOT NULL */\r\n\t\t\t) AP\r\nON\tPJ.[Date]\t\t\t\t= AP.[Date]\r\nAND\tPJ.[description]\t\t= AP.[Description]\r\nAND\tPJ.[Contract/Delivery]\t= AP.[Contract/Delivery]\r\nAND\tPJ.[Time Stamp]\t\t\t= AP.[Time Stamp]\r\nAND\tPJ.[Price Type]\t\t\t= AP.[Price Type]\r\nAND\tPJ.[Currency/Unit]\t\t= AP.[Currency/Unit]\r\nAND\tPJ.[Delivery Mode]\t\t= AP.[Delivery Mode]\r\nAND\tPJ.[Fill Type]\t\t\t= AP.[Fill Type]\r\n\r\n--36126\r\n\r\n/***************************************************\r\nAverage Price Table Calculation*/\r\n\r\nIF OBJECT_ID('[Core].[BiofuelArgusPricing]','U') IS NOT NULL \r\n\t\tDROP TABLE [Core].[BiofuelArgusPricing]\r\n\r\nSELECT * \r\nINTO [Core].[BiofuelArgusPricing] \r\nFROM [Core].[DescIDArgusPricing]\r\nWHERE [Description] = 'Biofuel soybean oil Argentina vs CBOT waterborne fob San Lorenzo'\r\n\r\n--2922\r\n\r\nIF OBJECT_ID('[Core].[BiofuelAvgArgusPricing]','U') IS NOT NULL \r\n\t\tDROP TABLE [Core].[BiofuelAvgArgusPricing]\r\n\r\nSELECT\r\n\t\t[Date],\r\n\t\tAVG(CAST([Value] AS FLOAT)) AS [AVG_Value]\r\nINTO [Core].[BiofuelAvgArgusPricing]\r\nFROM [Core].[BiofuelArgusPricing]\r\nGROUP BY [Date]\r\nORDER BY [Date]\r\n\r\n--1461\r\n\r\nIF OBJECT_ID('[Core].[BiofuelArgusPricingDone]','U') IS NOT NULL \r\n\t\tDROP TABLE [Core].[BiofuelArgusPricingDone]\r\n\r\nSELECT DISTINCT\r\n\t\tAP.[Date],\r\n\t\tAP.[Description],\r\n\t\tAP.[Contract/Delivery],\r\n\t\tAP.[Time Stamp],\r\n\t\t'high low avg' AS [Price Type],\r\n\t\tAP.[Currency/Unit],\r\n\t\tAP.[Delivery Mode],\r\n\t\tAP.[Fill Type],\r\n\t\tAP.[Source],\r\n\t\tAV.[AVG_Value] AS [Value]\r\nINTO [Core].[BiofuelArgusPricingDone]\r\nFROM [Core].[BiofuelArgusPricing] AP\r\nLEFT JOIN [Core].[BiofuelAvgArgusPricing] AV\r\nON AV.[Date] = AP.[Date]\r\n\r\n--1461\r\n\r\n/***************************************************\r\nAddition Price Table Calculation*/\r\n\r\nIF OBJECT_ID('[Core].[SoybeanArgusPricing]','U') IS NOT NULL \r\n\t\tDROP TABLE [Core].[SoybeanArgusPricing]\r\n\r\nSELECT * \r\nINTO [Core].[SoybeanArgusPricing] \r\nFROM [Core].[DescIDArgusPricing]\r\nWHERE [Description] = 'Biofuel soybean oil Argentina vs CBOT waterborne fob San Lorenzo' \r\nOR [Description] = 'Soybean oil Argentina waterborne fob upriver USD/t month'\r\n\r\n--4014\r\n\r\n\r\nIF OBJECT_ID('[Core].[SoybeanAddArgusPricing]','U') IS NOT NULL \r\n\t\tDROP TABLE [Core].[SoybeanAddArgusPricing]\r\n\r\nSELECT\t[Date]\r\n,\t\tCASE WHEN [Null Flag] > 0 THEN NULL\r\n\t\t\tELSE NULLIF((SUM(CAST(CASE WHEN [Description] LIKE 'Biofuel%' THEN '0' ELSE [Value] END AS FLOAT)) \r\n\t\t\t\t\t+ SUM(CAST(CASE WHEN [Description] LIKE 'Soybean%' THEN '0' ELSE [Value] END AS FLOAT))/2),0)\r\n\t\t\tEND AS [SUM_Value]\r\nINTO [Core].[SoybeanAddArgusPricing]\r\nFROM\t\t(\r\n\t\t\t\tSELECT\t*\r\n\t\t\t\t,\t\tSUM(CASE WHEN [Value] IS NULL THEN 1 ELSE 0 END) OVER (PARTITION BY [Date])\t AS [Null Flag]\t\t\t\t\t\t\t\t\r\n\t\t\t\tFROM [Core].[SoybeanArgusPricing]\r\n\t\t\t) sap\r\nGROUP BY [Date]\r\n,\t\t[Null Flag]\r\nORDER BY [Date]\r\n\t\t\r\n--1461\r\n\r\nIF OBJECT_ID('[Core].[SoybeanArgusPricingDone]','U') IS NOT NULL \r\n\t\tDROP TABLE [Core].[SoybeanArgusPricingDone]\r\n\r\nSELECT DISTINCT\r\n\t\tAP.[Date],\r\n\t\t'Soybean oil Argentina waterborne fob upriver USD/t month' AS [Description],\r\n\t\t'' AS [Contract/Delivery],\r\n\t\tAP.[Time Stamp],\r\n\t\t'midpoint_calc' AS [Price Type],\r\n\t\tAP.[Currency/Unit],\r\n\t\tAP.[Delivery Mode],\r\n\t\tAP.[Fill Type],\r\n\t\tAP.[Source],\r\n\t\tAD.[SUM_Value] AS [Value]\r\nINTO [Core].[SoybeanArgusPricingDone]\r\nFROM [Core].[SoybeanArgusPricing] AP\r\nLEFT JOIN [Core].[SoybeanAddArgusPricing] AD\r\nON AD.[Date] = AP.[Date]\r\n\r\n\r\n/***************************************************\r\nJoin all pre partition*/\r\n\r\nIF OBJECT_ID('[Core].[ArgusPricingPrePrePartition]','U') IS NOT NULL \r\n\t\tDROP TABLE [Core].[ArgusPricingPrePrePartition]\r\n\r\nSELECT *\r\nINTO [Core].[ArgusPricingPrePrePartition]\r\nFROM [Core].[DescIDArgusPricing]\r\nUNION ALL\r\nSELECT *\r\nFROM [Core].[BiofuelArgusPricingDone]\r\nUNION ALL\r\nSELECT *\r\nFROM [Core].[SoybeanArgusPricingDone]\r\n\r\n\r\n--36525\r\n\r\nIF OBJECT_ID('[Core].[ArgusPricingPrePartition]','U') IS NOT NULL \r\n\t\tDROP TABLE [Core].[ArgusPricingPrePartition]\r\n\r\nSELECT\r\n\t\t*,\r\n\t\tCASE WHEN [Source] = 'Argus' THEN [Description]+'_'+[Price Type] ELSE [Description] END AS [Full Description]\r\nINTO [Core].[ArgusPricingPrePartition]\r\nFROM [Core].[ArgusPricingPrePrePartition]\r\n\r\n--36525\r\n\r\n\r\n/***************************************************\r\nLoop to create description ID's*/\r\n\r\nIF OBJECT_ID('[Core].[DescID]','U') IS NOT NULL \r\n\t\tDROP TABLE [Core].[DescID]\r\n\r\nCREATE TABLE [Core].[DescID]\r\n([Description] NVARCHAR(128), [ID] NVARCHAR(32))\r\n\r\nDECLARE @counter INT\r\nDECLARE @maxcount INT\r\nDECLARE @description NVARCHAR(128)\r\nSET @maxcount = (SELECT COUNT(DISTINCT [Full Description]) FROM [Core].[ArgusPricingPrePartition])\r\nSET @counter = 1\r\nDECLARE clicker CURSOR FOR\r\n\r\nSELECT DISTINCT [Full Description] FROM [Core].[ArgusPricingPrePartition]\r\n\r\nOPEN clicker\r\nFETCH NEXT FROM clicker INTO @description\r\n\r\nWHILE @@FETCH_STATUS = 0 AND @maxcount >= @counter\r\nBEGIN\r\n\t\tINSERT INTO [Core].[DescID]\r\n\t\tVALUES (@description,@counter)\r\n\t\tSET @counter = @counter + 1\r\n\t\tFETCH NEXT FROM clicker INTO @description\r\nEND\r\n\r\nCLOSE clicker\r\nDEALLOCATE clicker\r\n\r\n\r\n/***************************************************\r\nJoin ID's to main table*/\r\n\r\nIF OBJECT_ID('[Core].[FixedArgusPricingPrePartition]','U') IS NOT NULL \r\n\t\tDROP TABLE [Core].[FixedArgusPricingPrePartition]\r\n\r\nSELECT\tPP.*,\r\n\t\tID.[ID]\r\nINTO [Core].[FixedArgusPricingPrePartition]\r\nFROM [Core].[ArgusPricingPrePartition] PP\r\nLEFT JOIN [Core].[DescID] ID\r\nON ID.[Description] = PP.[Full Description]\r\nORDER BY [Full Description],[Date]\r\n\r\n--36525\r\n\r\n\r\n/***************************************************\r\nFills down any missing prices using first value*/\r\n\r\nIF OBJECT_ID('[Core].[FixedArgusPricing]','U') IS NOT NULL \r\n\t\tDROP TABLE [Core].[FixedArgusPricing]\r\n\r\nSELECT DISTINCT\r\n\t\t*, \r\n\t\tFIRST_VALUE([Value]) OVER (PARTITION BY ID.ID, ID.[Value_Partition] ORDER BY ID.[ID], [Date]) AS [NewValue]\r\nINTO [Core].[FixedArgusPricing]\r\nFROM   (SELECT\r\n\t\t\t*,\r\n\t\t\tSUM(CASE WHEN [Value] IS NOT NULL THEN 1 ELSE 0 END) OVER (ORDER BY [ID], [Date]) AS [Value_Partition]\r\n\t\tFROM [Core].[FixedArgusPricingPrePartition]\r\n\t\t) AS ID\r\nORDER BY [ID], [Date] ASC\r\n\r\n--38,802\r\n\r\n--the bottom of the script aligns to point 2.6 in tom stews data marks script all be it with some neatening up to do most likely.\r\n\r\n\r\n/***************************************************\r\nJoin fuel lookup data and FX rates*/\r\n\r\n\t\tIF OBJECT_ID('[Trade].[Pricing]','U') IS NOT NULL\r\n\t\t\tDROP TABLE [Trade].[Pricing]\r\n\r\n\t\tSELECT\t\tfap.[Date]\r\n\t\t,\t\t\tIIF(fap.[Value] IS NULL,1,0)\t\tAS [Filled Down Flag]\r\n\t\t,\t\t\tfap.[Full Description]\t\t\t\tAS [Attribute]\r\n\t\t,\t\t\tfap.[NewValue]\t\t\t\t\t\tAS [Original Value] \r\n\t\t,\t\t\tfl.[Category]\r\n\t\t,\t\t\tfl.[Name]\r\n\t\t,\t\t\tfl.[UOM]\t\t\t\t\t\t\tAS [Original UOM]\r\n\t\t,\t\t\tfl.[Transport Cost]\r\n\t\t,\t\t\tfl.[Transport UOM]\r\n\t\t,\t\t\tfl.[Yield Assumption]\r\n\t\t,\t\t\tfx.[EUR:USD] as [FX Rates.Eur:USD] \r\n\t\t,\t\t\tCASE WHEN fl.[UOM] = 'USD/t'\t\t\tTHEN fap.[NewValue]/fx.[EUR:USD]\tELSE fap.[NewValue] END AS [Value EUR]\r\n\t\t,\t\t\tCASE WHEN fl.[Transport UOM] = 'USD'\tTHEN fl.[Transport Cost]/fx.[EUR:USD]\tELSE CASE WHEN fl.[Transport Cost] IS NULL THEN 0 ELSE fl.[Transport Cost] END END AS [Transport Cost EUR]\r\n\t\t,\t\t\t'€/mt' AS [UOM]\r\n\t\tINTO\t\t[Trade].[Pricing]\r\n\t\tFROM\t\t[Core].[FixedArgusPricing] fap\r\n\t\tLEFT JOIN\t(\r\n\t\t\t\t\t\tSELECT\t\tDISTINCT *\r\n\t\t\t\t\t\tFROM\t\t[RAW].[RAW.P.Fuel Lookup]\r\n\t\t\t\t\t) fl\r\n\t\tON\t\t\tfap.[Description] = fl.[Description]\r\n\t\tAND\t\t\tfap.[Price Type] = CASE WHEN fl.[Name] = 'SBO fob Argentina' THEN 'midpoint_calc' ELSE fl.[Price Type] END\r\n\t\tLEFT JOIN\t(\r\n\t\t\t\t\t\tSELECT CAST(fxr.[CONVERSION_DATE] AS Date) 'Date'\r\n                            , fxr.[EUR USD] as 'EUR:USD'\r\n                        FROM [Core].[FXRates] fxr\r\n                        INNER JOIN [RAW].[DateList] dl ON dl.[Date] = CAST(fxr.[CONVERSION_DATE] AS Date)\r\n                        WHERE fxr.[EUR USD] > 0\r\n\t\t\t\t\t) fx\r\n\t\tON\t\t\tfx.[Date] = fap.[Date]\r\n\t\tWHERE\t\tfap.[NewValue] IS NOT NULL\r\n\r\n/***************************************************\r\nCreate [Trade].[FuelLookup] table */\r\n\r\nIF OBJECT_ID('[Trade].[FuelLookup]','U') IS NOT NULL \r\n\tDROP TABLE [Trade].[FuelLookup]\r\n\r\n\r\nSELECT [Source]\r\n\t, [description] 'Type'\r\n\t, [Category]\r\n\t, [Name]\r\n\t, [Official Name]\r\n\t, [Platts Code]\r\n\t, [MAVG]\r\n\t, [Contract Basis]\r\n\t, [Location]\r\n\t, [UOM]\r\n\t, [Transport Cost]\r\n\t, [Transport UOM]\r\n\t, [Yield Assumption]\r\n\t, [Key Feedstocks]\r\n\t, GETDATE() 'Stamp'\r\n\r\nINTO [Trade].[FuelLookup]\r\n\r\nFROM [RAW].[RAW.P.Fuel Lookup]"
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Trade/Pricing"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-02T10:43:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_PurchaseContracts_SalesContracts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PC_SC",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[SupplyChain].[SQL_PurchaseContractsSalesContracts]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Supply Chain"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_SalesContracts_Invoices')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SalesContracts_To_Invoices",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlServerArgent",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "/********************************************************************************************************\r\n\tStep 3.1:\tCreate a table linking sales invoices to sales contracts.\r\n********************************************************************************************************/\t\r\n\r\n\tIF OBJECT_ID('[SupplyChain].[SalesInvoicesAndContractNumber]','U') IS NOT NULL\r\n\t\tDROP TABLE [SupplyChain].[SalesInvoicesAndContractNumber]\r\n\r\n\tSELECT\t\tsc.[Sales Contract Number]\r\n\t,\t\t\tsoi.[Order Number]\r\n    ,\t\t\tsoi.[Parent Order]\r\n    ,\t\t\tsoi.[Invoice Price]\r\n    ,\t\t\tsoi.[Invoiced Quantity]\r\n    ,\t\t\tsoi.[Transactional Currency Code]\r\n    ,\t\t\tsoi.[Business Unit Name]\r\n    ,\t\t\tsoi.[Transaction Date]\r\n    ,\t\t\tsoi.[Invoice Amount]\r\n    ,\t\t\tsoi.[EUR:GBP]\r\n    ,\t\t\tsoi.[EUR:USD]\r\n    ,\t\t\tsoi.[Sold To Party ID]\r\n    ,\t\t\tCAST(GETDATE() AS DATE) AS [DateStamp]\r\n\tINTO\t\t[SupplyChain].[SalesInvoicesAndContractNumber]\r\n\tFROM\t\tFinance.SalesOrdersAndInvoices soi\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\tDISTINCT [Agreement Header ID]\r\n\t\t\t\t\t,\t\t\t[Order Number]\r\n\t\t\t\t\tFROM\t\tCore.[SalesOrders]\r\n\t\t\t\t\tWHERE\t\t[Submitted Flag] = 'Y'\r\n\t\t\t\t) so\r\n\tON\t\t\tsoi.[Order Number] = so.[Order Number]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\tDISTINCT [Sales Contract Number]\r\n\t\t\t\t\t,\t\t\t[Contract Header ID]\r\n\t\t\t\t\tFROM\t\tCore.SalesContracts\r\n\t\t\t\t) sc\r\n\tON\t\t\tsc.[Contract Header ID] = so.[Agreement Header ID]\r\n\tORDER BY\t[Transaction Date]\r\n\r\n\r\n /********************************************************************************************************\r\n\tStep 3.2:\tCreate a table linking purchase invoices to purchase contracts.\r\n********************************************************************************************************/\r\n\r\n\tIF OBJECT_ID('[SupplyChain].[PurchaseInvoicesAndContractNumber]','U') IS NOT NULL\r\n\t\tDROP TABLE [SupplyChain].[PurchaseInvoicesAndContractNumber]\r\n\r\n\tSELECT\t\tpc.[Blanket Purchase Agreement Number]\r\n\t,\t\t\tpoi.[Order Number]\r\n    ,\t\t\tpoi.[Parent Order]\r\n    ,\t\t\tpoi.[Supplier/Customer]\r\n    ,\t\t\tpoi.[Supplier/Customer Number]\r\n    ,\t\t\tpoi.[Agreement Number/Sales Contract Number]\r\n    ,\t\t\tpoi.[Item Code]\r\n    ,\t\t\tpoi.[Item Description]\r\n    ,\t\t\tpoi.[Category Code]\r\n    ,\t\t\tpoi.[UOM Code]\r\n    ,\t\t\tpoi.[Agreement Price]\r\n    ,\t\t\tpoi.Quantity\r\n    ,\t\t\tpoi.[Invoice Price]\r\n    ,\t\t\tpoi.[Invoiced Quantity]\r\n    ,\t\t\tpoi.[Invoice Line Amount]\r\n    ,\t\t\tpoi.Currency\r\n    ,\t\t\tpoi.[Business Unit]\r\n    ,\t\t\tpoi.[Inventory Organization Code]\r\n    ,\t\t\tpoi.[Inventory Organization Name]\r\n    ,\t\t\tpoi.[Ordered Quantity]\r\n    ,\t\t\tpoi.[Approval Status]\r\n    ,\t\t\tpoi.[Mode of Transport]\r\n    ,\t\t\tpoi.[Freight Terms]\r\n    ,\t\t\tpoi.[Invoice Number]\r\n    ,\t\t\tpoi.[Order Status]\r\n    ,\t\t\tpoi.[Transaction Date]\r\n    ,\t\t\tpoi.[Invoice Amount]\r\n    ,\t\t\tpoi.[EUR USD]\r\n    ,\t\t\tpoi.[EUR GBP]\r\n    ,\t\t\tCAST(GETDATE() AS DATE) AS [DateStamp]\r\n\tINTO\t\t[SupplyChain].[PurchaseInvoicesAndContractNumber]\r\n\tFROM\t\t[Finance].[PurchaseOrdersAndinvoices] poi \r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\tDISTINCT [Blanket Purchase Agreement Number]\r\n\t\t\t\t\t,\t\t\t[PO Header ID]\r\n\t\t\t\t\t,\t\t\t[PO Line ID]\r\n\t\t\t\t\tFROM\t\tCore.PurchaseContracts\r\n\t\t\t\t) pc\r\n\tON\t\t\tpoi.[From Header ID] = pc.[PO Header ID]\r\n\tAND\t\t\tpoi.[From Line ID] = pc.[PO Line ID]\r\n\tWHERE\t\t[poi].[Business Unit] NOT IN ('ROTIE BU','Quatra BU')"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Supply Chain"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_ShippingData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Shipping Data",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlServerArgent",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "/********************************************************************************************************\r\n\tStep 5.1:\tCombine shipping files\r\n********************************************************************************************************/\t\r\n\r\n\r\n\tIF OBJECT_ID('[SupplyChain].[Shipping]','U') IS NOT NULL\r\n\t\tDROP TABLE [SupplyChain].[Shipping]\r\n\t\r\n\tSELECT\t\tROW_NUMBER()OVER(ORDER BY [Country]) AS [Index]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [File] = 'UK22'\r\n\t\t\t\t\t\tTHEN 0\r\n\t\t\t\t\tWHEN [x].[BL date] IS NULL\r\n\t\t\t\t\t\tTHEN 0\r\n\t\t\t\t\tWHEN CAST(ISNULL([x].[BL date],CAST(GETDATE() AS DATE)) AS DATE) < CAST(GETDATE() AS DATE) AND ([x].[ATA Date] > CAST(GETDATE() AS DATE) OR [x].[ATA Date] IS NULL)\r\n\t\t\t\t\t\tTHEN 1\r\n\t\t\t\t\tELSE 0\r\n\t\t\t\tEND AS [Live Shipment Indicator]\r\n\t,\t\t\t*\r\n\tINTO\t\t[SupplyChain].[Shipping]\r\n\tFROM\t\t(\r\n\r\n\t\t\t\t\tSELECT\t\t'UK'\t\t\tAS [Country]\r\n\t\t\t\t\t,\t\t\t[Product]\r\n\t\t\t\t\t,\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN [BL date] = '02-05 Aug'\r\n\t\t\t\t\t\t\t\t\t\tTHEN '2023-08-05'\r\n\t\t\t\t\t\t\t\t\tWHEN [BL date] = '02-04 Aug'\r\n\t\t\t\t\t\t\t\t\t\tTHEN '2023-08-04'\r\n\t\t\t\t\t\t\t\t\tWHEN [BL date] = '27-30 Jun'\r\n\t\t\t\t\t\t\t\t\t\tTHEN '2023-07-30'\r\n\t\t\t\t\t\t\t\t\tWHEN [BL date] LIKE '%as%'\r\n\t\t\t\t\t\t\t\t\t\tTHEN CONCAT('2023-',RIGHT(REPLACE([BL date],'as ',''),2),'-',LEFT(REPLACE([BL date],'as ',''),2))\r\n\t\t\t\t\t\t\t\t\tELSE [BL date]\r\n\t\t\t\t\t\t\t\tEND AS [BL date]\r\n\t\t\t\t\t,\t\t\t[Port of load/disch]\t\t\tAS [Planned Port]\r\n\t\t\t\t\t,\t\t\tCAST(CASE\r\n\t\t\t\t\t\t\t\t\t\tWHEN [Planned] IS NULL\r\n\t\t\t\t\t\t\t\t\t\t\tTHEN NULL\r\n\t\t\t\t\t\t\t\t\t\tWHEN TRY_CAST([Planned] AS DATE) IS NOT NULL\r\n\t\t\t\t\t\t\t\t\t\t\tTHEN [Planned]\r\n\t\t\t\t\t\t\t\t\t\tWHEN Planned = 'end Sep-begin Oct'\r\n\t\t\t\t\t\t\t\t\t\t\tTHEN '2023-09-30'\r\n\t\t\t\t\t\t\t\t\t\tWHEN [Planned] LIKE 'end%'\r\n\t\t\t\t\t\t\t\t\t\t\tTHEN CAST(CAST(CONCAT('30 ',RIGHT([Planned],LEN([Planned])-CHARINDEX('-',[Planned],1)),' 2023') AS DATE) AS NVARCHAR(255))\r\n\t\t\t\t\t\t\t\t\t\tELSE CAST(CAST(REPLACE(CONCAT(RIGHT(REPLACE(REPLACE(REPLACE(REPLACE([Planned],'April','Apr'),'17-Mar','17 Mar'),' Port Klang',''),' Ams',''),6),' 2023'),'  ',' ') AS DATE) AS NVARCHAR(255))\r\n\t\t\t\t\t\t\t\t\tEND AS DATE)\tAS [Planned Date]\r\n\t\t\t\t\t,\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN [ATA Stanlow] IS NULL OR [ATA Stanlow] LIKE '%Vasto%' OR [ATA Stanlow] LIKE '%Port Klang%' OR [ATA Stanlow] LIKE 'SBLC'\r\n\t\t\t\t\t\t\t\t\t\tTHEN NULL\r\n\t\t\t\t\t\t\t\t\tWHEN TRY_CAST([ATA Stanlow] AS DATE) IS NOT NULL\r\n\t\t\t\t\t\t\t\t\t\tTHEN [ATA Stanlow]\r\n\t\t\t\t\t\t\t\t\tELSE CAST(CAST(REPLACE(CONCAT(RIGHT([ATA Stanlow],6),' 2023'),'  ','') AS DATE) AS NVARCHAR(255))\r\n\t\t\t\t\t\t\t\tEND\tAS [ATA Date]\r\n\t\t\t\t\t,\t\t\t[Vessel]\r\n\t\t\t\t\t,\t\t\t[Vessel IMO]\r\n\t\t\t\t\t,\t\t\t[mothervessel]\r\n\t\t\t\t\t,\t\t\t[Mothervessel IMO]\r\n\t\t\t\t\t,\t\t\t[x] AS [Vessel Transfer Indicator]\r\n\t\t\t\t\t,\t\t\t[Customer]\r\n\t\t\t\t\t,\t\t\t[L/D]\r\n\t\t\t\t\t,\t\t\t[Tonnage]\t\t\r\n\t\t\t\t\t,\t\t\tLTRIM(RTRIM(REPLACE([Oracle Contract nr.],'+','/'))) AS [Oracle Contract nr.]\r\n\t\t\t\t\t,\t\t\tLTRIM(RTRIM(REPLACE(REPLACE(REPLACE([Oracle Order nr.],'+','/'),' ->) ','/'),'(','')))  AS [Oracle Order nr.]\r\n\t\t\t\t\t,\t\t\tLTRIM(RTRIM(REPLACE([Self-procurement orders],'+','/'))) AS [Self-procurement orders]\r\n\t\t\t\t\t,\t\t\tLTRIM(RTRIM(REPLACE([Transport  orders],'+','/'))) AS [Transport orders]\r\n\t\t\t\t\t,\t\t\t'UK23' AS [File]\r\n\t\t\t\t\tFROM\t\t[RAW].[SC.Shipping2023UK]\r\n\t\t\t\t\tWHERE\t\t[Product] IS NOT NULL\r\n\t\t\t\t\tAND\t\t\t[Product] <> 'Product'\r\n\r\n\r\n\t\t\t\t\tUNION ALL\r\n\r\n\t\t\t\t\tSELECT\t\t'UK' AS [Country]\r\n\t\t\t\t\t,\t\t\t[Product]\r\n\t\t\t\t\t,\t\t\t[BL date]\r\n\t\t\t\t\t,\t\t\t[Port of loading] AS [Planned Port]\r\n\t\t\t\t\t,\t\t\tCAST(CASE\r\n\t\t\t\t\t\t\t\t\t\tWHEN [Planned] = 'Amsterdam' OR [Planned] IS NULL\r\n\t\t\t\t\t\t\t\t\t\t\tTHEN NULL\r\n\t\t\t\t\t\t\t\t\t\tWHEN TRY_CAST([Planned] AS DATE) IS NOT NULL\r\n\t\t\t\t\t\t\t\t\t\t\tTHEN [Planned]\r\n\t\t\t\t\t\t\t\t\t\tELSE CAST(CAST(REPLACE(REPLACE(CONCAT(RIGHT(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE([Planned],'Rdam',''),'Rtm ',''),' Ams',''),'Rtd',''),'Ams ',''),'Sept','Sep'),6),' 2022'),'  ',' '),'-',' ') AS DATE) AS NVARCHAR(255))\r\n\t\t\t\t\t\t\t\t\tEND AS DATE) AS [Planned Date]\r\n\t\t\t\t\t,\t\t\tNULLIF([ATA],'Amsterdam') AS [ATA Date]\r\n\t\t\t\t\t,\t\t\t[Vessel]\r\n\t\t\t\t\t,\t\t\t'' AS [Vessel IMO]\r\n\t\t\t\t\t,\t\t\t[mothervessel]\r\n\t\t\t\t\t,\t\t\t'' AS [Mothervessel IMO]\r\n\t\t\t\t\t,\t\t\t'' AS [Vessel Transfer Indicator]\r\n\t\t\t\t\t,\t\t\t[Customer]\r\n\t\t\t\t\t,\t\t\t[L/D]\r\n\t\t\t\t\t,\t\t\t[Tonnage]\r\n\t\t\t\t\t,\t\t\tLTRIM(RTRIM(REPLACE([Oracle Contract nr.],'+','/'))) AS [Oracle Contract nr.]\r\n\t\t\t\t\t,\t\t\tLTRIM(RTRIM(REPLACE([Oracle Order nr.],'+','/'))) AS [Oracle Order nr.]\t\r\n\t\t\t\t\t,\t\t\tLTRIM(RTRIM(REPLACE([Self-procurement orders],'+','/'))) AS [Self-procurement orders]\r\n\t\t\t\t\t,\t\t\tLTRIM(RTRIM(REPLACE([Transport orders],'+','/'))) AS [Transport orders]\r\n\t\t\t\t\t,\t\t\t'UK22' AS [File]\r\n\t\t\t\t\tFROM\t\t[RAW].[SC.Shipping2022UK]\r\n\t\t\t\t\tWHERE\t\t[Product] IS NOT NULL\r\n\r\n\t\t\t\t\tUNION ALL\r\n\r\n\t\t\t\t\tSELECT\t\t'NL' AS [Country]\r\n\t\t\t\t\t,\t\t\t[Product]\r\n\t\t\t\t\t,\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN [BL date] LIKE '%blend%'\r\n\t\t\t\t\t\t\t\t\t\tTHEN NULL\r\n\t\t\t\t\t\t\t\t\tELSE REPLACE(REPLACE([BL date],'week 42-43','2023-10-22'),'week 43','2023-10-22') \r\n\t\t\t\t\t\t\t\tEND AS [BL date] \r\n\t\t\t\t\t,\t\t\t[Port of load/disch] AS [Planned Port]\r\n\t\t\t\t\t,\t\t\tCAST(REPLACE(REPLACE(REPLACE(CASE\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN TRY_CAST([Planned] AS DATE) IS NOT NULL\r\n\t\t\t\t\t\t\t\t\t\t\t\tTHEN [Planned]\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN [Planned] LIKE 'end%'\r\n\t\t\t\t\t\t\t\t\t\t\t\tTHEN CAST(CAST(CONCAT('30 ',RIGHT([Planned],LEN([Planned])-CHARINDEX('-',REPLACE([Planned],'end ','end-'),1)),' ',ISNULL([Year],'2023')) AS DATE) AS NVARCHAR(255))\r\n\t\t\t\t\t\t\t\t\t\t\tELSE CONCAT(RIGHT(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE([Planned],'2-3','3'),'mid','15'),' Stanlow',''),'April ->',''),'Sept','Sep'),'Maart','Mar'),' Rdam',''),' Rtd',''),'Savona ',''),' Ams',''),'June','Jun'),6),' ',ISNULL(CASE WHEN [Year] = '#VALUE!' THEN '2022' WHEN [Year] = '#REF!' THEN '2023' WHEN [Year] = 'Barge' THEN '2023' ELSE [Year] END,'2023'))\r\n\t\t\t\t\t\t\t\t\t\tEND,'-5 ','05'),'-6','06'),'-7 ','07') AS DATE) AS [Planned Date]\r\n\t\t\t\t\t,\t\t\t[ATA Ams] AS [ATA Date]\r\n\t\t\t\t\t,\t\t\t[Vessel]\r\n\t\t\t\t\t,\t\t\t'' AS [Vessel IMO]\r\n\t\t\t\t\t,\t\t\t'' AS [mothervessel]\r\n\t\t\t\t\t,\t\t\t'' AS [Mothervessel IMO]\r\n\t\t\t\t\t,\t\t\t'' AS [Vessel Transfer Indicator]\r\n\t\t\t\t\t,\t\t\t[Customer]\r\n\t\t\t\t\t,\t\t\t[L/D]\r\n\t\t\t\t\t,\t\t\t[Tonnage]\r\n\t\t\t\t\t,\t\t\tLTRIM(RTRIM(REPLACE([Contract],'+','/'))) AS [Oracle Contract nr.]\r\n\t\t\t\t\t,\t\t\tLTRIM(RTRIM(REPLACE(REPLACE([Order],'4 8','4/8'),'+','/')))  AS [Oracle Order nr.]\t\r\n\t\t\t\t\t,\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN [T or Self-procument] LIKE '%T'\r\n\t\t\t\t\t\t\t\t\t\tTHEN NULL\r\n\t\t\t\t\t\t\t\t\tELSE LTRIM(RTRIM(REPLACE([T or Self-procument],'+','/')))\r\n\t\t\t\t\t\t\t\tEND AS [Self-procurement orders]\r\n\t\t\t\t\t,\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN [T or Self-procument] LIKE '%T'\r\n\t\t\t\t\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE([T or Self-procument],'+','/')))\r\n\t\t\t\t\t\t\t\t\tELSE NULL\r\n\t\t\t\t\t\t\t\tEND AS [Transport orders]\r\n\t\t\t\t\t,\t\t\t'NL' AS [File]\r\n\t\t\t\t\tFROM\t\t[RAW].[SC.ShippingNL]\r\n\t\t\t\t\tWHERE\t\t[Product] IS NOT NULL\r\n\t\t\t\t\tAND\t\t\t[Product] <> 'Product'\r\n\t\t\t) x\r\n\tWHERE\t[Product] <> 'Product'\r\n\r\n /********************************************************************************************************\r\n\tStep 5.2:\tSeparate order numbers.\r\n********************************************************************************************************/\t\r\n\tIF OBJECT_ID('tempdb..#ShippingSeparatedContractsAndOrders/','U') IS NOT NULL\r\n\t\tDROP TABLE #ShippingSeparatedContractsAndOrders\r\n\t\r\n\tSELECT\t\t[s].[Index]\r\n\t,\t\t\t[Live Shipment Indicator]\r\n\t,\t\t\t[Country]\r\n\t,\t\t\t[Product]\r\n\t,\t\t\t[BL Date]\r\n\t,\t\t\t[Planned Port]\r\n\t,\t\t\t[Planned Date]\r\n\t,\t\t\t[ATA Date]\r\n\t,\t\t\t[Vessel]\r\n\t,\t\t\t[s].[mothervessel]\r\n\t,\t\t\t[Vessel IMO]\r\n\t,\t\t\t[s].[mothervessel IMO]\r\n\t,\t\t\t[Vessel Transfer Indicator]\r\n\t,\t\t\t[Customer]\r\n\t,\t\t\t[L/D]\r\n\t,\t\t\t[Tonnage]\r\n\t,\t\t\t[Oracle Contract nr.]\r\n\t,\t\t\t[Oracle Order nr.]\r\n\t,\t\t\t[Self-procurement orders]\r\n\t,\t\t\t[Transport orders]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Oracle Order nr.] NOT LIKE '%/%'\r\n\t\t\t\t\t\tTHEN [Oracle Order nr.]\r\n\t\t\t\t\tELSE LTRIM(RTRIM(REPLACE(SUBSTRING([Oracle Order nr.],1,[OrderSeparatorIndex1]),'/','')))\r\n\t\t\t\tEND AS [Order1]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [NumberOfOrders] = 2\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Oracle Order nr.],[OrderSeparatorIndex1],LEN([Oracle Order nr.])),'/','')))\r\n\t\t\t\t\tWHEN [NumberOfOrders] > 2\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Oracle Order nr.],[OrderSeparatorIndex1],[OrderSeparatorIndex2]-[OrderSeparatorIndex1]),'/','')))\r\n\t\t\t\t\tELSE NULL\r\n\t\t\t\tEND AS [Order2]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [NumberOfOrders] = 3\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Oracle Order nr.],[OrderSeparatorIndex2],LEN([Oracle Order nr.])),'/','')))\r\n\t\t\t\t\tWHEN [NumberOfOrders] > 3\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Oracle Order nr.],[OrderSeparatorIndex2],[OrderSeparatorIndex3]-[OrderSeparatorIndex2]),'/','')))\r\n\t\t\t\t\tELSE NULL\r\n\t\t\t\tEND AS [Order3]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [NumberOfOrders] = 4\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Oracle Order nr.],[OrderSeparatorIndex3],LEN([Oracle Order nr.])),'/','')))\r\n\t\t\t\t\tWHEN [NumberOfOrders] > 4\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Oracle Order nr.],[OrderSeparatorIndex3],[OrderSeparatorIndex4]-[OrderSeparatorIndex3]),'/','')))\r\n\t\t\t\t\tELSE NULL\r\n\t\t\t\tEND AS [Order4]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [NumberOfOrders] = 5\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Oracle Order nr.],[OrderSeparatorIndex4],LEN([Oracle Order nr.])),'/','')))\r\n\t\t\t\tEND AS [Order5]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Self-procurement orders] NOT LIKE '%/%'\r\n\t\t\t\t\t\tTHEN [Self-procurement orders]\r\n\t\t\t\t\tELSE LTRIM(RTRIM(REPLACE(SUBSTRING([Self-procurement orders],1,[SP_OrderSeparatorIndex1]),'/','')))\r\n\t\t\t\tEND AS [SP_Order1]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [NumberOf_SP_Orders] = 2\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Self-procurement orders],[SP_OrderSeparatorIndex1],LEN([Self-procurement orders])),'/','')))\r\n\t\t\t\t\tWHEN [NumberOf_SP_Orders] > 2\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Self-procurement orders],[SP_OrderSeparatorIndex1],[SP_OrderSeparatorIndex2]-[SP_OrderSeparatorIndex1]),'/','')))\r\n\t\t\t\t\tELSE NULL\r\n\t\t\t\tEND AS [SP_Order2]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [NumberOf_SP_Orders] = 3\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Self-procurement orders],[SP_OrderSeparatorIndex2],LEN([Self-procurement orders])),'/','')))\r\n\t\t\t\t\tWHEN [NumberOf_SP_Orders] > 3\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Self-procurement orders],[SP_OrderSeparatorIndex2],[SP_OrderSeparatorIndex3]-[SP_OrderSeparatorIndex2]),'/','')))\r\n\t\t\t\t\tELSE NULL\r\n\t\t\t\tEND AS [SP_Order3]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [NumberOf_SP_Orders] = 4\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Self-procurement orders],[SP_OrderSeparatorIndex3],LEN([Self-procurement orders])),'/','')))\r\n\t\t\t\t\tWHEN [NumberOf_SP_Orders] > 4\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Self-procurement orders],[SP_OrderSeparatorIndex3],[SP_OrderSeparatorIndex4]-[SP_OrderSeparatorIndex3]),'/','')))\r\n\t\t\t\t\tELSE NULL\r\n\t\t\t\tEND AS [SP_Order4]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [NumberOf_SP_Orders] = 5\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Self-procurement orders],[SP_OrderSeparatorIndex4],LEN([Self-procurement orders])),'/','')))\r\n\t\t\t\tEND AS [SP_Order5]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Transport orders] NOT LIKE '%/%'\r\n\t\t\t\t\t\tTHEN [Transport orders]\r\n\t\t\t\t\tELSE LTRIM(RTRIM(REPLACE(SUBSTRING([Transport orders],1,[T_OrderSeparatorIndex1]),'/','')))\r\n\t\t\t\tEND AS [T_Order1]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [NumberOf_T_Orders] = 2\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Transport orders],[T_OrderSeparatorIndex1],LEN([Transport orders])),'/','')))\r\n\t\t\t\t\tWHEN [NumberOf_T_Orders] > 2\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Transport orders],[T_OrderSeparatorIndex1],[T_OrderSeparatorIndex2]-[T_OrderSeparatorIndex1]),'/','')))\r\n\t\t\t\t\tELSE NULL\r\n\t\t\t\tEND AS [T_Order2]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [NumberOf_T_Orders] = 3\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Transport orders],[T_OrderSeparatorIndex2],LEN([Transport orders])),'/','')))\r\n\t\t\t\t\tWHEN [NumberOf_T_Orders] > 3\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Transport orders],[T_OrderSeparatorIndex2],[T_OrderSeparatorIndex3]-[T_OrderSeparatorIndex2]),'/','')))\r\n\t\t\t\t\tELSE NULL\r\n\t\t\t\tEND AS [T_Order3]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [NumberOf_T_Orders] = 4\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Transport orders],[T_OrderSeparatorIndex3],LEN([Transport orders])),'/','')))\r\n\t\t\t\t\tWHEN [NumberOf_T_Orders] > 4\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Transport orders],[T_OrderSeparatorIndex3],[T_OrderSeparatorIndex4]-[T_OrderSeparatorIndex3]),'/','')))\r\n\t\t\t\t\tELSE NULL\r\n\t\t\t\tEND AS [T_Order4]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [NumberOf_T_Orders] = 5\r\n\t\t\t\t\t\tTHEN LTRIM(RTRIM(REPLACE(SUBSTRING([Transport orders],[T_OrderSeparatorIndex4],LEN([Transport orders])),'/','')))\r\n\t\t\t\tEND AS [T_Order5]\r\n\tINTO\t\t#ShippingSeparatedContractsAndOrders\r\n\tFROM\t\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\t,\t\t\tLEN([Oracle Order nr.]) - LEN(REPLACE([Oracle Order nr.],'/','')) + 1 AS [NumberOfOrders]\r\n\t\t\t\t\t,\t\t\tLEN([Oracle Order nr.]) - LEN(REPLACE([Oracle Order nr.],'/','')) AS [NumberOfOrderSeparators]\r\n\t\t\t\t\t,\t\t\tCHARINDEX('/',[Oracle Order nr.],1) AS [OrderSeparatorIndex1]\r\n\t\t\t\t\t,\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN LEN([Oracle Order nr.]) - LEN(REPLACE([Oracle Order nr.],'/','')) > 1\r\n\t\t\t\t\t\t\t\t\t\tTHEN CHARINDEX('/',[Oracle Order nr.],CHARINDEX('/',[Oracle Order nr.])+1)\r\n\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\tEND AS [OrderSeparatorIndex2]\r\n\t\t\t\t\t,\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN LEN([Oracle Order nr.]) - LEN(REPLACE([Oracle Order nr.],'/','')) > 2\r\n\t\t\t\t\t\t\t\t\t\tTHEN CHARINDEX('/',[Oracle Order nr.],CHARINDEX('/',[Oracle Order nr.],CHARINDEX('/',[Oracle Order nr.])+1)+1)\r\n\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\tEND AS [OrderSeparatorIndex3]\r\n\t\t\t\t\t,\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN LEN([Oracle Order nr.]) - LEN(REPLACE([Oracle Order nr.],'/','')) > 3\r\n\t\t\t\t\t\t\t\t\t\tTHEN CHARINDEX('/',[Oracle Order nr.],CHARINDEX('/',[Oracle Order nr.],CHARINDEX('/',[Oracle Order nr.],CHARINDEX('/',[Oracle Order nr.])+1)+1)+1)\r\n\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\tEND AS [OrderSeparatorIndex4]\r\n\t\t\t\t\t,\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN LEN([Oracle Order nr.]) - LEN(REPLACE([Oracle Order nr.],'/','')) > 4\r\n\t\t\t\t\t\t\t\t\t\tTHEN CHARINDEX('/',[Oracle Order nr.],CHARINDEX('/',[Oracle Order nr.],CHARINDEX('/',[Oracle Order nr.],CHARINDEX('/',[Oracle Order nr.],CHARINDEX('/',[Oracle Order nr.])+1)+1)+1)+1)\r\n\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\tEND AS [OrderSeparatorIndex5]\r\n\t\t\t\t\t,\t\t\tLEN([Self-procurement orders]) - LEN(REPLACE([Self-procurement orders],'/','')) + 1 AS [NumberOf_SP_Orders]\r\n\t\t\t\t\t,\t\t\tLEN([Self-procurement orders]) - LEN(REPLACE([Self-procurement orders],'/','')) AS [NumberOf_SP_OrderSeparators]\r\n\t\t\t\t\t,\t\t\tCHARINDEX('/',[Self-procurement orders],1) AS [SP_OrderSeparatorIndex1]\r\n\t\t\t\t\t,\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN LEN([Self-procurement orders]) - LEN(REPLACE([Self-procurement orders],'/','')) > 1\r\n\t\t\t\t\t\t\t\t\t\tTHEN CHARINDEX('/',[Self-procurement orders],CHARINDEX('/',[Self-procurement orders])+1)\r\n\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\tEND AS [SP_OrderSeparatorIndex2]\r\n\t\t\t\t\t,\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN LEN([Self-procurement orders]) - LEN(REPLACE([Self-procurement orders],'/','')) > 2\r\n\t\t\t\t\t\t\t\t\t\tTHEN CHARINDEX('/',[Self-procurement orders],CHARINDEX('/',[Self-procurement orders],CHARINDEX('/',[Self-procurement orders])+1)+1)\r\n\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\tEND AS [SP_OrderSeparatorIndex3]\r\n\t\t\t\t\t,\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN LEN([Self-procurement orders]) - LEN(REPLACE([Self-procurement orders],'/','')) > 3\r\n\t\t\t\t\t\t\t\t\t\tTHEN CHARINDEX('/',[Self-procurement orders],CHARINDEX('/',[Self-procurement orders],CHARINDEX('/',[Self-procurement orders],CHARINDEX('/',[Self-procurement orders])+1)+1)+1)\r\n\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\tEND AS [SP_OrderSeparatorIndex4]\r\n\t\t\t\t\t,\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN LEN([Self-procurement orders]) - LEN(REPLACE([Self-procurement orders],'/','')) > 4\r\n\t\t\t\t\t\t\t\t\t\tTHEN CHARINDEX('/',[Self-procurement orders],CHARINDEX('/',[Self-procurement orders],CHARINDEX('/',[Self-procurement orders],CHARINDEX('/',[Self-procurement orders],CHARINDEX('/',[Self-procurement orders])+1)+1)+1)+1)\r\n\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\tEND AS [SP_OrderSeparatorIndex5]\r\n\t\t\t\t\t,\t\t\tLEN([Transport orders]) - LEN(REPLACE([Transport orders],'/','')) + 1 AS [NumberOf_T_Orders]\r\n\t\t\t\t\t,\t\t\tLEN([Transport orders]) - LEN(REPLACE([Transport orders],'/','')) AS [NumberOf_T_OrderSeparators]\r\n\t\t\t\t\t,\t\t\tCHARINDEX('/',[Transport orders],1) AS [T_OrderSeparatorIndex1]\r\n\t\t\t\t\t,\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN LEN([Transport orders]) - LEN(REPLACE([Transport orders],'/','')) > 1\r\n\t\t\t\t\t\t\t\t\t\tTHEN CHARINDEX('/',[Transport orders],CHARINDEX('/',[Transport orders])+1)\r\n\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\tEND AS [T_OrderSeparatorIndex2]\r\n\t\t\t\t\t,\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN LEN([Transport orders]) - LEN(REPLACE([Transport orders],'/','')) > 2\r\n\t\t\t\t\t\t\t\t\t\tTHEN CHARINDEX('/',[Transport orders],CHARINDEX('/',[Transport orders],CHARINDEX('/',[Transport orders])+1)+1)\r\n\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\tEND AS [T_OrderSeparatorIndex3]\r\n\t\t\t\t\t,\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN LEN([Transport orders]) - LEN(REPLACE([Transport orders],'/','')) > 3\r\n\t\t\t\t\t\t\t\t\t\tTHEN CHARINDEX('/',[Transport orders],CHARINDEX('/',[Transport orders],CHARINDEX('/',[Transport orders],CHARINDEX('/',[Transport orders])+1)+1)+1)\r\n\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\tEND AS [T_OrderSeparatorIndex4]\r\n\t\t\t\t\t,\t\t\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN LEN([Transport orders]) - LEN(REPLACE([Transport orders],'/','')) > 4\r\n\t\t\t\t\t\t\t\t\t\tTHEN CHARINDEX('/',[Transport orders],CHARINDEX('/',[Transport orders],CHARINDEX('/',[Transport orders],CHARINDEX('/',[Transport orders],CHARINDEX('/',[Transport orders])+1)+1)+1)+1)\r\n\t\t\t\t\t\t\t\t\tELSE 0\r\n\t\t\t\t\t\t\t\tEND AS [T_OrderSeparatorIndex5]\r\n\t\t\t\t\tFROM\t\tSupplyChain.Shipping \r\n\t\t\t\t) s\r\n\r\n\tUNION ALL\r\n\r\n\tSELECT\t\t[Index]\r\n\t,\t\t\t[Live Shipment Indicator]\r\n\t,\t\t\t[Country]\r\n\t,\t\t\t[Product]\r\n\t,\t\t\t[BL Date]\r\n\t,\t\t\t[Planned Port]\r\n\t,\t\t\t[Planned Date]\r\n\t,\t\t\t[ATA Date]\r\n\t,\t\t\t[Vessel]\r\n\t,\t\t\t[mothervessel]\r\n\t,\t\t\t[Vessel IMO]\r\n\t,\t\t\t[mothervessel IMO]\r\n\t,\t\t\t[Vessel Transfer Indicator]\r\n\t,\t\t\t[Customer]\r\n\t,\t\t\t[L/D]\r\n\t,\t\t\t[Tonnage]\r\n\t,\t\t\t[Oracle Contract nr.]\r\n\t,\t\t\t[Oracle Order nr.]\r\n\t,\t\t\tNULL AS [Self-procurement orders]\r\n\t,\t\t\tNULL AS [Transport orders]\r\n\t,\t\t\tNULL AS [Order1]\r\n\t,\t\t\tNULL AS [Order2]\r\n\t,\t\t\tNULL AS [Order3]\r\n\t,\t\t\tNULL AS [Order4]\r\n\t,\t\t\tNULL AS [Order5]\r\n\t,\t\t\tNULL AS [SP_Order1]\r\n\t,\t\t\tNULL AS [SP_Order2]\r\n\t,\t\t\tNULL AS [SP_Order3]\r\n\t,\t\t\tNULL AS [SP_Order4]\r\n\t,\t\t\tNULL AS [SP_Order5]\r\n\t,\t\t\tNULL AS [T_Order1]\r\n\t,\t\t\tNULL AS [T_Order2]\r\n\t,\t\t\tNULL AS [T_Order3]\r\n\t,\t\t\tNULL AS [T_Order4]\r\n\t,\t\t\tNULL AS [T_Order5]\r\n\tFROM\t\tSupplyChain.Shipping\r\n\tWHERE\t\t[Oracle Order nr.] IS NULL\r\n\r\n /********************************************************************************************************\r\n\tStep 5.3:\tUnpivot data to create list of order numbers per shipping index.\r\n********************************************************************************************************/\r\n\r\n\tSELECT\t\t*\r\n\tINTO\t\t#ShippingOrdersUnpivot\r\n\tFROM\t\t(\r\n\t\t\t\t\tSELECT\t\t[b].[Index]\r\n\t\t\t\t\t,\t\t\t[Live Shipment Indicator]\r\n\t\t\t\t\t,\t\t\t[b].[Country]\r\n\t\t\t\t\t,\t\t\t[b].[BL date]\r\n\t\t\t\t\t,\t\t\t[b].[Planned Port]\r\n\t\t\t\t\t,\t\t\t[b].[Planned Date]\r\n\t\t\t\t\t,\t\t\t[b].[ATA Date]\r\n\t\t\t\t\t,\t\t\t[b].[Vessel]\r\n\t\t\t\t\t,\t\t\t[b].[mothervessel]\r\n\t\t\t\t\t,\t\t\t[Vessel IMO]\r\n\t\t\t\t\t,\t\t\t[Mothervessel IMO]\r\n\t\t\t\t\t,\t\t\t[Vessel Transfer Indicator]\r\n\t\t\t\t\t,\t\t\t[b].[Product]\r\n\t\t\t\t\t,\t\t\t[b].[Oracle Contract nr.]\r\n\t\t\t\t\t,\t\t\t[b].[Oracle Order nr.]\r\n\t\t\t\t\t,\t\t\t[b].[Customer]\r\n\t\t\t\t\t,\t\t\t[b].[L/D]\r\n\t\t\t\t\t,\t\t\t[b].[Tonnage]\r\n\t\t\t\t\t,\t\t\tREPLACE([Order Number],'SO','') AS [Order Number]\r\n\t\t\t\t\t,\t\t\t'Standard' AS [Order Type] \r\n\t\t\t\t\tFROM\t\t#ShippingSeparatedContractsAndOrders a\r\n\t\t\t\t\tUNPIVOT\t\t([Order Number] FOR [Order] IN ([Order1],[Order2],[Order3],[Order4],[Order5])) b\r\n\t\t\t\t\t\r\n\t\t\t\t\tUNION ALL\r\n\r\n\t\t\t\t\tSELECT\t\t[b].[Index]\r\n\t\t\t\t\t,\t\t\t[Live Shipment Indicator]\r\n\t\t\t\t\t,\t\t\t[b].[Country]\r\n\t\t\t\t\t,\t\t\t[b].[BL date]\r\n\t\t\t\t\t,\t\t\t[b].[Planned Port]\r\n\t\t\t\t\t,\t\t\t[b].[Planned Date]\r\n\t\t\t\t\t,\t\t\t[b].[ATA Date]\r\n\t\t\t\t\t,\t\t\t[b].[Vessel]\r\n\t\t\t\t\t,\t\t\t[b].[mothervessel]\r\n\t\t\t\t\t,\t\t\t[Vessel IMO]\r\n\t\t\t\t\t,\t\t\t[Mothervessel IMO]\r\n\t\t\t\t\t,\t\t\t[Vessel Transfer Indicator]\r\n\t\t\t\t\t,\t\t\t[b].[Product]\r\n\t\t\t\t\t,\t\t\t[b].[Oracle Contract nr.]\r\n\t\t\t\t\t,\t\t\t[b].[Oracle Order nr.]\r\n\t\t\t\t\t,\t\t\t[b].[Customer]\r\n\t\t\t\t\t,\t\t\t[b].[L/D]\r\n\t\t\t\t\t,\t\t\t[b].[Tonnage]\r\n\t\t\t\t\t,\t\t\tREPLACE([b].[SP Order Number],'SO','') AS [Order Number]\r\n\t\t\t\t\t,\t\t\t'Self-Procurement' AS [Order Type]\r\n\t\t\t\t\tFROM\t\t#ShippingSeparatedContractsAndOrders\r\n\t\t\t\t\tUNPIVOT\t\t([SP Order Number] FOR [S-P Order] IN([SP_Order1],[SP_Order2],[SP_Order3],[SP_Order4],[SP_Order5])) b\r\n\r\n\t\t\t\t\tUNION ALL\r\n\r\n\t\t\t\t\tSELECT\t\t[b].[Index]\r\n\t\t\t\t\t,\t\t\t[Live Shipment Indicator]\r\n\t\t\t\t\t,\t\t\t[b].[Country]\r\n\t\t\t\t\t,\t\t\t[b].[BL date]\r\n\t\t\t\t\t,\t\t\t[b].[Planned Port]\r\n\t\t\t\t\t,\t\t\t[b].[Planned Date]\r\n\t\t\t\t\t,\t\t\t[b].[ATA Date]\r\n\t\t\t\t\t,\t\t\t[b].[Vessel]\r\n\t\t\t\t\t,\t\t\t[b].[mothervessel]\r\n\t\t\t\t\t,\t\t\t[Vessel IMO]\r\n\t\t\t\t\t,\t\t\t[Mothervessel IMO]\r\n\t\t\t\t\t,\t\t\t[Vessel Transfer Indicator]\r\n\t\t\t\t\t,\t\t\t[b].[Product]\r\n\t\t\t\t\t,\t\t\t[b].[Oracle Contract nr.]\r\n\t\t\t\t\t,\t\t\t[b].[Oracle Order nr.]\r\n\t\t\t\t\t,\t\t\t[b].[Customer]\r\n\t\t\t\t\t,\t\t\t[b].[L/D]\r\n\t\t\t\t\t,\t\t\t[b].[Tonnage]\r\n\t\t\t\t\t,\t\t\tREPLACE([b].[T Order Number],'SO','') AS [Order Number]\r\n\t\t\t\t\t,\t\t\t'Transport' AS [Order Type]\r\n\t\t\t\t\tFROM\t\t#ShippingSeparatedContractsAndOrders\r\n\t\t\t\t\tUNPIVOT\t\t([T Order Number] FOR [T Order] IN([T_Order1],[T_Order2],[T_Order3],[T_Order4],[T_Order5])) b\r\n\t\t\t\t) u\r\n\tORDER BY\t[Index]\r\n\r\n /********************************************************************************************************\r\n\tStep 5.4:\tCreate final shipping contracts table\r\n********************************************************************************************************/\t\r\n\r\nIF OBJECT_ID('SupplyChain.ShippingContracts','U') IS NOT NULL\r\n\t\tDROP TABLE SupplyChain.ShippingContracts\r\n\r\n\tSELECT\t\tu.*\r\n\t,\t\t\tCOALESCE(poi.[Blanket Purchase Agreement Number],soi.[Sales Contract Number]) AS [Agreement/Sales Contract Number]\r\n\t,\t\t\tCOALESCE(poi.[Transaction Date],soi.[Transaction Date]) AS [Transaction Date]\r\n\t,\t\t\tCOALESCE(poi.[Total Invoiced Quantity],soi.[Total Invoiced Quantity]) AS [Total Invoiced Quantity]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN TRY_CAST([u].[Order Number] AS FLOAT) IS NULL THEN 'Purchases'\r\n\t\t\t\t\tELSE 'Sales'\r\n\t\t\t\tEND AS [Sales/Purchase]\r\n\t,\t\t\tpoi.[Inventory Organization Code]\r\n\t,\t\t\tpoi.[Inventory Organization Name]\r\n\t,\t\t\tpoi.[Approval Status]\r\n\t,\t\t\tpoi.[Order Status]\t\t\t\r\n\t,\t\t\tCOALESCE(poi.[Supplier/Customer Number],sc.[Customer Number]) AS [Supplier/Customer Number]\r\n\t,\t\t\tCOALESCE(pc.[Supplier Name],sc.[Customer]) AS [Supplier/Customer]\t\t\r\n\t,\t\t\ti.[Item Code]\r\n\t,\t\t\ti.[Item Name]\r\n\t,\t\t\tCOALESCE(poi.[Mode of Transport],sc.[Shipping Method]) AS [Shipping Method]\r\n\t,\t\t\tCOALESCE(poi.[Business Unit],soi.[Business Unit Name],pc.[Business Unit Name],sc.[Business Unit Name]) AS [Business Unit Name]\r\n\t,\t\t\tCAST(LEFT(so.[Request Ship Date],10) AS DATE) AS [Request Ship Date]\r\n\t,\t\t\tCAST(LEFT(so.[Schedule Ship Date],10) AS DATE) AS [Schedule Ship Date]\r\n\t,\t\t\tCAST(LEFT(po.[Requested Date],10) AS DATE) AS [Requested Date]\r\n\t,\t\t\tCAST(LEFT([Pick up Date],10) AS DATE) AS [Pick Up Date]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN TRY_CAST([u].[Order Number] AS FLOAT) IS NULL\r\n\t\t\t\t\t\tTHEN bu.[Country]\r\n\t\t\t\t\tELSE COALESCE(l2.[Country],l3.[Country],l4.[Country])\r\n\t\t\t\tEND AS [Ship To Country]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN TRY_CAST([u].[Order Number] AS FLOAT) IS NULL\r\n\t\t\t\t\t\tTHEN bu.[City]\r\n\t\t\t\t\tELSE COALESCE(l2.[City],L3.[City],l4.[City])\r\n\t\t\t\tEND AS [Ship To City]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN TRY_CAST([u].[Order Number] AS FLOAT) IS NULL\r\n\t\t\t\t\t\tTHEN bu.[Postal Code]\r\n\t\t\t\t\tELSE COALESCE(l2.[Postal Code],l3.[Postal Code],l4.[Postal Code])\r\n\t\t\t\tEND AS [Ship To Postal Code]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN TRY_CAST([u].[Order Number] AS FLOAT) IS NULL\r\n\t\t\t\t\t\tTHEN bu.[Address]\r\n\t\t\t\t\tELSE COALESCE(l2.[Address],l3.[Address],l4.[Address])\r\n\t\t\t\tEND AS [Ship To Address]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN TRY_CAST([u].[Order Number] AS FLOAT) IS NULL\r\n\t\t\t\t\t\tTHEN bu.[Business Unit Name]\r\n\t\t\t\t\tELSE COALESCE(l2.[Company Name],l3.[Company Name],l4.[Company Name])\r\n\t\t\t\tEND AS [Ship To Company]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN TRY_CAST([u].[Order Number] AS FLOAT) IS NULL\r\n\t\t\t\t\t\tTHEN COALESCE(l1.[Country],l5.[Country])\r\n\t\t\t\t\tELSE bu.[Country]\r\n\t\t\t\tEND AS [Ship From Country]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN TRY_CAST([u].[Order Number] AS FLOAT) IS NULL\r\n\t\t\t\t\t\tTHEN COALESCE(l1.[City],l5.[City])\r\n\t\t\t\t\tELSE bu.[City]\r\n\t\t\t\tEND AS [Ship From City]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN TRY_CAST([u].[Order Number] AS FLOAT) IS NULL\r\n\t\t\t\t\t\tTHEN COALESCE(l1.[Postal Code],L5.[Postal Code])\r\n\t\t\t\t\tELSE bu.[Postal Code]\r\n\t\t\t\tEND AS [Ship From Postal Code]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN TRY_CAST([u].[Order Number] AS FLOAT) IS NULL\r\n\t\t\t\t\t\tTHEN COALESCE(l1.[Address],NULLIF(REPLACE(CONCAT([l5].[Company Name],',',ISNULL([l5].[Address Line 2],''),',',ISNULL([l5].[Address Line 3],'')),',,',','),','))\r\n\t\t\t\t\tELSE bu.[Address]\r\n\t\t\t\tEND AS [Ship From Address]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN TRY_CAST([u].[Order Number] AS FLOAT) IS NULL\r\n\t\t\t\t\t\tTHEN COALESCE(l1.[Company Name],l5.[Company Name])\r\n\t\t\t\t\tELSE bu.[Business Unit Name]\t\r\n\t\t\t\tEND AS [Ship From Company]\r\n\tINTO\t\tSupplyChain.ShippingContracts\r\n\tFROM\t\t#ShippingOrdersUnpivot u\t\t\t\t\t\t\t\r\n\tLEFT JOIN\t[Core].[PurchaseOrders] po\r\n\tON\t\t\tpo.[Purchase Order Number] = u.[Order Number]\t\t\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Order Number] \r\n\t\t\t\t\t,\t\t\t[Request Ship Date]\r\n\t\t\t\t\t,\t\t\t[Submitted Flag]\r\n\t\t\t\t\t,\t\t\t[Sold To Party ID]\r\n\t\t\t\t\t,\t\t\t[Inventory Item ID]\r\n\t\t\t\t\t,\t\t\tMAX([Schedule Ship Date]) AS [Schedule Ship Date]\r\n\t\t\t\t\tFROM\t\t[Core].[SalesOrders]\r\n\t\t\t\t\tGROUP BY\t[Order Number] \r\n\t\t\t\t\t,\t\t\t[Request Ship Date]\r\n\t\t\t\t\t,\t\t\t[Submitted Flag]\r\n\t\t\t\t\t,\t\t\t[Sold To Party ID]\r\n\t\t\t\t\t,\t\t\t[Inventory Item ID]\r\n\t\t\t\t) so\r\n\tON\t\t\tso.[Order Number] = u.[Order Number]\r\n\tAND\t\t\tLEN(u.[Order Number]) <> 3\t\t\t\r\n\tAND\t\t\tso.[Submitted Flag] = 'Y'\t\t\t\t\t\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\tDISTINCT [PO Header ID]\r\n\t\t\t\t\t,\t\t\t[PO Line ID]\r\n\t\t\t\t\t,\t\t\t[Ship From Location ID]\r\n\t\t\t\t\t,\t\t\t[Deliver To Location ID]\r\n\t\t\t\t\t,\t\t\t[Transaction Type]\r\n\t\t\t\t\tFROM\t\t[Core].[ReceivingTransactions]\r\n\t\t\t\t) rt\r\n\tON\t\t\tpo.[PO Header ID] = rt.[PO Header ID]\r\n\tAND\t\t\tpo.[PO Line ID] = rt.[PO Line ID]\r\n\tAND\t\t\trt.[Transaction Type] = 'RECEIVE'\t\t\t\t\t\t\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\tDISTINCT [SOURCE_HEADER_NUMBER]\r\n\t\t\t\t\t,\t\t\t[SHIP_FROM_LOCATION_ID]\r\n\t\t\t\t\t,\t\t\t[SHIP_TO_LOCATION_ID]\r\n\t\t\t\t\tFROM\t\t[Core].[ShippingDetails]\r\n\t\t\t\t) sd\r\n\tON\t\t\tso.[Order Number] = sd.[SOURCE_HEADER_NUMBER]\r\n\tAND\t\t\tso.[Submitted Flag] = 'Y'\t\t\t\t\t\t\t\t\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Blanket Purchase Agreement Number]\r\n\t\t\t\t\t,\t\t\t[Order Number]\r\n\t\t\t\t\t,\t\t\tMIN([Transaction Date]) AS [Transaction Date]\r\n\t\t\t\t\t,\t\t\t[Inventory Organization Code]\r\n\t\t\t\t\t,\t\t\t[Inventory Organization Name]\r\n\t\t\t\t\t,\t\t\t[Approval Status]\r\n\t\t\t\t\t,\t\t\t[Order Status]\t\t\t\r\n\t\t\t\t\t,\t\t\t[Supplier/Customer Number]\r\n\t\t\t\t\t,\t\t\t[Mode of Transport]\r\n\t\t\t\t\t,\t\t\t[Business Unit]\r\n\t\t\t\t\t,\t\t\tSUM(CAST([Invoiced Quantity] AS DECIMAL(28,4))) AS [Total Invoiced Quantity]\r\n\t\t\t\t\tFROM\t\tSupplyChain.PurchaseInvoicesAndContractNumber\r\n\t\t\t\t\tWHERE\t\t[Approval Status] <> 'CANCELLED'\r\n\t\t\t\t\tGROUP BY\t[Blanket Purchase Agreement Number]\r\n\t\t\t\t\t,\t\t\t[Order Number]\r\n\t\t\t\t\t,\t\t\t[Inventory Organization Code]\r\n\t\t\t\t\t,\t\t\t[Inventory Organization Name]\r\n\t\t\t\t\t,\t\t\t[Approval Status]\r\n\t\t\t\t\t,\t\t\t[Order Status]\t\t\t\r\n\t\t\t\t\t,\t\t\t[Supplier/Customer Number]\r\n\t\t\t\t\t,\t\t\t[Mode of Transport]\r\n\t\t\t\t\t,\t\t\t[Business Unit]\r\n\t\t\t\t) poi\r\n\tON\t\t\tpo.[Purchase Order Number] = poi.[Order Number]\t\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Business Unit Name]\r\n\t\t\t\t\t,\t\t\t[Order Number]\r\n\t\t\t\t\t,\t\t\t[Sales Contract Number]\r\n\t\t\t\t\t,\t\t\tSUM([Invoiced Quantity]) AS [Total Invoiced Quantity]\r\n\t\t\t\t\t,\t\t\tMIN([Transaction Date]) AS [Transaction Date]\r\n\t\t\t\t\tFROM\t\tSupplyChain.SalesInvoicesAndContractNumber\r\n\t\t\t\t\tGROUP BY\t[Business Unit Name]\r\n\t\t\t\t\t,\t\t\t[Order Number]\r\n\t\t\t\t\t,\t\t\t[Sales Contract Number]\r\n\t\t\t\t) soi\r\n\tON\t\t\tso.[Order Number] = soi.[Order Number]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Inventory Item ID]\r\n\t\t\t\t\t,\t\t\t[Item Code]\r\n\t\t\t\t\t,\t\t\tMAX([Item Name]) AS [Item Name] \r\n\t\t\t\t\tFROM\t\tCore.Items\r\n\t\t\t\t\tGROUP BY\t[Inventory Item ID]\r\n\t\t\t\t\t,\t\t\t[Item Code]\r\n\t\t\t\t) i\r\n\tON\t\t\ti.[Inventory Item ID] = COALESCE(po.[Item ID],so.[Inventory Item ID]) \r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\tDISTINCT [Sales Contract Number]\r\n\t\t\t\t\t,\t\t\t[Shipping Method]\r\n\t\t\t\t\t,\t\t\t[Business Unit Name]\r\n\t\t\t\t\t,\t\t\t[Customer Ship To]\r\n\t\t\t\t\t,\t\t\t[sc].[Customer]\r\n\t\t\t\t\t,\t\t\t[sc].[Customer Number]\r\n\t\t\t\t\tFROM\t\t[SupplyChain].[SalesContracts] sc\r\n\t\t\t\t\tWHERE\t\tsc.[DateStamp] = (SELECT MAX([DateStamp]) FROM [SupplyChain].[SalesContracts])\r\n\t\t\t\t) sc\r\n\tON\t\t\tCOALESCE(COALESCE(poi.[Blanket Purchase Agreement Number],soi.[Sales Contract Number]),u.[Order Number]) = sc.[Sales Contract Number]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\t,\t\t\tREPLACE(CONCAT([Company Name],',',ISNULL([Address Line 2],''),',',ISNULL([Address Line 3],'')),',,',',') AS [Address]\r\n\t\t\t\t\tFROM\t\tCore.Locations\r\n\t\t\t\t) l1\r\n\tON\t\t\trt.[Ship From Location ID] = l1.[Location ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\t,\t\t\tREPLACE(CONCAT([Company Name],',',ISNULL([Address Line 2],''),',',ISNULL([Address Line 3],'')),',,',',') AS [Address]\r\n\t\t\t\t\tFROM\t\tCore.Locations\r\n\t\t\t\t) l2\r\n\tON\t\t\tsd.[SHIP_TO_LOCATION_ID] = l2.[Location ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\t\tSELECT\t\tDISTINCT [Business Unit Name],\r\n                                    [Blanket Purchase Agreement Number],\r\n\t\t\t\t\t\t\t\t\t[Supplier Name],\r\n                                    DateStamp\r\n\t\t\t\t\t\tFROM\t\tSupplyChain.PurchaseContracts\r\n\t\t\t\t\t\tWHERE\t\t[DateStamp] = (SELECT MAX([DateStamp]) FROM [SupplyChain].PurchaseContracts)\r\n\t\t\t\t) pc\r\n\tON\t\t\tpc.[Blanket Purchase Agreement Number] = COALESCE(COALESCE(poi.[Blanket Purchase Agreement Number],soi.[Sales Contract Number]),u.[Order Number])\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\tDISTINCT [Business Unit Name]\r\n\t\t\t\t\t,\t\t\t[Business Unit ID]\r\n\t\t\t\t\t,\t\t\to.[Party ID]\r\n\t\t\t\t\t,\t\t\tp.[Location ID]\r\n\t\t\t\t\t,\t\t\tl.[Country]\r\n\t\t\t\t\t,\t\t\tl.[City]\r\n\t\t\t\t\t,\t\t\tl.[Postal Code]\r\n\t\t\t\t\t,\t\t\tl.[Company Name]\r\n\t\t\t\t\t,\t\t\tREPLACE(CONCAT([l].[Company Name],',',ISNULL([l].[Address Line 2],''),',',ISNULL([l].[Address Line 3],'')),',,',',') AS [Address]\r\n\t\t\t\t\tFROM\t\tCore.Organizations o\r\n\t\t\t\t\tLEFT JOIN\tCore.Parties p\r\n\t\t\t\t\tON\t\t\tp.[Party ID] = o.[Party ID]\r\n\t\t\t\t\tLEFT JOIN\tCore.Locations l\r\n\t\t\t\t\tON\t\t\tp.[Location ID] = l.[Location ID]\r\n\t\t\t\t\tWHERE\t\to.[Party ID] <> 'N/A'\r\n\t\t\t\t) bu\r\n\tON\t\t\tCOALESCE(poi.[Business Unit],soi.[Business Unit Name],pc.[Business Unit Name],sc.[Business Unit Name]) = bu.[Business Unit Name]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Party ID]\r\n\t\t\t\t\t,\t\t\t[Party Site Name]\r\n\t\t\t\t\t,\t\t\tMIN(l.[Country]) AS [Country]\r\n\t\t\t\t\t,\t\t\tMIN(l.[City]) AS [City]\r\n\t\t\t\t\t,\t\t\tMIN(l.[Postal Code]) AS [Postal Code]\r\n\t\t\t\t\t,\t\t\tMIN(l.[Company Name]) AS [Company Name]\r\n\t\t\t\t\t,\t\t\tMIN(REPLACE(CONCAT([l].[Company Name],',',ISNULL([l].[Address Line 2],''),',',ISNULL([l].[Address Line 3],'')),',,',',')) AS [Address]\r\n\t\t\t\t\tFROM\t\tCore.Parties p\r\n\t\t\t\t\tLEFT JOIN\tCore.Locations l\r\n\t\t\t\t\tON\t\t\tp.[Location ID] = l.[Location ID]\r\n\t\t\t\t\tGROUP BY\t[Party ID]\r\n\t\t\t\t\t,\t\t\t[Party Site Name]\r\n\t\t\t\t) l3\r\n\tON\t\t\tso.[Sold To Party ID] = l3.[Party ID]\r\n\tAND\t\t\tsc.[Customer Ship To] = l3.[Party Site Name]\t\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Party ID]\r\n\t\t\t\t\t,\t\t\t[Party Site Name]\r\n\t\t\t\t\t,\t\t\tl.[Country]\r\n\t\t\t\t\t,\t\t\tl.[City]\r\n\t\t\t\t\t,\t\t\tl.[Postal Code]\r\n\t\t\t\t\t,\t\t\tREPLACE(CONCAT([l].[Company Name],',',ISNULL([l].[Address Line 2],''),',',ISNULL([l].[Address Line 3],'')),',,',',') AS [Address]\r\n\t\t\t\t\t,\t\t\tl.[Company Name]\r\n\t\t\t\t\tFROM\t\tCore.Parties p\r\n\t\t\t\t\tLEFT JOIN\tCore.Locations l\r\n\t\t\t\t\tON\t\t\tp.[Location ID] = l.[Location ID]\r\n\t\t\t\t\tWHERE\t\tp.[Primary Party Site] = 'Y'\r\n\t\t\t\t\tAND\t\t\tp.[Party Site Name] <> 'Do Not Use'\r\n\t\t\t\t) l4\r\n\tON\t\t\tso.[Sold To Party ID] = l4.[Party ID]\r\n\tLEFT JOIN\tCore.Suppliers su\r\n\tON\t\t\tsu.[Vendor ID] = po.[Supplier]\r\n\tAND\t\t\tsu.[Vendor SIte ID] = po.[Supplier Site]\r\n\tLEFT JOIN\tCore.Locations l5\r\n\tON\t\t\tl5.[Location ID] = su.[Location ID]\r\n\tWHERE\t\t[i].[Item Code] NOT LIKE 'SE%' OR [i].[Item Code] IS NULL\r\n\tORDER BY\t[Index], COALESCE(poi.[Transaction Date],soi.[Transaction Date])\r\n\r\n"
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Supply Chain"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Spread_FS_CountUp_Calculations')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_FS_CountUp_Calculations",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Finance].[SQL_SpreadCalc_FS_CountUp]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Finance/Std Costs + Spread"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Spread_MainCalculation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_Spread_MainCalculation",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Finance].[SQL_SpreadCalculation]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Finance/Std Costs + Spread"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_StandardCosts_PostMonthEnd')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_StandardCosts_PostMonthEnd",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Finance].[SQL_StandardCosts_PostMonthEnd]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Finance/Std Costs + Spread"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_StandardCosts_PreMonthEnd')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_StandardCosts_PreMonthEnd",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Finance].[SQL_StandardCosts_PreMonthEnd]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Finance/Std Costs + Spread"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_SubledgerSuppliersCustomers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_SubledgerSuppliersCustomers",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Finance].[SQL_SubledgerSuppliersCustomers]"
						},
						"linkedServiceName": {
							"referenceName": "SqlServerArgent",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Finance"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-11T15:32:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Subledger_TransactionsList_Blend_CoreTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_Subledger_TL_Blend_CoreTables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Finance].[SQL_Subledger_TL_Blend_CoreTables]"
						},
						"linkedServiceName": {
							"referenceName": "SqlServerArgent",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Finance"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-11T20:19:19Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_SupplierCreditorDebtorTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_FinanceCreditorDebtorTables",
						"description": "Drops then creates [Finance].[CreditorBalances] and [Finance].[DebtorBalances].",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Finance].[SQL_CreditorDebtorBalances]"
						},
						"linkedServiceName": {
							"referenceName": "SqlServerArgent",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Finance/Ad-hoc Fianance Reporting"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_TSA_Tables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_TSA_Tables",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "\r\n-- Build purchase orders table\r\n\tIF OBJECT_ID('SupplyChain.PurchaseOrdersAndContracts','U') IS NOT NULL\r\n\t\tDROP TABLE SupplyChain.PurchaseOrdersAndContracts\r\n\r\n\tSELECT\t\tpc.[Blanket Purchase Agreement Number],\r\n                po.[PO Header ID],\r\n                po.[Current Version ID],\r\n                po.[Purchase Document Status],\r\n                po.[Purchasing BU],\r\n\t\t\t\to.[Business Unit Name] AS [Purchasing BU Name],\r\n                po.Buyer,\r\n                po.[Purchase Document Type],\r\n                po.[Purchase Order Number],\r\n                po.Supplier,\r\n                po.[Supplier Site],\r\n                po.[Terms ID],\r\n                po.Incoterm,\r\n                po.[Purchase Document Currency],\r\n                po.[Agreement Start Date],\r\n                po.[Agreement End Date],\r\n                po.[Agreement Amount],\r\n                po.[Amount Released Against Agreement],\r\n                po.[Carrier ID],\r\n                po.[Note To Vendor],\r\n                po.[Bill To BU ID],\r\n                po.[Sold To BU ID],\r\n                po.[Req BU ID],\r\n                po.[Ship To Location ID],\r\n                po.[Bill To Location ID],\r\n                po.[Purchased Document Closed Date],\r\n                po.[Currency Conversion Rate],\r\n                po.[Note To Receiver],\r\n                po.[Purchase Document Description],\r\n                po.[From Type Lookup Code],\r\n                po.[Sustainability Position],\r\n                po.[Deal Date],\r\n                po.[Transporter Name],\r\n                po.[Transporter Unit Price],\r\n                po.[FFA Spec],\r\n                po.[Transporter Amount],\r\n                po.[Ultimo Order],\r\n                po.[Transporter Currency],\r\n                po.[Additional Charges 1 Supplier],\r\n                po.[Additional Charges 1 Unit Price],\r\n                po.[Additional Charges 1 Amount],\r\n                po.[Additional Charges 1 Currency],\r\n                po.[Additional Charges 1 Description],\r\n                po.[Additional Charges 2 Supplier],\r\n                po.[Additional Charges 2 Unit Price],\r\n                po.[Additional Charges 2 Amount],\r\n                po.[Additional Charges 2 Currency],\r\n                po.[PO Line ID],\r\n                po.[From Header ID],\r\n                po.[Procurement BU ID],\r\n                po.[Line Status],\r\n                po.[Line Number],\r\n                po.[Item ID],\r\n                po.[Category ID],\r\n                po.[Item Description],\r\n                po.[UOM Code],\r\n                po.[Unit Price],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'EUR'\r\n\t\t\t\t\t\tTHEN po.[Unit Price]\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'GBP'\r\n\t\t\t\t\t\tTHEN po.[Unit Price]/NULLIF(CAST(fx.[EUR GBP] AS DECIMAL(28,4)),0)\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'USD'\r\n\t\t\t\t\t\tTHEN po.[Unit Price]/NULLIF(CAST(fx.[EUR USD] AS DECIMAL(28,4)),0)\r\n\t\t\t\tEND AS [Unit Price EUR],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'GBP'\r\n\t\t\t\t\t\tTHEN po.[Unit Price]\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(po.[Unit Price] AS DECIMAL(28,4)) * CAST(fx.[EUR GBP] AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'USD'\r\n\t\t\t\t\t\tTHEN (CAST(po.[Unit Price] AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR USD] AS DECIMAL(28,4)),0))*CAST(fx.[EUR GBP] AS DECIMAL(28,4))\r\n\t\t\t\tEND AS [Unit Price GBP],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'USD'\r\n\t\t\t\t\t\tTHEN po.[Unit Price]\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(po.[Unit Price] AS DECIMAL(28,4)) * CAST(fx.[EUR USD] AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'GBP'\r\n\t\t\t\t\t\tTHEN (CAST(po.[Unit Price] AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR GBP] AS DECIMAL(28,4)),0))*CAST(fx.[EUR USD] AS DECIMAL(28,4))\r\n\t\t\t\tEND AS [Unit Price USD],\r\n                po.[Ordered Quantity],\r\n                po.[From Line ID],\r\n                po.[Supplier Item],\r\n                po.[Blanket Agreement Quantity],\r\n                po.[Closed Date],\r\n                po.[Cancel Reason],\r\n                po.[Requested Date],\r\n                po.[Pick up Date],\r\n                s.[Vendor ID],\r\n                s.[Supplier ID],\r\n                sn.[Party ID],\r\n                sn.[Supplier Name],\r\n                i.[Item Code],\r\n                i.[Inventory Item ID],\r\n                i.[Category Code],\r\n                i.[Item Name],\r\n                le.[Legal Entity ID],\r\n                le.[Legal Entity Name],\r\n\t\t\t\tp.[Shipping Method],\r\n\t\t\t\tfx.[EUR USD],\r\n\t\t\t\tfx.[EUR GBP],\r\n\t\t\t\tCAST([po].[Unit Price] AS DECIMAL(28,4)) * CAST([po].[Ordered Quantity] AS DECIMAL(28,4)) AS [Amount],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(po.[Unit Price] AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'GBP'\r\n\t\t\t\t\t\tTHEN CAST(po.[Unit Price] AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR GBP] AS DECIMAL(28,4)),0)\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'USD'\r\n\t\t\t\t\t\tTHEN CAST(po.[Unit Price] AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR USD] AS DECIMAL(28,4)),0)\r\n\t\t\t\t\tELSE '0'\r\n\t\t\t\tEND * CAST(ISNULL([po].[Ordered Quantity],0) AS DECIMAL(28,4)) AS [Amount EUR],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'GBP'\r\n\t\t\t\t\t\tTHEN po.[Unit Price]\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(po.[Unit Price] AS DECIMAL(28,4)) * CAST(fx.[EUR GBP] AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'USD'\r\n\t\t\t\t\t\tTHEN (CAST(po.[Unit Price] AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR USD] AS DECIMAL(28,4)),0))*CAST(ISNULL(fx.[EUR GBP],0) AS DECIMAL(28,4))\r\n\t\t\t\tEND * CAST(ISNULL([po].[Ordered Quantity],0) AS DECIMAL(28,4)) AS [Amount GBP],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'USD'\r\n\t\t\t\t\t\tTHEN po.[Unit Price]\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(po.[Unit Price] AS DECIMAL(28,4)) * CAST(fx.[EUR USD] AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN po.[Purchase Document Currency] = 'GBP'\r\n\t\t\t\t\t\tTHEN (CAST(po.[Unit Price] AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR GBP] AS DECIMAL(28,4)),0))*CAST(fx.[EUR USD] AS DECIMAL(28,4))\r\n\t\t\t\tEND * CAST(ISNULL([po].[Ordered Quantity],0) AS DECIMAL(28,4)) AS [Amount USD],\r\n\t\t\t\tCAST(GETDATE() AS DATE) AS [DateStamp]\r\n\tINTO\t\tSupplyChain.PurchaseOrdersAndContracts\r\n\tFROM\t\tCore.PurchaseOrders po\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\tDISTINCT [Blanket Purchase Agreement Number]\r\n\t\t\t\t\t,\t\t\t[PO Header ID]\r\n\t\t\t\t\t,\t\t\t[PO Line ID]\r\n\t\t\t\t\tFROM\t\tCore.PurchaseContracts\r\n\t\t\t\t) pc\r\n\tON\t\t\tpo.[From Header ID] = pc.[PO Header ID]\r\n\tAND\t\t\tpo.[From Line ID] = pc.[PO Line ID]\r\n\tLEFT JOIN\t[Core].[Suppliers] s\r\n\tON\t\t\tpo.[Supplier] = s.[Vendor ID]\r\n\tAND\t\t\tpo.[Supplier Site] = s.[Vendor Site ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Party ID] \r\n\t\t\t\t\t,\t\t\tMIN([Party Name])\tAS [Supplier Name]\r\n\t\t\t\t\tFROM\t\t[Core].[Parties]\r\n\t\t\t\t\tGROUP BY\t[Party ID]\r\n\t\t\t\t) sn\r\n\tON\t\t\ts.[Party ID] = sn.[Party ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Business Unit ID]\r\n\t\t\t\t\t,\t\t\t[Business Unit Name]\r\n\t\t\t\t\tFROM\t\t[Core].[Organizations]\r\n\t\t\t\t\tGROUP BY\t[Business Unit ID]\r\n\t\t\t\t\t,\t\t\t[Business Unit Name]\r\n\t\t\t\t) o\r\n\tON\t\t\tpo.[Purchasing BU] = o.[Business Unit ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Item Code]\r\n\t\t\t\t\t,\t\t\t[Inventory Item ID]\r\n\t\t\t\t\t,\t\t\t[Category Code]\r\n\t\t\t\t\t,\t\t\tMIN([Item Name])\tAS [Item Name]\r\n\t\t\t\t\tFROM\t\t[Core].[Items]\r\n\t\t\t\t\tGROUP BY\t[Item Code]\r\n\t\t\t\t\t,\t\t\t[Inventory Item ID]\r\n\t\t\t\t\t,\t\t\t[Category Code]\r\n\t\t\t\t) i \r\n\tON\t\t\ti.[Inventory Item ID] = po.[Item ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\tDISTINCT [Legal Entity ID]\r\n\t\t\t\t\t,\t\t\t[Legal Entity Name]\r\n\t\t\t\t\tFROM\t\tCore.Organizations\r\n\t\t\t\t) le\r\n\tON\t\t\tPO.[Sold To BU ID] = le.[Legal Entity ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Party ID]\r\n\t\t\t\t\t,\t\t\tMIN([Party Name])\tAS [Shipping Method]\r\n\t\t\t\t\tFROM\t\t[Core].[Parties]\r\n\t\t\t\t\tGROUP BY\t[Party ID]\r\n\t\t\t\t) p\r\n\tON\t\t\tpo.[Carrier ID] = p.[Party ID]\r\n\tLEFT JOIN\tCore.FXRates fx\r\n\tON\t\t\tCAST(LEFT([po].[Requested Date],10) AS DATE) = CAST(fx.[CONVERSION_DATE] AS DATE)\r\n\tWHERE\t\tpc.[Blanket Purchase Agreement Number] NOT IN (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSELECT\t\tDISTINCT [Blanket Purchase Agreement Number]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tFROM\t\t[Core].[PurchaseContracts]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHERE\t\t[Amount Released Against Agreement] = 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAND\t\t\t[Agreement End Date] < '2021-07-01'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   ) \t\r\n\r\n\r\n-- Build sales orders table\r\n\tIF OBJECT_ID('SupplyChain.SalesOrdersAndContracts','U') IS NOT NULL\r\n\t\tDROP TABLE SupplyChain.SalesOrdersAndContracts\r\n\r\n\r\n\tSELECT\t\tso.[Header ID],\r\n                so.[Order Number],\r\n                so.[Org ID],\r\n                so.[Legal Entity ID],\r\n                so.[Ordered Date],\r\n                so.[Order Type Code],\r\n                so.[Transactional Currency Code],\r\n                so.[Status Code],\r\n                so.[Open Flag],\r\n                so.[On Hold],\r\n                so.[Canceled Flag],\r\n                so.[Change Version Number],\r\n                so.[Is Editable],\r\n                so.[Sold To Party ID],\r\n                so.[Pricing Segment Code],\r\n                so.[Pricing Strategy ID],\r\n                so.[Fulfill Org ID],\r\n                so.[Request Ship Date],\r\n                so.[Carrier ID],\r\n                so.[Ship Mode Of Transport],\r\n                so.[Ship Class Of Service],\r\n                so.[Submitted Flag],\r\n                so.[Reference Header ID],\r\n                so.[Payment Term ID],\r\n                so.[Modified Flag],\r\n                so.[Submitted Date],\r\n                so.[Submitted By],\r\n                so.[MDO Flag],\r\n                so.[Sold To Party Contact ID],\r\n                so.[Sold To Party Contact Point ID],\r\n                so.[Request Cancel Date],\r\n                so.[Cancel Reason Code],\r\n                so.[Customer PO Number],\r\n                so.Comments,\r\n                so.[Agreement Header ID],\r\n                so.[Agreement Version Number],\r\n                so.[Line ID],\r\n                so.[Line Number],\r\n                so.[Order Line Status],\r\n                so.[Ordered Qty],\r\n                so.[Ordered UOM],\r\n                so.[Extended Amount],\r\n                so.[Inventory Item ID],\r\n                so.[Unit List Price],\r\n                CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4)) AS [Unit Selling Price],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'GBP'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR GBP] AS DECIMAL(28,4)),0)\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'USD'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR USD] AS DECIMAL(28,4)),0)\r\n\t\t\t\tEND AS [Unit Price EUR],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'GBP'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4)) * CAST(fx.[EUR GBP] AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'USD'\r\n\t\t\t\t\t\tTHEN (CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR USD] AS DECIMAL(28,4)),0))*CAST(fx.[EUR GBP] AS DECIMAL(28,4))\r\n\t\t\t\tEND AS [Unit Price GBP],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'USD'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4)) * CAST(fx.[EUR USD] AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'GBP'\r\n\t\t\t\t\t\tTHEN (CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR GBP] AS DECIMAL(28,4)),0))*CAST(fx.[EUR USD] AS DECIMAL(28,4))\r\n\t\t\t\tEND AS [Unit Price USD],\r\n                so.[Reference Line ID],\r\n                so.[Inventory Organization ID],\r\n                so.[Display Line Number],\r\n                so.[Schedule Ship Date],\r\n                so.[RMA Delivered Qty],\r\n                so.[Canceled Qty],\r\n                sc.[Sales Contract Number],\r\n                sc.[Contract Header ID],\r\n\t\t\t\tsc.[Shipping Method],\r\n                c.[Party ID],\r\n                c.[Customer Number],\r\n                c.Customer,\r\n                o.[Business Unit ID],\r\n                o.[Business Unit Name],\r\n                i.[Organization ID],\r\n                i.[Item Code],\r\n                i.[Item Name],\r\n                i.[Category Code],\r\n\t\t\t\tfx.[EUR USD],\r\n\t\t\t\tfx.[EUR GBP],\r\n\t\t\t\tCAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4)) * CAST([so].[Ordered Qty] AS DECIMAL(28,4)) AS [Amount],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'GBP'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR GBP] AS DECIMAL(28,4)),0)\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'USD'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR USD] AS DECIMAL(28,4)),0)\r\n\t\t\t\t\tELSE '0'\r\n\t\t\t\tEND * CAST([so].[Ordered Qty] AS DECIMAL(28,4)) AS [Amount EUR],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'GBP'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4)) * CAST(fx.[EUR GBP] AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'USD'\r\n\t\t\t\t\t\tTHEN (CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR USD] AS DECIMAL(28,4)),0))*CAST(ISNULL(fx.[EUR GBP],0) AS DECIMAL(28,4))\r\n\t\t\t\tEND * CAST([so].[Ordered Qty] AS DECIMAL(28,4)) AS [Amount GBP],\r\n\t\t\t\tCASE\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'USD'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'EUR'\r\n\t\t\t\t\t\tTHEN CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4)) * CAST(fx.[EUR USD] AS DECIMAL(28,4))\r\n\t\t\t\t\tWHEN so.[Transactional Currency Code] = 'GBP'\r\n\t\t\t\t\t\tTHEN (CAST(CAST(so.[Unit Selling Price] AS FLOAT) AS DECIMAL(28,4))/NULLIF(CAST(fx.[EUR GBP] AS DECIMAL(28,4)),0))*CAST(fx.[EUR USD] AS DECIMAL(28,4))\r\n\t\t\t\tEND * CAST([so].[Ordered Qty] AS DECIMAL(28,4)) AS [Amount USD],\r\n\t\t\t\tCAST(GETDATE() AS DATE) AS [DateStamp]\r\n\tINTO\t\tSupplyChain.SalesOrdersAndContracts\r\n\tFROM\t\tCore.SalesOrders so\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\tDISTINCT [Sales Contract Number]\r\n\t\t\t\t\t,\t\t\t[Contract Header ID]\r\n\t\t\t\t\t,\t\t\t[Sales Contract Version]\r\n\t\t\t\t\t,\t\t\t[Shipping Method]\r\n\t\t\t\t\tFROM\t\tCore.SalesContracts\t\r\n\t\t\t\t) sc\r\n\tON\t\t\tsc.[Contract Header ID] = so.[Agreement Header ID]\r\n\tAND\t\t\tsc.[Sales Contract Version] = so.[Agreement Version Number]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Party ID]\r\n\t\t\t\t\t,\t\t\t[Party Number]\t\tAS [Customer Number]\r\n\t\t\t\t\t,\t\t\tMIN([Party Name])\tAS [Customer]\r\n\t\t\t\t\tFROM\t\t[Core].[Parties]\r\n\t\t\t\t\tGROUP BY\t[Party ID]\r\n\t\t\t\t\t,\t\t\t[Party Number]\r\n\t\t\t\t) c\r\n\tON\t\t\tso.[Sold To Party ID] = c.[Party ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Business Unit ID]\r\n\t\t\t\t\t,\t\t\t[Business Unit Name]\r\n\t\t\t\t\tFROM\t\t[Core].[Organizations]\r\n\t\t\t\t\tGROUP BY\t[Business Unit ID]\r\n\t\t\t\t\t,\t\t\t[Business Unit Name]\r\n\t\t\t\t) o\r\n\tON\t\t\tso.[Org ID] = o.[Business Unit ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Inventory Item ID]\r\n\t\t\t\t\t,\t\t\t[Organization ID]\r\n\t\t\t\t\t,\t\t\t[Item Code]\r\n\t\t\t\t\t,\t\t\t[Item Name]\r\n\t\t\t\t\t,\t\t\t[Category Code]\r\n\t\t\t\t\tFROM\t\t[Core].[Items] \r\n\t\t\t\t\tGROUP BY\t[Inventory Item ID]\r\n\t\t\t\t\t,\t\t\t[Organization ID]\r\n\t\t\t\t\t,\t\t\t[Item Code]\r\n\t\t\t\t\t,\t\t\t[Item Name]\r\n\t\t\t\t\t,\t\t\t[Category Code]\r\n\t\t\t\t) i\r\n\tON\t\t\ti.[Inventory Item ID] = so.[Inventory Item ID]\r\n\tAND\t\t\tso.[Inventory Organization ID] = i.[Organization ID]\r\n\tLEFT JOIN\tCore.FXRates fx\r\n\tON\t\t\t[so].[Ordered Date] = CAST([fx].[CONVERSION_DATE] AS DATE)\r\n\r\n\r\n-- Third Party Inventory\r\n\tIF OBJECT_ID('SupplyChain.TSA_ThirdPartyInventory','U') IS NOT NULL\r\n\t\tDROP TABLE SupplyChain.TSA_ThirdPartyInventory\r\n\r\n\tSELECT\t\t*\r\n\tINTO\t\tSupplyChain.TSA_ThirdPartyInventory\r\n\tFROM\t\t[Core].[OnHandBalance] ohb\r\n\tWHERE\t\t[Business Unit Name] IN ('ROTIE BU','Quatra BU')\r\n"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Supply Chain"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_TransactionList_CostAccounting')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_TransactionList_CostAccounting",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Finance].[SQL_TransactionsList_CostAccounting]"
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Finance"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_TransactionsList')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_TransactionsList",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Finance].[SQL_TransactionsList]"
						},
						"linkedServiceName": {
							"referenceName": "SqlServerArgent",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Finance"
				},
				"annotations": [],
				"lastPublishTime": "2022-12-11T15:32:40Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/audit_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "audit_tables_rowcounts",
						"description": "This job gets details of row count and puts them in an audit table by calling a stored procedure ",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.01:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[prc_audit_table_rowcount]"
						},
						"linkedServiceName": {
							"referenceName": "SqlServerArgent",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Audit"
				},
				"annotations": [],
				"lastPublishTime": "2022-08-31T12:30:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AE_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "RAW",
					"table": "O.GL_BALANCES"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ActTankItems_Excel')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Finance/Std Costs + Spread"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Actual Tank & Item",
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "standard-costs-files"
					},
					"range": "A2:Q300",
					"firstRowAsHeader": true
				},
				"schema": []
			},
			"dependsOn": []
		}
	]
}