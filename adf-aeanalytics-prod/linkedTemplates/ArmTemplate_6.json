{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-aeanalytics-prod"
		},
		"Appian_Test_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Appian_Test'"
		},
		"Appian_prod_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Appian_prod'"
		},
		"appDev_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'appDev'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Sharepoint_Finance_DWH_Excel_Data_Raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sharepoint_Pricing_Data",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ItemName": {
						"type": "string",
						"defaultValue": "BS and P&L FX Rates.xlsx"
					}
				},
				"folder": {
					"name": "Finance"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "Finance%20DWH%20Excel%20data.xlsx')/$value",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sharepoint_Pricing_Raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sharepoint_Pricing_Data",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ItemName": {
						"type": "string",
						"defaultValue": "Pricing dataset.xlsx"
					}
				},
				"folder": {
					"name": "Trade/Pricing"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "Pricing%20dataset.xlsx')/$value",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sharepoint_StdCostsSpread_ExcelFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Sharepoint_StdCostsSpread_Data",
					"type": "LinkedServiceReference",
					"parameters": {
						"FileName": "@dataset().RelativeURL"
					}
				},
				"parameters": {
					"RelativeURL": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Finance/Std Costs + Spread"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sharepoint_UltimoPlan_DWH_Excel_Data_Raw')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Operations_SharePoint",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ItemName": {
						"type": "string",
						"defaultValue": "BS and P&L FX Rates.xlsx"
					}
				},
				"folder": {
					"name": "Operations"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "Ultimo%20Planning%20Worksheet.xlsx')/$value",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_5nk')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Sheet1",
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "GIT_Adjustments_Template.xlsx",
						"folderPath": "test",
						"container": "testdeloitte"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Entity",
						"type": "String"
					},
					{
						"name": "Company Name",
						"type": "String"
					},
					{
						"name": "Financial Year",
						"type": "String"
					},
					{
						"name": "Financial Period",
						"type": "String"
					},
					{
						"name": "Entity Currency (EC)",
						"type": "String"
					},
					{
						"name": "Adjustment",
						"type": "String"
					},
					{
						"name": "Adjustment Currency",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trade_Tables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBlob",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Trade"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"container": "salesandpurchasedata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VesselFinder_IMOs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerArgent",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "IMO",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "SupplyChain",
					"table": "GIT_IMO_Numbers"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VesselFinder_JSON_Outputs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "vessel-outputs"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VesselFinder_Ports')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VesselFinder",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"IMO": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('portcalls?userkey=WS-093AF9B8-279D79&interval=144000&limit=4&imo=',dataset().IMO)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VesselFinder_Ports_JSON_Outputs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "vesselfinder-ports"
					}
				},
				"schema": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/VesselFinder_Vessels')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "VesselFinder",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"IMO": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@concat('vessels?userkey=WS-093AF9B8-279D79&imo=',dataset().IMO)",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/testAppian')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TestBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Appian"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "appian"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/testAppian_suppliers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TestBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Appian"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "appiansuppliers"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/testAppian_traceability')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TestBlob",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Appian"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "appiantraceability"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Appian_Test')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('Appian_Test_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AppianRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Appian_prod')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('Appian_prod_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AppianRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/appDev')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('appDev_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AppianRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_SupplierBalancesTables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_FinancePricingTables",
						"description": "Clears then repopulates the both test pricing tables used in Finance's Sales and Purchases Pricing Report",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[Finance].[SQL_SupplierBalances]"
						},
						"linkedServiceName": {
							"referenceName": "SqlServerArgent",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Finance/Ad-hoc Fianance Reporting"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Appian_Copy_OTBI_Reports')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Traceability Report to BLOB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": false,
									"useBinaryTransfer": true,
									"deleteFilesAfterCompletion": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Appian_Traceability_OTBI",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Binary_Destination_Oracle",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Suppliers Report to BLOB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Traceability Report to BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": false,
									"useBinaryTransfer": true,
									"deleteFilesAfterCompletion": false,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Appian_Suppliers_OTBI",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Binary_Destination_Oracle",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Traceability BLOB to SQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete existing tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Stamp",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true,
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Appian_Traceability_Blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_Argent_Database",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "O.Traceability report"
								}
							}
						]
					},
					{
						"name": "Copy Suppliers BLOB to SQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Traceability BLOB to SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true,
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Appian_Suppliers_Blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_Argent_Database",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "O.Sustainability Suppliers Report"
								}
							}
						]
					},
					{
						"name": "Delete existing tables",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Copy Suppliers Report to BLOB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlServerArgent",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": "/* Delete Traceability Report if it exists */\r\nDROP TABLE IF EXISTS [RAW].[O.Traceability report]\r\n\r\n\r\n/* Delete Suppliers Report if it exists */\r\nDROP TABLE IF EXISTS [RAW].[O.Sustainability Suppliers Report]"
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Appian"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Appian_Suppliers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Suppliers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[prc_AppianGetSuppliers_v2]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Supplier Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Supplier Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Supplier Number",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Supplier Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Organization Type",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Organization Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BU_bill_to",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BU_bill_to",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BPA_EXISTS",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BPA_EXISTS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Business Unit Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Business Unit Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Supplier Type",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Supplier Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Address Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address Line 2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Address Line 2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address Line 3",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Address Line 3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Phone",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Supplier Inactive Date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Supplier Inactive Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Vendor Site ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Vendor Site ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Prc BU ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Prc BU ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Location ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Location ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Purchasing Site Flag",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Purchasing Site Flag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Pay",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pay",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Payment terms",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Payment terms",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Site Invoice Currency Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Site Invoice Currency Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Site Payment Currency Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Site Payment Currency Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BIC_SWIFT",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BIC_SWIFT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Site Inactive Date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Site Inactive Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VIHB Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "VIHB Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Vendor Category",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Vendor Category",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DEFAULT_PAYMENT_METHOD",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DEFAULT_PAYMENT_METHOD",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ISCC Cetificate Number",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ISCC Cetificate Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ISCC Certificate Expiry Date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ISCC Certificate Expiry Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Site VET ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Site VET ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INS Certificate Number",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "INS Certificate Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INS Certificate Expiry Date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "INS Certificate Expiry Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CERTIFICATION_TYPE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CERTIFICATION_TYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GMP_ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GMP_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Site Terms Date Basis",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Site Terms Date Basis",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Postal Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Postal Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VAT_NUM_SUP",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "VAT_NUM_SUP",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VAT_NUM_SITE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "VAT_NUM_SITE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "IBAN",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IBAN",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BANK_ACCOUNT_NUM",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BANK_ACCOUNT_NUM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Party ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Party ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Vendor ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Vendor ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Party Site ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Party Site ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Supplier_creation_date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Supplier_creation_date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ADDRESS_CREATION_DATE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ADDRESS_CREATION_DATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SITE_CREATION_DATE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SITE_CREATION_DATE",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AppianDataSuppliers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "testAppian_suppliers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Appian"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/testAppian_suppliers')]"
			]
		}
	]
}