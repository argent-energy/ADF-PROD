{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-aeanalytics-prod"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Copy_StdCostsSpread_Sharepoint_To_BLOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies Standard Costs and Spread Excel files from the SharePoint site, \"PowerBI data\", to the Azure Blob Storage.",
				"activities": [
					{
						"name": "Sharepoint_token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"url": "https://accounts.accesscontrol.windows.net/723124e0-74e9-482b-a731-4f534e16e043/tokens/OAuth/2",
							"body": "grant_type=client_credentials&client_id=2de0db9a-9127-408d-a1b4-f79f8da14b07@723124e0-74e9-482b-a731-4f534e16e043&client_secret=nN48Q~nbL5MuWJfZooYV2bW1EuY~Kh_hRMcjJc_J&resource=00000003-0000-0ff1-ce00-000000000000/argentenergyltd.sharepoint.com@723124e0-74e9-482b-a731-4f534e16e043"
						}
					},
					{
						"name": "Get_file_list",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Sharepoint_token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {
								"Authorization": {
									"value": "@{concat('Bearer ', activity('Sharepoint_token').output.access_token)}",
									"type": "Expression"
								},
								"Accept": "application/json"
							},
							"url": "https://argentenergyltd.sharepoint.com/sites/PowerBIdata/_api/web/GetFolderByServerRelativeUrl('Shared%20Documents/General/Excel%20files/Finance%20-%20Standard%20Costs%20and%20Spread')/Files"
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get_file_list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get_file_list').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy_Sharepoint_to_Blob",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": true
									},
									"userProperties": [
										{
											"name": "Destination",
											"value": "standard-costs-files//"
										}
									],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET",
												"additionalHeaders": {
													"value": "@{concat('Authorization: Bearer ', activity('Sharepoint_token').output.access_token)}",
													"type": "Expression"
												},
												"requestTimeout": ""
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											}
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Sharepoint_StdCostsSpread_ExcelFiles",
											"type": "DatasetReference",
											"parameters": {
												"RelativeURL": {
													"value": "@{item().ServerRelativeUrl}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Blob_StdCostsSpread_SharepointFiles",
											"type": "DatasetReference",
											"parameters": {
												"ItemName": {
													"value": "@{item().Name}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Finance/Std Costs + Spread"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-11T15:23:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_UltimoPlan_Blob_to_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Drop table",
						"description": "Drop existing [RAW].[OPS.EditedUltimoPlanning] table",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlServerArgent",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "NonQuery",
									"text": {
										"value": "DROP TABLE IF EXISTS [RAW].[OPS.EditedUltimoPlanning]",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Copy from Excel workbook",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Drop table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"additionalColumns": [
									{
										"name": "Stamp",
										"value": {
											"value": "@formatDateTime(utcNow(), 'yyyy-MM-dd')",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Blob_UltimoPlan_Excel",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_Sharepoint_Data_Tables",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "OPS.EditedUltimoPlanning"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Operations"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-14T16:24:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_UltimoPlan_Sharepoint_To_BLOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies the edited Ultimo Planning Excel file from the SharePoint site, \"PowerBI data\", to the Azure Blob Storage.",
				"activities": [
					{
						"name": "Sharepoint_token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"url": "https://accounts.accesscontrol.windows.net/723124e0-74e9-482b-a731-4f534e16e043/tokens/OAuth/2",
							"body": "grant_type=client_credentials&client_id=2de0db9a-9127-408d-a1b4-f79f8da14b07@723124e0-74e9-482b-a731-4f534e16e043&client_secret=nN48Q~nbL5MuWJfZooYV2bW1EuY~Kh_hRMcjJc_J&resource=00000003-0000-0ff1-ce00-000000000000/argentenergyltd.sharepoint.com@723124e0-74e9-482b-a731-4f534e16e043"
						}
					},
					{
						"name": "Copy_Sharepoint_to_Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Sharepoint_token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "Production%20Reporting.xlsx')/$value"
							},
							{
								"name": "Destination",
								"value": "sharepoint-files//@{pipeline().parameters.ExcelName}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"additionalHeaders": {
										"value": "@{concat('Authorization: Bearer ', activity('Sharepoint_token').output.access_token)}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Sharepoint_UltimoPlan_DWH_Excel_Data_Raw",
								"type": "DatasetReference",
								"parameters": {
									"ItemName": "@pipeline().parameters.ExcelName"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_Sharepoint_Files",
								"type": "DatasetReference",
								"parameters": {
									"ItemName": {
										"value": "@pipeline().parameters.ExcelName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ExcelName": {
						"type": "string",
						"defaultValue": "Ultimo Planning Worksheet.xlsx"
					}
				},
				"folder": {
					"name": "Operations"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-11T15:23:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DevAppian_BPA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BPA Details",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Remove BPA Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[Prc_AppianBPADetails]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AppianDataSuppliers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "testAppian",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Remove BPA Files",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "testAppian",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.csv",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Appian"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DevAppian_Suppliers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Supplier Details",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Delete Existnig Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[prc_AppianGetSuppliers_v2]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Supplier Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Supplier Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Supplier Number",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Supplier Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Organization Type",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Organization Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BU_bill_to",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BU_bill_to",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BPA_EXISTS",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BPA_EXISTS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Business Unit Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Business Unit Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Supplier Type",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Supplier Type",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Address Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address Line 2",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Address Line 2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Address Line 3",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Address Line 3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Email",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Email",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Phone",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Phone",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Supplier Inactive Date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Supplier Inactive Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Vendor Site ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Vendor Site ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Prc BU ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Prc BU ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Category Name",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Category Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Location ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Location ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Purchasing Site Flag",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Purchasing Site Flag",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Pay",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Pay",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Payment terms",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Payment terms",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Site Invoice Currency Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Site Invoice Currency Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Site Payment Currency Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Site Payment Currency Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BIC_SWIFT",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BIC_SWIFT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Site Inactive Date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Site Inactive Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VIHB Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "VIHB Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Vendor Category",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Vendor Category",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DEFAULT_PAYMENT_METHOD",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DEFAULT_PAYMENT_METHOD",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ISCC Cetificate Number",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ISCC Cetificate Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ISCC Certificate Expiry Date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ISCC Certificate Expiry Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Site VET ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Site VET ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INS Certificate Number",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "INS Certificate Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "INS Certificate Expiry Date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "INS Certificate Expiry Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "CERTIFICATION_TYPE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CERTIFICATION_TYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GMP_ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GMP_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Site Terms Date Basis",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Site Terms Date Basis",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Postal Code",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Postal Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VAT_NUM_SUP",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "VAT_NUM_SUP",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "VAT_NUM_SITE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "VAT_NUM_SITE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "IBAN",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "IBAN",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BANK_ACCOUNT_NUM",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BANK_ACCOUNT_NUM",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Party ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Party ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Vendor ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Vendor ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Party Site ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Party Site ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Supplier_creation_date",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Supplier_creation_date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ADDRESS_CREATION_DATE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ADDRESS_CREATION_DATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SITE_CREATION_DATE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SITE_CREATION_DATE",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AppianDataSuppliers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "testAppian_suppliers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Delete Existnig Files",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "testAppian_suppliers",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.csv",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Appian"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DevAppian_traceability')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Tracebility Details",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Remove Existing Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[prc_AppianTraceability]",
								"queryTimeout": "04:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CREATION_DATE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "CREATION_DATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "BUSINESS_UNIT",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "BUSINESS_UNIT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ORGANIZATION",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ORGANIZATION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SUBINVENTORY",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SUBINVENTORY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTION_DATE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TRANSACTION_DATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "PHYSICAL_DATE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "PHYSICAL_DATE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DOCUMENT_NUMBER",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DOCUMENT_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTION_TYPE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TRANSACTION_TYPE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "REASON_NAME",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "REASON_NAME",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "WORK_DEFINITION",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "WORK_DEFINITION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ITEM_CODE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ITEM_CODE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ITEM_DESCRIPTION",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ITEM_DESCRIPTION",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "UNIT_OF_MEASURE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "UNIT_OF_MEASURE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TRANSFER_SUBINVENTORY",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TRANSFER_SUBINVENTORY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SUPPLIER",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SUPPLIER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SUPPLIER_SITE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SUPPLIER_SITE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "AGREEMENT",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "AGREEMENT",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "EXT_REFERENCE_NUMBER",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EXT_REFERENCE_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "SHIPPING_METHOD",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SHIPPING_METHOD",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "QUANTITY",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "QUANTITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TANK_BALANCE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TANK_BALANCE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "RUNNING_TOTAL",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "RUNNING_TOTAL",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "GRADE",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "GRADE",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TRANSACTION_ID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TRANSACTION_ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "LOT_NUMBER",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "LOT_NUMBER",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "TRANSTYPE_REASON",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "TRANSTYPE_REASON",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "DENSITY",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DENSITY",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "STD_LTRS",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "STD_LTRS",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Stamp",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "Stamp",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AppianDataSuppliers",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "testAppian_traceability",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Remove Existing Files",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "testAppian_traceability",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.csv",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Appian"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Excel_Blob_To_SQL_OO')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies an Excel file with multiple sheets from blob storage to prod environment. Excel file must include sheet/table name tab.",
				"activities": [
					{
						"name": "Excel_tables_lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"dataset": {
								"referenceName": "Excel_Get_Metadata_OO",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Copy sheets to tables",
						"description": "Copies each sheet in the lookup sheet to a separate SQL table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Excel_tables_lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Excel_tables_lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy from Excel workbook",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Drop",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Excel_Blob_Source_OO",
											"type": "DatasetReference",
											"parameters": {
												"SheetName": "@item().SheetName"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_Sharepoint_Data_Tables",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "@item().TableName"
											}
										}
									]
								},
								{
									"name": "Drop",
									"description": "Drop existing tables",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SqlServerArgent",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "NonQuery",
												"text": {
													"value": "DROP TABLE IF EXISTS [RAW].[@{item().TableName}]",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-11-14T16:24:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Finance_AccountBalances_To_BLOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies data from the Sharepoint site \"PowerBI data\" to the Azure Blob Storage",
				"activities": [
					{
						"name": "Sharepoint_token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"url": "https://accounts.accesscontrol.windows.net/723124e0-74e9-482b-a731-4f534e16e043/tokens/OAuth/2",
							"body": "grant_type=client_credentials&client_id=2de0db9a-9127-408d-a1b4-f79f8da14b07@723124e0-74e9-482b-a731-4f534e16e043&client_secret=nN48Q~nbL5MuWJfZooYV2bW1EuY~Kh_hRMcjJc_J&resource=00000003-0000-0ff1-ce00-000000000000/argentenergyltd.sharepoint.com@723124e0-74e9-482b-a731-4f534e16e043"
						}
					},
					{
						"name": "Copy_Sharepoint_to_Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Sharepoint_token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "Finance%20DWH%20Excel%20data.xlsx')/$value"
							},
							{
								"name": "Destination",
								"value": "sharepoint-files//@{pipeline().parameters.ExcelName}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"additionalHeaders": {
										"value": "@{concat('Authorization: Bearer ', activity('Sharepoint_token').output.access_token)}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Sharepoint_Finance_AccountBalances",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_Sharepoint_Files",
								"type": "DatasetReference",
								"parameters": {
									"ItemName": {
										"value": "@pipeline().parameters.ExcelName",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ExcelName": {
						"type": "string",
						"defaultValue": "Finance Manual Account Balances.xlsx"
					}
				},
				"folder": {
					"name": "Finance"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-11T15:23:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get_Daily_FxRates')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup FX products",
						"description": "Return list of Symbols from [RAW].[S.OmjProducts] with Type \"FX\"",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Get yesterdays date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [Symbol]\nFROM [RAW].[S.OmjProducts]\nWHERE [Type] = 'FX'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Prod_DB",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "S.OmjProducts",
									"SchemaName": "RAW"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For each product",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup FX products",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup FX products').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy FX rates to SQL",
									"description": "Copy daily OMJ FX rates to [RAW].[S.OmjFxRates]",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('settlement?date=', variables('YesterdaysDate'), '&instruments=', item().Symbol)}"
										},
										{
											"name": "Destination",
											"value": "omj-daily-prices/@{variables('YesterdaysDate')}/@{concat(concat(item().Symbol, '_', variables('YesterdaysDate')), '.json')}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DateStamp",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date",
														"type": "DateTimeOffset"
													}
												},
												{
													"source": {
														"path": "$['contractName']"
													},
													"sink": {
														"name": "contractName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['settlement']"
													},
													"sink": {
														"name": "settlement",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['DateStamp']"
													},
													"sink": {
														"name": "DateStamp",
														"type": "DateTimeOffset"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "OMJ_API_DS",
											"type": "DatasetReference",
											"parameters": {
												"relativeURL": {
													"value": "settlement?date=@{variables('YesterdaysDate')}&instruments=@{item().Symbol}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_Prod_DB",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "S.OmjFxRates",
												"SchemaName": "RAW"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get yesterdays date",
						"description": "Date of pricing",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "YesterdaysDate",
							"value": {
								"value": "@formatDateTime(adddays(utcnow(), -1), 'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"YesterdaysDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Sales/OMJ"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get_Daily_Prices')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup price products",
						"description": "Return list of Symbols from [RAW].[S.OmjProducts] with Type \"Price\"",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Get yesterdays date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [Symbol]\nFROM [RAW].[S.OmjProducts]\nWHERE [Type] = 'Price'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Prod_DB",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "S.OmjProducts",
									"SchemaName": "RAW"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For each product",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup price products",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup price products').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy prices to SQL",
									"description": "Copy daily OMJ prices to [RAW].[S.OmjPrices]",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('settlement?date=', variables('YesterdaysDate'), '&instruments=', item().Symbol)}"
										},
										{
											"name": "Destination",
											"value": "omj-daily-prices/@{variables('YesterdaysDate')}/@{concat(concat(item().Symbol, '_', variables('YesterdaysDate')), '.json')}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DateStamp",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date",
														"type": "DateTimeOffset"
													}
												},
												{
													"source": {
														"path": "$['contractName']"
													},
													"sink": {
														"name": "contractName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['settlement']"
													},
													"sink": {
														"name": "settlement",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['DateStamp']"
													},
													"sink": {
														"name": "DateStamp",
														"type": "DateTimeOffset"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "OMJ_API_DS",
											"type": "DatasetReference",
											"parameters": {
												"relativeURL": {
													"value": "settlement?date=@{variables('YesterdaysDate')}&instruments=@{item().Symbol}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_Prod_DB",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "S.OmjPrices",
												"SchemaName": "RAW"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Get yesterdays date",
						"description": "Date of pricing",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "YesterdaysDate",
							"value": {
								"value": "@formatDateTime(adddays(utcnow(), -1), 'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"YesterdaysDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Sales/OMJ"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get_Daily_Prices_old')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get yesterdays date",
						"description": "Date of pricing",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "YesterdaysDate",
							"value": {
								"value": "@formatDateTime(adddays(utcnow(), -1), 'yyyy-MM-dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Lookup products",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Get yesterdays date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "OMJ_Product_List_DS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup products",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup products').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy OMJ daily price to BLOB",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings",
												"metadata": [
													{
														"name": "ContentType",
														"value": "application/json"
													}
												]
											},
											"formatSettings": {
												"type": "JsonWriteSettings",
												"filePattern": "arrayOfObjects"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "OMJ_API_DS",
											"type": "DatasetReference",
											"parameters": {
												"relativeURL": {
													"value": "settlement?date=@{variables('YesterdaysDate')}&instruments=@{item().Symbol}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "OMJ_API_Sink_DS",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@concat(item().Symbol, '_', variables('YesterdaysDate'))",
													"type": "Expression"
												},
												"folderName": {
													"value": "@variables('YesterdaysDate')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"YesterdaysDate": {
						"type": "String"
					},
					"OmjSymbol": {
						"type": "String",
						"defaultValue": "X21-WMR"
					}
				},
				"folder": {
					"name": "Sales/OMJ"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get_Daily_Prices_old2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get yesterdays date",
						"description": "Date of pricing",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "YesterdaysDate",
							"value": "2024-02-23"
						}
					},
					{
						"name": "Lookup FX products",
						"description": "Return list of Symbols from [RAW].[S.OmjProducts] with Type \"FX\"",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Get yesterdays date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [Symbol]\nFROM [RAW].[S.OmjProducts]\nWHERE [Type] = 'FX'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Prod_DB",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "S.OmjProducts",
									"SchemaName": "RAW"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup FX products",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup FX products').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy OMJ daily FX rates to SQL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('settlement?date=', variables('YesterdaysDate'), '&instruments=', item().Symbol)}"
										},
										{
											"name": "Destination",
											"value": "omj-daily-prices/@{variables('YesterdaysDate')}/@{concat(concat(item().Symbol, '_', variables('YesterdaysDate')), '.json')}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date",
														"type": "DateTimeOffset"
													}
												},
												{
													"source": {
														"path": "$['contractName']"
													},
													"sink": {
														"name": "contractName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['settlement']"
													},
													"sink": {
														"name": "settlement",
														"type": "Decimal"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "OMJ_API_DS",
											"type": "DatasetReference",
											"parameters": {
												"relativeURL": {
													"value": "settlement?date=@{variables('YesterdaysDate')}&instruments=@{item().Symbol}",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_Prod_DB",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "S.OmjFxRates",
												"SchemaName": "RAW"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"YesterdaysDate": {
						"type": "String"
					},
					"OmjSymbol": {
						"type": "String",
						"defaultValue": "X21-WMR"
					}
				},
				"folder": {
					"name": "Sales/OMJ"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get_Historic_FxRates')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup FX products",
						"description": "Return list of Symbols from [RAW].[S.OmjProducts] with Type \"FX\"",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [Symbol]\nFROM [RAW].[S.OmjProducts]\nWHERE [Type] = 'FX'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Prod_DB",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "S.OmjProducts",
									"SchemaName": "RAW"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For each product",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup FX products",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup FX products').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy prices to SQL",
									"description": "Copy daily OMJ prices to [RAW].[S.OmjPrices]",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('history/settlement?dateFrom=2023-01-01&dateTo=2024-02-25&instrument=', item().Symbol, '&contractNumber=0')}"
										},
										{
											"name": "Destination",
											"value": "@{'RAW'}.@{'S.OmjFxRatesHistoric'}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DateStamp",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date",
														"type": "DateTimeOffset"
													}
												},
												{
													"source": {
														"path": "$['contractName']"
													},
													"sink": {
														"name": "contractName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['settlement']"
													},
													"sink": {
														"name": "settlement",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['DateStamp']"
													},
													"sink": {
														"name": "DateStamp",
														"type": "DateTimeOffset"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "OMJ_API_DS",
											"type": "DatasetReference",
											"parameters": {
												"relativeURL": {
													"value": "history/settlement?dateFrom=2023-01-01&dateTo=2024-02-25&instrument=@{item().Symbol}&contractNumber=0",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_Prod_DB",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "S.OmjFxRatesHistoric",
												"SchemaName": "RAW"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Sales/OMJ"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Get_Historic_Prices')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup price products",
						"description": "Return list of Symbols from [RAW].[S.OmjProducts] with Type \"Price\"",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT [Symbol]\nFROM [RAW].[S.OmjProducts]\nWHERE [Type] = 'Price'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Prod_DB",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "S.OmjProducts",
									"SchemaName": "RAW"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For each product",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup price products",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup price products').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy prices to SQL",
									"description": "Copy daily OMJ prices to [RAW].[S.OmjPrices]",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{concat('history/settlement?dateFrom=2023-01-01&dateTo=2024-02-25&instrument=', item().Symbol, '&contractNumber=0')}"
										},
										{
											"name": "Destination",
											"value": "@{'RAW'}.@{'S.OmjPricesHistoric'}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DateStamp",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['id']"
													},
													"sink": {
														"name": "id",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['date']"
													},
													"sink": {
														"name": "date",
														"type": "DateTimeOffset"
													}
												},
												{
													"source": {
														"path": "$['contractName']"
													},
													"sink": {
														"name": "contractName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['settlement']"
													},
													"sink": {
														"name": "settlement",
														"type": "Decimal"
													}
												},
												{
													"source": {
														"path": "$['DateStamp']"
													},
													"sink": {
														"name": "DateStamp",
														"type": "DateTimeOffset"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "OMJ_API_DS",
											"type": "DatasetReference",
											"parameters": {
												"relativeURL": {
													"value": "history/settlement?dateFrom=2023-01-01&dateTo=2024-02-25&instrument=@{item().Symbol}&contractNumber=0",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_Prod_DB",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "S.OmjPricesHistoric",
												"SchemaName": "RAW"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Sales/OMJ"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OneFilepush')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Finance Reference Tables",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlServerSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": true,
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dailyload",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SQL_Argent_Database",
								"type": "DatasetReference",
								"parameters": {
									"TableName": "O.XLA_TRANSACTION_ENTITIES"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Finance"
				},
				"annotations": [],
				"lastPublishTime": "2022-10-13T12:23:42Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Run_AdHoc_Finance_Stored_Procedures')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_FinancePricingTables",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL_FinancePricingTables",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SQL_OrdersAndInvoicesTables",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SQL_SupplierBalanceTables",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL_OrdersAndInvoicesTables",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SQL_SupplierBalanceTables",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SQL_FinancePricingTables",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL_SupplierBalancesTables",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Finance/Ad-hoc Fianance Reporting"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Create_GL_TB_AfternoonRun')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CREATEGL_Script_1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CREATEGL_Script_1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CREATEGL_Script_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CREATEGL_Script_1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CREATEGL_Script_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CREATEGL_Script_3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CREATEGL_Script_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CREATEGL_Script_3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CREATE_TB_Rec",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CREATEGL_Script_3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CREATE_TB_Rec",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Finance"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Trade-Tables_To_BLOB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Trade Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT Table_schema, table_name from information_schema.tables\nwhere table_type = 'base table' and table_schema = 'Trade'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SQL_Trade_Tables",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Trade Table For Each",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Trade Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Trade Tables').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy Trade Tables",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_Dynamic_Trade_Table",
											"type": "DatasetReference",
											"parameters": {
												"schema": {
													"value": "@item().TABLE_SCHEMA",
													"type": "Expression"
												},
												"table": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Trade_Tables",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@concat(item().TABLE_SCHEMA,'.',item().TABLE_NAME,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Trade"
				},
				"annotations": [],
				"lastPublishTime": "2022-09-02T10:47:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sales_Blob_to_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Sales_Excel_tables_lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"dataset": {
								"referenceName": "Blob_Sales_DataWallet_Excel",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Copy sheets to tables",
						"description": "Copies each sheet in the lookup sheet to a separate SQL table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Sales_Excel_tables_lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Sales_Excel_tables_lookup').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy from Excel file",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Drop",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ExcelSource",
											"additionalColumns": [
												{
													"name": "DateStamp",
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Blob_Sales_DataWallet_Sheets",
											"type": "DatasetReference",
											"parameters": {
												"SheetName": {
													"value": "@item().SheetName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_Sharepoint_Data_Tables",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Drop",
									"description": "Drop existing Sales Excel tables",
									"type": "Script",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "SqlServerArgent",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "NonQuery",
												"text": {
													"value": "DROP TABLE IF EXISTS [RAW].[@{item().TableName}]",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Sales"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-14T16:24:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sales_SharePoint_To_Blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copies the Sales Excel file to Azure blob storage container",
				"activities": [
					{
						"name": "Sharepoint_token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"url": "https://accounts.accesscontrol.windows.net/723124e0-74e9-482b-a731-4f534e16e043/tokens/OAuth/2",
							"body": "grant_type=client_credentials&client_id=2de0db9a-9127-408d-a1b4-f79f8da14b07@723124e0-74e9-482b-a731-4f534e16e043&client_secret=nN48Q~nbL5MuWJfZooYV2bW1EuY~Kh_hRMcjJc_J&resource=00000003-0000-0ff1-ce00-000000000000/argentenergyltd.sharepoint.com@723124e0-74e9-482b-a731-4f534e16e043"
						}
					},
					{
						"name": "Copy_SharePoint_to_Blob",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Sharepoint_token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": true
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "Trade%20Excel%20Data%20for%20DWH.xlsx')/$value"
							},
							{
								"name": "Destination",
								"value": "sharepoint-files//@{pipeline().parameters.ExcelName}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"additionalHeaders": {
										"value": "@{concat('Authorization: Bearer ', activity('Sharepoint_token').output.access_token)}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SharePoint_Sales_DataWallet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Blob_Sharepoint_Files",
								"type": "DatasetReference",
								"parameters": {
									"ItemName": "@pipeline().parameters.ExcelName"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ExcelName": {
						"type": "string",
						"defaultValue": "Sales Excel Data for DWH.xlsx"
					}
				},
				"folder": {
					"name": "Sales"
				},
				"annotations": [],
				"lastPublishTime": "2022-11-11T15:23:09Z"
			},
			"dependsOn": []
		}
	]
}