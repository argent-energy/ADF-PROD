{
	"name": "CREATEGL_Script_2",
	"properties": {
		"activities": [
			{
				"name": "CREATEGL2",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "SqlServerArgent",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "--------------------------------------------------------------------------------------------------------------------------------------------\r\n\t-- 2.1\tCreate PY GL\r\n\t-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\tIF OBJECT_ID('tempdb..#GL_PY','U') IS NOT NULL DROP TABLE #GL_PY\r\n\tIF OBJECT_ID('Core.GL_PY','U') IS NOT NULL DROP TABLE Core.GL_PY;\r\n\r\n\tSELECT\t\t\r\n\tgcc.SEGMENT1 AS [Entity] ,\r\n\te.DESCRIPTION AS [Company Name] , \r\n\tjh.[JE_HEADER_ID] AS [Journal Number] ,\r\n\tCONVERT(VARCHAR(10),CAST(LEFT(jh.[CREATION_DATE],10)  AS DATE),103) AS [Date Entered] ,\r\n\tCONVERT(VARCHAR(10),CAST(SUBSTRING(jh.[CREATION_DATE],12,8)  AS TIME),108) AS [Time Entered] ,\r\n\tCONVERT(VARCHAR(10),CAST(LEFT(jh.LAST_UPDATE_DATE,10) AS DATE),103) AS [Date Updated] ,\r\n\tCONVERT(VARCHAR(10),CAST(SUBSTRING(jh.LAST_UPDATE_DATE,12,8) AS TIME),108) AS [Time Updated] ,\r\n\tjl.[CREATED_BY] AS [User Entered] ,\r\n\tjl.[LAST_UPDATED_BY] AS [User Updated] ,\r\n\tCONVERT(VARCHAR(10),CAST(LEFT(jh.DEFAULT_EFFECTIVE_DATE,10) AS DATE),103) AS [Date Effective],\r\n\tCONVERT(VARCHAR(10),CAST(LEFT(jh.DEFAULT_EFFECTIVE_DATE,10) AS DATE),103) as [Date of Journal],\r\n\tCASE WHEN gp.PERIOD_NUM = '13' THEN '12' ELSE RIGHT(CONCAT('0',gp.PERIOD_NUM),2) END AS [Financial Period] ,\r\n\tjh.[JE_source]\tAS [Journal Type] ,\r\n\tjs.[DESCRIPTION] AS [Journal Type Description] ,\r\n\tLEFT(jh.[DESCRIPTION],200) AS [Journal Description] ,\r\n\tjl.[JE_LINE_NUM] AS [Line Number] ,\r\n\tLEFT(jl.[DESCRIPTION],200) AS [Line Description] ,\r\n\tjh.[CURRENCY_CODE] AS [Currency] ,\r\n\tgl.[CURRENCY_CODE] AS [Entity Currency (EC)] ,\r\n\tCASE WHEN CAST(ACCOUNTED_AMOUNT AS MONEY) > 0 THEN 'D' \r\n\t\t WHEN CAST(ACCOUNTED_AMOUNT AS MONEY) < 0 THEN 'C' \r\n\t\t WHEN CAST(ACCOUNTED_AMOUNT AS MONEY) = 0 AND CAST(ENTERED_AMOUNT AS MONEY) > 0 THEN 'D' \r\n\t\t WHEN CAST(ACCOUNTED_AMOUNT AS MONEY) = 0 AND CAST(ENTERED_AMOUNT AS MONEY) < 0 THEN 'C' ELSE 'D' END AS [DC Indicator], \r\n\tCAST(ENTERED_AMOUNT AS MONEY) AS [Signed Journal Amount], \r\n\tCASE WHEN CAST(ENTERED_AMOUNT AS MONEY) >= 0 THEN     CAST(ENTERED_AMOUNT AS MONEY) ELSE 0 END AS [Unsigned Debit Amount], \r\n\tCASE WHEN CAST(ENTERED_AMOUNT AS MONEY)  < 0 THEN ABS(CAST(ENTERED_AMOUNT AS MONEY)) ELSE 0 END AS [Unsigned Credit Amount], \r\n\tCAST(ACCOUNTED_AMOUNT AS MONEY) AS [Signed Amount EC], \r\n\tCASE WHEN CAST(ACCOUNTED_AMOUNT AS MONEY) >= 0 THEN     CAST(ACCOUNTED_AMOUNT AS MONEY) ELSE 0 END AS [Unsigned Debit Amount EC],\r\n\tCASE WHEN CAST(ACCOUNTED_AMOUNT AS MONEY)  < 0 THEN ABS(CAST(ACCOUNTED_AMOUNT AS MONEY)) ELSE 0 END AS [Unsigned Credit Amount EC], \r\n\tgcc.SEGMENT3 AS [Account Number] ,\r\n\ta.[DESCRIPTION] AS [Account Description] ,\r\n\tCASE \r\n\t\tWHEN gcc.SEGMENT3 IN ('111108','111112') THEN 'Cash and overdrafts' \r\n\t\tWHEN gcc.SEGMENT3 IN ('111110','111114') THEN 'Trade Debtors' \r\n\t\tWHEN gcc.SEGMENT3 IN ('122003','122005') THEN 'Other Debtors & Prepayments' \r\n\t\tWHEN gcc.SEGMENT3 IN ('131003','133006','133012','133014','133027','135001','135005','135009') THEN 'Stock' \r\n\t\tWHEN gcc.SEGMENT3 IN ('212999','231003','231004') THEN 'Other Creditors' \r\n\t\tWHEN gcc.SEGMENT3 IN ('311002','311003') THEN 'Share Capital & Reserves#5' \r\n\t\tWHEN gcc.SEGMENT3 IN ('414002') THEN 'Revenue' \r\n\t\tELSE  fr.[AccountDesc#5] \r\n\tEND AS [Account Category] ,\r\n\t'All' AS [Controlling Area for Cost and Profit Centre] ,\r\n\tgcc.SEGMENT2 AS [Cost Centre] ,\r\n\tc.[DESCRIPTION] AS [Cost Centre Description] , \r\n\tgcc.SEGMENT2 AS [Profit Centre] ,\r\n\tp.[DESCRIPTION] AS [Profit Centre Description] ,\r\n\tRIGHT(CONVERT(VARCHAR(10),CAST(LEFT(jh.DEFAULT_EFFECTIVE_DATE,10) AS DATE),103),4) AS [Year] ,\r\n\tDATENAME(MONTH,CONCAT(RIGHT(CONVERT(VARCHAR(10),CAST(LEFT(jh.DEFAULT_EFFECTIVE_DATE,10) AS DATE),103),4),'-',CASE WHEN gp.PERIOD_NUM = '13' THEN '12' ELSE RIGHT(CONCAT('0',gp.PERIOD_NUM),2) END,'-01')) \r\n\t\t+ ' ' + RIGHT(CONVERT(VARCHAR(10),CAST(LEFT(jh.DEFAULT_EFFECTIVE_DATE,10) AS DATE),103),4) AS [Date]\r\n\tINTO\t\t#GL_PY\r\n\tFROM\t\tCore.GL_JE_Lines jl\r\n\tLEFT JOIN\t[RAW].[O.GL_JE_HEADERS] jh ON jh.JE_HEADER_ID = jl.JE_HEADER_ID\r\n\tLEFT JOIN\t[RAW].[O.GL_JE_BATCHES] jb ON jh.JE_BATCH_ID = jb.JE_BATCH_ID\r\n\tLEFT JOIN\t[RAW].[O.GL_CODE_COMBINATIONS] gcc ON jl.CODE_COMBINATION_ID = gcc.CODE_COMBINATION_ID\r\n\tLEFT JOIN\t[RAW].[O.GL_LEDGERS] gl ON gl.LEDGER_ID = jl.LEDGER_ID\r\n\tLEFT JOIN\t[RAW].[O.GL_PERIODS] gp ON gp.PERIOD_NAME = jl.PERIOD_NAME AND gp.PERIOD_SET_NAME = gl.PERIOD_SET_NAME\r\n\tLEFT JOIN\t[RAW].[O.GL_JE_SOURCES_TL] js ON js.JE_SOURCE_NAME = jh.JE_SOURCE AND js.LANGUAGE = 'US'\r\n\tLEFT JOIN\tCore.GL_Descriptions e ON e.FLEX_VALUE = gcc.SEGMENT1 AND e.VALUE_CATEGORY = 'Company Argent'\r\n\tLEFT JOIN\tCore.GL_Descriptions a ON a.FLEX_VALUE = gcc.SEGMENT3 AND a.VALUE_CATEGORY = 'Account Argent'\r\n\tLEFT JOIN\tCore.GL_Descriptions c ON c.FLEX_VALUE = gcc.SEGMENT2 AND c.VALUE_CATEGORY = 'Cost Centre Argent'\r\n\tLEFT JOIN\tCore.GL_Descriptions p ON p.FLEX_VALUE = gcc.SEGMENT2 AND p.VALUE_CATEGORY = 'Cost Centre Argent'\r\n\tLEFT JOIN\t[RAW].[F.FinanceReference] fr ON gcc.[SEGMENT3] = fr.[AccountDesc#9]\r\n\t\r\n\tWHERE\tjl.STATUS = 'P'\r\n\tAND\t\tREPLACE(jb.ACTUAL_FLAG,'|','') = 'A'\r\n\tAND\t\tISNULL(jh.CURRENCY_CODE, gl.[CURRENCY_CODE]) <> 'STAT'\r\n\tAND \tgcc.SUMMARY_FLAG = 'N'\r\n--\tAND\t\tYEAR(CAST(GETDATE() AS DATE)) - 1 = CONCAT('20',RIGHT(jl.[PERIOD_NAME],2))\t\tReplaced with below to include Dec of previous, previous year\r\n\tAND\t\t(YEAR(CAST(GETDATE() AS DATE)) - 1 = CONCAT('20',RIGHT(jl.[PERIOD_NAME],2))\r\n\t\t\t\tOR CONCAT('Dec-', RIGHT(YEAR(CAST(GETDATE() AS date)) - 2, 2)) = jl.[PERIOD_NAME]\r\n\t\t\t\tOR CONCAT('13_Dec-', RIGHT(YEAR(CAST(GETDATE() AS date)) - 2, 2)) = jl.[PERIOD_NAME])\r\n\r\n\r\n\r\n\tSELECT\t\tgl.*\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'EUR'\r\n\t\t\t\t\t\tTHEN IIF(CAST(LEFT([Account Number],1) AS INT) >= 4,[Signed Amount EC]*fxpl.[EUR GBP],[Signed Amount EC]*fxbs.[EUR GBP])\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'CNY'\r\n\t\t\t\t\t\tTHEN [Signed Amount EC] * [CNY GBP]\r\n\t\t\t\t\tELSE [Signed Amount EC]\r\n\t\t\t\tEND AS [Signed Amount EC GBP]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'EUR'\r\n\t\t\t\t\t\tTHEN IIF(CAST(LEFT([Account Number],1) AS INT) >= 4,[Unsigned Debit Amount EC]*fxpl.[EUR GBP],[Unsigned Debit Amount EC]*fxbs.[EUR GBP])\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'CNY'\r\n\t\t\t\t\t\tTHEN [Unsigned Debit Amount EC] * [CNY GBP]\r\n\t\t\t\t\tELSE [Unsigned Debit Amount EC]\r\n\t\t\t\tEND AS [Unsigned Debit Amount EC GBP]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'EUR'\r\n\t\t\t\t\t\tTHEN IIF(CAST(LEFT([Account Number],1) AS INT) >= 4,[Unsigned Credit Amount EC]*fxpl.[EUR GBP],[Unsigned Credit Amount EC]*fxbs.[EUR GBP])\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'CNY'\r\n\t\t\t\t\t\tTHEN [Unsigned Credit Amount EC] * [CNY GBP]\r\n\t\t\t\t\tELSE [Unsigned Credit Amount EC]\r\n\t\t\t\tEND AS [Unsigned Credit Amount EC GBP]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'GBP'\r\n\t\t\t\t\t\tTHEN IIF(CAST(LEFT([Account Number],1) AS INT) >= 4,[Signed Amount EC]/fxpl.[EUR GBP],[Signed Amount EC]/fxbs.[EUR GBP])\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'CNY'\r\n\t\t\t\t\t\tTHEN ([Unsigned Credit Amount EC] * [CNY GBP]) * [fx2].[EUR GBP]\r\n\t\t\t\t\tELSE [Signed Amount EC]\r\n\t\t\t\tEND AS [Signed Amount EC EUR]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'GBP'\r\n\t\t\t\t\t\tTHEN IIF(CAST(LEFT([Account Number],1) AS INT) >= 4,[Unsigned Debit Amount EC]/fxpl.[EUR GBP],[Unsigned Debit Amount EC]/fxbs.[EUR GBP])\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'CNY'\r\n\t\t\t\t\t\tTHEN ([Unsigned Debit Amount EC] * [CNY GBP]) * [fx2].[EUR GBP]\r\n\t\t\t\t\tELSE [Unsigned Debit Amount EC]\r\n\t\t\t\tEND AS [Unsigned Debit Amount EC EUR]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'GBP'\r\n\t\t\t\t\t\tTHEN IIF(CAST(LEFT([Account Number],1) AS INT) >= 4,[Unsigned Credit Amount EC]/fxpl.[EUR GBP],[Unsigned Credit Amount EC]/fxbs.[EUR GBP])\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'CNY'\r\n\t\t\t\t\t\tTHEN ([Unsigned Credit Amount EC] * [CNY GBP]) * [fx2].[EUR GBP]\r\n\t\t\t\t\tELSE [Unsigned Credit Amount EC]\r\n\t\t\t\tEND AS [Unsigned Credit Amount EC EUR]\r\n\t,\t\t\tCONCAT([Journal Number],':',[Line Number]) AS [GL_SL Link]\r\n\t,\t\t\tCONCAT([Entity],':',gl.[Currency],':',[Journal Number],':',[Line Number],':',[Cost Centre],':',gl.[Date]) AS [GL_Transactiion Link]\r\n\t,\t\t\tCONCAT([Entity],':',[Entity Currency (EC)],':',[Account Number],':',[Cost Centre],':',gl.[Date]) AS [GL_Budget Link]\r\n\t,\t\t\tCONCAT([Entity],':',[Entity Currency (EC)],':',[Account Number],':',gl.[Date]) AS [TB_GL Link]\r\n\tINTO\t\tCore.GL_PY\r\n\tFROM\t\t#GL_PY gl\r\n\tLEFT JOIN\tCore.FXRates_PL fxpl\r\n\tON\t\t\tfxpl.[Year] = gl.[Year]\r\n\tAND\t\t\tfxpl.[Month] = gl.[Financial Period]\r\n\tLEFT JOIN\tCore.FXRates_BS fxbs\r\n\tON\t\t\tfxbs.[Year] = gl.[Year]\r\n\tAND\t\t\tfxbs.[Month] = gl.[Financial Period]\r\n\tLEFT JOIN\tCore.FXRates fx2\r\n\tON\t\t\tfx2.[CONVERSION_DATE_UK_STYLE] = gl.[Date Effective]"
						}
					]
				}
			}
		],
		"folder": {
			"name": "Finance"
		},
		"annotations": [],
		"lastPublishTime": "2023-01-10T13:55:36Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}