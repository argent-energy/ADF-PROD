{
	"name": "SQL_Margin_Data_Marks_Script",
	"properties": {
		"activities": [
			{
				"name": "Margin Data Marks Script",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "SqlServerArgent",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "/*==============================================================================================================================*\r\n * Project:\t\tArgent\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * Purpose:\t\tCreate the data marts that will feed into the Margin report.\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * Description:\t1) Create Orders And Invoices data marts\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n * Prerequisites: Run tracability loop script.\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n *\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * Outputs: Tables \"Trade.PurchaseOrdersAndInvoices\", \"Trade.SalesOrdersAndInvoices\", \"Trade.TraceabilityAndOrders\"\t\t\t\t*\r\n *\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * SQL ATR - Basic joins, LAG funtion used on Line 77, Simple maths used throughout\t\t\t\t\t\t\t\t\t\t\t\t* \r\n *\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n *\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n *\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * Date:       29/07/2022\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * Version:     1.0\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n *==============================================================================================================================*\r\n * Updates:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * Date\t\t| Version | Author\t\t| Change made\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * -----------------------------------------------------------------------------------------------------------------------------*\r\n * --/--/-- |  1.-\t  |\t\t\t\t|\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n *\t\t\t|\t\t  |\t\t\t\t|\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n *==============================================================================================================================*/\r\n\r\n/********************************************************************************************************\r\n\tStep 3.1\tJoin invoices on to purchase orders to create [Trade].[PurchaseOrdersAndInvoice] table.\r\n\r\n\t\t\t\tIf order number = previous row's order number then Invoice Amount = Invoice Line Amount\r\n\t\t\t\tIf invoiced quantity > 0 then Invoice Amount = Invoice Line Amount\r\n\t\t\t\tElse Invoice Amount = Primary Quantity * Unit Price = Order Amount\r\n********************************************************************************************************/\r\n\r\n\tIF OBJECT_ID('[Trade].[PurchaseOrdersAndInvoices]','U') IS NOT NULL\r\n\t\tDROP TABLE [Trade].[PurchaseOrdersAndInvoices]\r\n\r\n\tSELECT\t\tpo.[Purchase Order Number]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Order Number]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN RIGHT(REPLACE(po.[Purchase Order Number],'T',''),2) IN ('O1','O2')\r\n\t\t\t\t\t\tTHEN LEFT(REPLACE(po.[Purchase Order Number],'T',''),LEN(REPLACE(po.[Purchase Order Number],'T',''))-2)\r\n\t\t\t\t\tELSE REPLACE(po.[Purchase Order Number],'T','')\r\n\t\t\t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Parent Order]\r\n\t,\t\t\tsn.[Supplier Name]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Supplier/Customer]\r\n\t,\t\t\ts.[Supplier ID]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Supplier/Customer Number]\r\n\t,\t\t\tISNULL(pc.[Blanket Purchase Agreement Number],'')\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Agreement Number/Sales Contract Number]\r\n\t,\t\t\tISNULL(i.[Item Code],po.[Item Description])\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Item Code]\r\n\t,\t\t\tpo.[Item Description]\r\n\t,\t\t\ti.[Category Code]\r\n\t,\t\t\tpo.[Unit Price]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Agreement Price]\r\n\t,\t\t\trt.[Primary Quantity]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Quantity]\r\n\t,\t\t\tap.[Unit Price]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Invoice Price]\r\n\t,\t\t\tap.[Quantity Invoiced]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Invoiced Quantity]\r\n\t,\t\t\tap.[Invoice Line Amount]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Invoice Line Amount]\r\n\t,\t\t\tpo.[Purchase Document Currency]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Currency]\r\n\t,\t\t\to.[Business Unit Name]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Business Unit]\r\n\t,\t\t\trt.[Inventory Organization Code]\r\n\t,\t\t\trt.[Inventory Organization Name] \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t,\t\t\tpo.[Ordered Quantity]\t\t\r\n\t,\t\t\tap.[Approval Status]\t\r\n\t,\t\t\tp.[Mode of Transport]\t\r\n\t,\t\t\tpo.[Incoterm]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Freight Terms]\t\t\t\t\t\t\t\r\n\t,\t\t\tap.[Invoice Number]\t\t\t\r\n\t,\t\t\tpo.[Purchase Document Status]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Order Status]\r\n\t,\t\t\tCAST(LEFT(rt.[Transaction Date],10) AS DATE)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Transaction Date]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN po.[Purchase Order Number] = LAG(po.[Purchase Order Number])OVER(ORDER BY po.[Purchase Order Number],ap.[Invoice Line Amount] DESC)\r\n\t\t\t\t\t\tTHEN\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN ap.[Approval Status] IN ('NEEDS REAPPROVAL','NEVER APPROVED')\r\n\t\t\t\t\t\t\t\t\t\tTHEN CAST(ap.[Unit Price] AS NUMERIC(28,2)) * CAST(ap.[Quantity Invoiced] AS NUMERIC(28,2))\r\n\t\t\t\t\t\t\t\t\tELSE (-1) * CAST(ap.[Invoice Line Amount] AS NUMERIC(28,2))\r\n\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\tWHEN CAST(ap.[Quantity Invoiced] AS NUMERIC(28,8)) > 0\r\n\t\t\t\t\t\tTHEN\tCASE\r\n\t\t\t\t\t\t\t\t\tWHEN ap.[Approval Status] IN ('NEEDS REAPPROVAL','NEVER APPROVED')\r\n\t\t\t\t\t\t\t\t\t\tTHEN CAST(ap.[Unit Price] AS NUMERIC(28,2)) * CAST(ap.[Quantity Invoiced] AS NUMERIC(28,2))\r\n\t\t\t\t\t\t\t\t\tELSE (-1) * CAST(ap.[Invoice Line Amount] AS NUMERIC(28,2))\r\n\t\t\t\t\t\t\t\tEND\r\n\t\t\t\t\tELSE (-1) * CAST(rt.[Primary Quantity] AS NUMERIC(28,2)) * CAST(po.[Unit Price] AS NUMERIC(28,2))\r\n\t\t\t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Invoice Amount]\r\n\t,\t\t\tfx.[EUR USD]\r\n\t,\t\t\tfx.[EUR GBP]\r\n\t,\t\t\ty.[Actual Yield]\r\n\t,\t\t\tln.[Lot Numbers]\r\n\t,\t\t\tCAST(GETDATE() AS DATE)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [DateStamp]\r\n\tINTO\t\t[Trade].[PurchaseOrdersAndinvoices]\r\n\tFROM\t\t[Core].[PurchaseOrders] po\r\n\tLEFT JOIN\t[Core].[Suppliers] s\r\n\tON\t\t\tpo.[Supplier] = s.[Vendor ID]\r\n\tAND\t\t\tpo.[Supplier Site] = s.[Vendor Site ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Party ID]\r\n\t\t\t\t\t,\t\t\tMIN([Party Name])\tAS [Supplier Name]\r\n\t\t\t\t\tFROM\t\t[Core].[Parties]\r\n\t\t\t\t\tGROUP BY\t[Party ID]\r\n\t\t\t\t) sn\r\n\tON\t\t\ts.[Party ID] = sn.[Party ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[PO Header ID]\r\n\t\t\t\t\t,\t\t\t[Blanket Purchase Agreement Number]\r\n\t\t\t\t\tFROM\t\t[Core].[PurchaseContracts]\r\n\t\t\t\t\tGROUP BY\t[PO Header ID]\r\n\t\t\t\t\t,\t\t\t[Blanket Purchase Agreement Number]\r\n\t\t\t\t) pc\r\n\tON\t\t\tpc.[PO Header ID] = po.[From Header ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Item Code]\r\n\t\t\t\t\t,\t\t\t[Inventory Item ID]\r\n\t\t\t\t\t,\t\t\t[Category Code]\r\n\t\t\t\t\tFROM\t\t[Core].[Items]\r\n\t\t\t\t\tGROUP BY\t[Item Code]\r\n\t\t\t\t\t,\t\t\t[Inventory Item ID]\r\n\t\t\t\t\t,\t\t\t[Category Code]\r\n\t\t\t\t) i \r\n\tON\t\t\ti.[Inventory Item ID] = po.[Item ID]\t\r\n\tLEFT JOIN\t[Core].[APInvoices] ap\r\n\tON\t\t\tpo.[PO Line ID] = ap.[PO Line ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Business Unit ID]\r\n\t\t\t\t\t,\t\t\t[Business Unit Name]\r\n\t\t\t\t\tFROM\t\t[Core].[Organizations]\r\n\t\t\t\t\tGROUP BY\t[Business Unit ID]\r\n\t\t\t\t\t,\t\t\t[Business Unit Name]\r\n\t\t\t\t) o\r\n\tON\t\t\tpo.[Procurement BU ID] = o.[Business Unit ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Party ID]\r\n\t\t\t\t\t,\t\t\tMIN([Party Name])\tAS [Mode of Transport]\r\n\t\t\t\t\tFROM\t\t[Core].[Parties]\r\n\t\t\t\t\tGROUP BY\t[Party ID]\r\n\t\t\t\t) p\r\n\tON\t\t\tpo.[Carrier ID] = p.[Party ID]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\ta.*\r\n\t\t\t\t\t,\t\t\tb.[Inventory Organization Name]\r\n\t\t\t\t\t,\t\t\tb.[Inventory Organization Code]\t\r\n\t\t\t\t\tFROM\t\t[Core].[ReceivingTransactions] a\r\n\t\t\t\t\tLEFT JOIN\t[Core].[Organizations] b\r\n\t\t\t\t\tON\t\t\ta.[Organization ID] = b.[Organization ID]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'RECEIVE'\r\n\t\t\t\t\tAND\t\t\tb.[Business Unit Name] IN ('BDA BU','Motherwell','Stanlow')\r\n\t\t\t\t) rt\r\n\tON\t\t\tpo.[PO Line ID] = rt.[PO Line ID]\r\n\tAND\t\t\tpo.[PO Header ID] = rt.[PO Header ID]\r\n\tAND\t\t\t(ap.[Receiving Transaction ID] = rt.[Transaction ID] OR ap.[Receiving Transaction ID] IS NULL)\r\n\tLEFT JOIN\t[Core].[FXRates] fx\r\n\tON\t\t\tCAST([CONVERSION_DATE] AS DATE) = CAST(LEFT(rt.[Transaction Date],10) AS DATE)\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Business Unit]\r\n\t\t\t\t\t,\t\t\t[Start date]\r\n\t\t\t\t\t,\t\t\t[End date]\r\n\t\t\t\t\t,\t\t\tAVG(CAST([Expected yield] AS DECIMAL(28,8))) AS [Actual Yield]\r\n\t\t\t\t\tFROM\t\t[Trade].[Yield]\r\n\t\t\t\t\tGROUP BY\t[Business Unit]\r\n\t\t\t\t\t,\t\t\t[Start date]\r\n\t\t\t\t\t,\t\t\t[End date]\r\n\t\t\t\t) y\r\n\tON\t\t\to.[Business Unit Name] = y.[Business Unit]\r\n\tAND\t\t\tCAST(LEFT(rt.[Transaction Date],10) AS DATE) BETWEEN CAST(y.[Start date] AS DATE) AND ISNULL(CAST(y.[End date] AS DATE),GETDATE())\t\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Document Number]\r\n\t\t\t\t\t,\t\t\t[Lot Numbers]\r\n\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Purchase Order Receipt'\r\n\t\t\t\t) ln\r\n\tON\t\t\tln.[Document Number] =  CASE\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN RIGHT(REPLACE(po.[Purchase Order Number],'T',''),2) IN ('O1','O2')\r\n\t\t\t\t\t\t\t\t\t\t\t\tTHEN LEFT(REPLACE(po.[Purchase Order Number],'T',''),LEN(REPLACE(po.[Purchase Order Number],'T',''))-2)\r\n\t\t\t\t\t\t\t\t\t\t\tELSE REPLACE(po.[Purchase Order Number],'T','')\r\n\t\t\t\t\t\t\t\t\t\tEND\r\n\tWHERE\t\t[Purchase Order Number] NOT LIKE '%PU-%'\r\n\tAND\t\t\ti.[Item Code] IS NOT NULL\r\n\tAND\t\t\t[Purchase Document Status] NOT IN ('CANCELED','INCOMPLETE','OPEN')\r\n\tAND\t\t\to.[Business Unit Name] IN ('BDA BU','Motherwell','Stanlow')\r\n\tAND\t\t\tCAST(LEFT(rt.[Transaction Date],10) AS DATE) >= '2021-01-01'\r\n\r\n/********************************************************************************************************\r\n\tStep 3.2\tJoin invoices on to sales orders to create [Trade].[SalesOrdersAndInvoices] table.\r\n\r\n\t\t\t\tInvoice Amount = [UNIT_SELLING_PRICE] * ([Line Quantity Invoiced] - [Quantity Credited])\r\n********************************************************************************************************/\r\n\t\r\n\tIF OBJECT_ID('[Trade].[SalesOrdersAndInvoices]','U') IS NOT NULL\r\n\t\tDROP TABLE [Trade].[SalesOrdersAndInvoices]\r\n\r\n\tSELECT\t\tso.[Order Number]\r\n\t,\t\t\tLEFT(so.[Order Number],5)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Parent Order]\r\n\t,\t\t\tso.[Item Code]\r\n\t,\t\t\tso.[Item Name]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Item Description]\r\n\t,\t\t\tso.[Category Code]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t,\t\t\tCAST(CASE WHEN ar.[UNIT_SELLING_PRICE] IS NULL THEN '0' ELSE ar.[UNIT_SELLING_PRICE] END AS NUMERIC(28,2))\t\t\t\t\tAS [Invoice Price]\r\n\t,\t\t\tCAST(CASE WHEN ar.[Line Quantity Invoiced] IS NULL THEN '0' ELSE ar.[Line Quantity Invoiced] END AS NUMERIC(28,2))\r\n\t\t\t\t\t- ABS(ISNULL(CAST(CASE WHEN ar.[Quantity Credited] IS NULL THEN '0' ELSE ar.[Quantity Credited] END AS NUMERIC(28,2)),0))\tAS [Invoiced Quantity]\r\n\t,\t\t\tso.[Unit of Measure]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Unit of Measure]\r\n\t,\t\t\tCASE \r\n\t\t\t\t\tWHEN so.[Unit of Measure]\t = 'LTR' \r\n\t\t\t\t\t\tTHEN (CAST(CASE WHEN ar.[Line Quantity Invoiced] IS NULL THEN '0' ELSE ar.[Line Quantity Invoiced] END AS NUMERIC(28,2))\r\n\t\t\t\t\t\t\t- ABS(ISNULL(CAST(CASE WHEN ar.[Quantity Credited] IS NULL THEN '0' ELSE ar.[Quantity Credited] END AS NUMERIC(28,2)),0))) * 0.0008745 \r\n\t\t\t\t\t\tELSE CAST(CASE WHEN ar.[Line Quantity Invoiced] IS NULL THEN '0' ELSE ar.[Line Quantity Invoiced] END AS NUMERIC(28,2))\r\n\t\t\t\t\t\t\t- ABS(ISNULL(CAST(CASE WHEN ar.[Quantity Credited] IS NULL THEN '0' ELSE ar.[Quantity Credited] END AS NUMERIC(28,2)),0))\r\n\t\t\t\tEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Invoiced Quantity (TN)]\t\r\n\t,\t\t\tso.[Transactional Currency Code]\r\n\t,\t\t\to.[Business Unit Name]\r\n\t,\t\t\tCAST(LEFT(ar.[TRX_DATE],10) AS DATE)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Transaction Date]\r\n\t,\t\t\tIIF(CAST(CASE WHEN ar.[UNIT_SELLING_PRICE] IS NULL THEN '0' ELSE ar.[UNIT_SELLING_PRICE] END AS NUMERIC(28,2)) < 0\r\n\t\t\t\t\t,(-1) * CAST(CASE WHEN ar.[UNIT_SELLING_PRICE] IS NULL THEN '0' ELSE ar.[UNIT_SELLING_PRICE] END AS NUMERIC(28,2)) \r\n\t\t\t\t\t\t\t* (CAST(CASE WHEN ar.[Line Quantity Invoiced] IS NULL THEN '0' ELSE ar.[Line Quantity Invoiced] END AS NUMERIC(28,2))\r\n\t\t\t\t\t\t\t\t- ABS(ISNULL(CAST(CASE WHEN ar.[Quantity Credited] IS NULL THEN '0' ELSE ar.[Quantity Credited] END AS NUMERIC(28,2)),0)))\r\n\t\t\t\t\t,CAST(CASE WHEN ar.[UNIT_SELLING_PRICE] IS NULL THEN '0' ELSE ar.[UNIT_SELLING_PRICE] END AS NUMERIC(28,2)) \r\n\t\t\t\t\t\t* (CAST(CASE WHEN ar.[Line Quantity Invoiced] IS NULL THEN '0' ELSE ar.[Line Quantity Invoiced] END AS NUMERIC(28,2))\r\n\t\t\t\t\t\t\t- ABS(ISNULL(CAST(CASE WHEN ar.[Quantity Credited] IS NULL THEN '0' ELSE ar.[Quantity Credited] END AS NUMERIC(28,2)),0)))\r\n\t\t\t\t\t)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Invoice Amount]\r\n\t,\t\t\t[EUR GBP]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [EUR:GBP]\r\n\t,\t\t\t[EUR USD]\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [EUR:USD]\r\n\t,\t\t\tCAST(GETDATE() AS DATE)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [DateStamp]\r\n\tINTO\t\t[Trade].[SalesOrdersAndInvoices]\r\n\tFROM\t\t(\r\n\t\t\t\t\tSELECT\t\tDISTINCT [Order Number]\r\n\t\t\t\t\t,\t\t\t[Transactional Currency Code]\r\n\t\t\t\t\t,\t\t\t[Org ID]\r\n\t\t\t\t\t,\t\t\tso.[Inventory Item ID]\r\n\t\t\t\t\t,\t\t\t[Inventory Organization ID]\r\n\t\t\t\t\t,\t\t\ti.[Unit of Measure]\r\n\t\t\t\t\t,\t\t\ti.[Item Code]\r\n\t\t\t\t\t,\t\t\ti.[Item Name]\t\t\r\n\t\t\t\t\t,\t\t\ti.[Category Code]\r\n\t\t\t\t\tFROM\t\t[Core].[SalesOrders] so\r\n\t\t\t\t\tLEFT JOIN\t[Core].[Items] i\r\n\t\t\t\t\tON\t\t\ti.[Inventory Item ID] = so.[Inventory Item ID]\r\n\t\t\t\t\tAND\t\t\ti.[Organization ID] = so.[Inventory Organization ID]\r\n\t\t\t\t\tWHERE\t\ti.[Category Code] NOT LIKE '%Services%'\r\n\t\t\t\t) so\r\n\tLEFT JOIN\t[Core].[ARInvoices] ar\r\n\tON\t\t\tso.[Order Number] = ar.[SALES_ORDER]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Business Unit ID]\r\n\t\t\t\t\t,\t\t\t[Business Unit Name]\r\n\t\t\t\t\tFROM\t\t[Core].[Organizations]\r\n\t\t\t\t\tGROUP BY\t[Business Unit ID]\r\n\t\t\t\t\t,\t\t\t[Business Unit Name]\r\n\t\t\t\t) o\r\n\tON\t\t\tso.[Org ID] = o.[Business Unit ID]\r\n\tLEFT JOIN\t[Core].[FXRates] fx\r\n\tON\t\t\tCAST([CONVERSION_DATE] AS DATE) = CAST(LEFT(ar.[TRX_DATE],10) AS DATE)\r\n\tWHERE\t\to.[Business Unit Name] IN ('BDA BU','Motherwell','Stanlow')\r\n\tAND\t\t\tCAST(LEFT(ar.[TRX_DATE],10) AS DATE) >= '2021-01-01'\r\n\tORDER BY\tso.[Order Number]\r\n\r\n/********************************************************************************************************\r\n\tStep 3.3\tJoin [Trade].[PurchaseOrdersAndInvoices] on to [Trade].[TraceabilityLooped] to obtain the original\r\n\t\t\t\tPO value of each feedstock item that feeds into each biodiesel sale.\r\n********************************************************************************************************/\r\n\r\n\tIF OBJECT_ID('[Trade].[TraceabilityAndOrders]','U') IS NOT NULL\r\n\t\tDROP TABLE [Trade].[TraceabilityAndOrders]\r\n\r\n\tSELECT\t\tt.*\r\n\t,\t\t\to.[Parent Order]\r\n\t,\t\t\tpoi.[PO Item Code]\r\n\t,\t\t\tpoi.[PO Item Description]\r\n\t,\t\t\tpoi.[PO Item Category]\r\n\t,\t\t\to.[Invoice Amount]\r\n\t,\t\t\to.[PO Quantity]\r\n\t,\t\t\to.[Invoice Amount]/NULLIF(o.[PO Quantity],0) AS [Price per MT]\r\n\t,\t\t\to.[Lot Numbers] AS [Lot Numbers Orders Table]\r\n\t,\t\t\to.[PO Transaction Date]\r\n\t,\t\t\to.[Business Unit] AS [PO Business Unit]\r\n\t,\t\t\tISNULL(sodr.[Returned Flag],'0') AS [Returned Flag]\r\n\tINTO\t\t[Trade].[TraceabilityAndOrders]\r\n\tFROM\t\t[Trade].[TraceabilityLooped] t\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Business Unit]\r\n\t\t\t\t\t,\t\t\t[Parent Order]\r\n\t\t\t\t\t,\t\t\tSUM(CASE WHEN [Currency] = 'USD' THEN [Invoice Amount]/[EUR USD]\r\n\t\t\t\t\t\t\t\t\t\t WHEN [Currency] = 'GBP' THEN [Invoice Amount]/[EUR GBP]\r\n\t\t\t\t\t\t\t\t\t\t ELSE [Invoice Amount]\r\n\t\t\t\t\t\t\t\t\tEND) AS [Invoice Amount]\r\n\t\t\t\t\t,\t\t\tSUM(CAST(CASE\r\n\t\t\t\t\t\t\t\t\t\t\tWHEN [Category Code] LIKE '%Feedstock%' OR [Category Code] LIKE '%Biodiesel%'\r\n\t\t\t\t\t\t\t\t\t\t\t\tTHEN IIF(CAST([Invoiced Quantity] AS DECIMAL(28,8)) = 0,[Invoiced Quantity],[Quantity])\r\n\t\t\t\t\t\t\t\t\t\t\tELSE '0'\r\n\t\t\t\t\t\t\t\t\t\t END AS DECIMAL(28,8))) AS [PO Quantity]\r\n\t\t\t\t\t,\t\t\tMAX([Transaction Date]) AS [PO Transaction Date]\r\n\t\t\t\t\t,\t\t\t[Lot Numbers]\r\n\t\t\t\t\tFROM\t\t[Trade].[PurchaseOrdersAndInvoices]\r\n\t\t\t\t\tGROUP BY\t[Business Unit]\r\n\t\t\t\t\t,\t\t\t[Parent Order]\r\n\t\t\t\t\t,\t\t\t[Lot Numbers]\r\n\t\t\t\t) o\r\n\tON\t\t\tCOALESCE(t.[Lot Numbers_21]\r\n\t\t\t\t\t\t,t.[Lot Numbers_20]\r\n\t\t\t\t\t\t,t.[Lot Numbers_19]\r\n\t\t\t\t\t\t,t.[Lot Numbers_18]\r\n\t\t\t\t\t\t,t.[Lot Numbers_17]\r\n\t\t\t\t\t\t,t.[Lot Numbers_16]\r\n\t\t\t\t\t\t,t.[Lot Numbers_15]\r\n\t\t\t\t\t\t,t.[Lot Numbers_14]\r\n\t\t\t\t\t\t,t.[Lot Numbers_13]\r\n\t\t\t\t\t\t,t.[Lot Numbers_12]\r\n\t\t\t\t\t\t,t.[Lot Numbers_11]\r\n\t\t\t\t\t\t,t.[Lot Numbers_10]\r\n\t\t\t\t\t\t,t.[Lot Numbers_9]\r\n\t\t\t\t\t\t,t.[Lot Numbers_8]\r\n\t\t\t\t\t\t,t.[Lot Numbers_7]\r\n\t\t\t\t\t\t,t.[Lot Numbers_6]\r\n\t\t\t\t\t\t,t.[Lot Numbers_5]\r\n\t\t\t\t\t\t,t.[Lot Numbers_4]\r\n\t\t\t\t\t\t,t.[Lot Numbers_3]\r\n\t\t\t\t\t\t,t.[Lot Numbers_2]\r\n\t\t\t\t\t\t,t.[Lot Numbers]) = o.[Lot Numbers]\t\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Parent Order]\r\n\t\t\t\t\t,\t\t\t[Item Code]\t\t\tAS [PO Item Code]\r\n\t\t\t\t\t,\t\t\t[Item Description]\tAS [PO Item Description]\r\n\t\t\t\t\t,\t\t\t[Category Code]\t\tAS [PO Item Category]\r\n\t\t\t\t\tFROM\t\t[Trade].[PurchaseOrdersAndInvoices]\t\t--20,098\r\n\t\t\t\t\tWHERE\t\t[Category Code] <> 'Services.Services'\r\n\t\t\t\t\tGROUP BY\t[Parent Order]\r\n\t\t\t\t\t,\t\t\t[Item Code]\r\n\t\t\t\t\t,\t\t\t[Item Description]\r\n\t\t\t\t\t,\t\t\t[Category Code]\r\n\t\t\t\t) poi\r\n\tON\t\t\to.[Parent Order] = poi.[Parent Order]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\tDISTINCT [Order Number]\t\r\n\t\t\t\t\t,\t\t\t[Line Number]\r\n\t\t\t\t\t,\t\t\t'1' AS [Returned Flag]\r\n\t\t\t\t\tFROM\t\t[Core].[SalesOrderDocumentReferences] sodr\r\n\t\t\t\t\tLEFT JOIN\t[Core].[SalesOrders] so\r\n\t\t\t\t\tON\t\t\tsodr.[DOC_LINE_ID] = so.[Line ID]\r\n\t\t\t\t\tWHERE\t\t[Line ID] IS NOT NULL\r\n\t\t\t\t) sodr\r\n\tON\t\t\tt.[SOURCE_HEADER_NUMBER] = sodr.[Order Number]\t\r\n\tAND\t\t\tt.[SOURCE_LINE_NUMBER] = sodr.[Line Number]\r\n\tORDER BY\tt.[CREATION_DATE]"
						}
					]
				}
			},
			{
				"name": "Margin Data Marks Script_copy1",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Margin Data Marks Script",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "SqlServerArgent",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "/*==============================================================================================================================*\r\n * Project:\t\tArgent\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * Purpose:\t\tCreate the data marts that will feed into the Margin report.\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * Description:\t1) Create sales order feedstock value data marts\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n * Prerequisites: Run tracability loop script.\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n *\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * Key Outputs: Tables \"[Trade].[SalesOrderFeedstockValues_POLevel_BiodieselQuantity]\"\t\t\t\t\t\t\t\t\t\t\t*\r\n\t\t\t\t\t, \"[Trade].[SalesOrderFeedstockValues_Summarised]\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n *\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n *\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * Date:       29/07/2022\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * Version:     1.0\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n *==============================================================================================================================*\r\n * Updates:\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * Date\t\t| Version | Author\t\t| Change made\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n * -----------------------------------------------------------------------------------------------------------------------------*\r\n * --/--/-- |  1.-\t  |\t\t\t\t|\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n *\t\t\t|\t\t  |\t\t\t\t|\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t*\r\n *==============================================================================================================================*/\r\n/********************************************************************************************************\r\n\tStep 4.1\tCalculate the original value of feedstock used from the original PO. [Trade].[TraceabilityAndOrders]\r\n\t\t\t\tis not filtered for Returned Flag = 1 so that cost of sales for all order numbers can be calculated.\r\n********************************************************************************************************/\r\n\r\n\tIF OBJECT_ID('[Trade].[POValues_RMA]','U') IS NOT NULL\r\n\t\tDROP TABLE [Trade].[POValues_RMA]\r\n\r\n\tSELECT\t\t* \r\n\t,\t\t\tCOALESCE([Quantity_21],[Quantity_19],[Quantity_17],[Quantity_15],[Quantity_13],[Quantity_11],[Quantity_9],[Quantity_7],[Quantity_5],[Quantity_3],[Quantity]) * [Price per MT] AS [PO Value]\r\n\tINTO\t\t[Trade].[POValues_RMA]\r\n\tFROM\t\t[Trade].[TraceabilityAndOrders]\r\n\r\n/********************************************************************************************************\r\n\tStep 4.2\tUse the quantities produced in each batch to calculate the value of feedstock from the original PO\r\n\t\t\t\tthat is used to create the biodiesel batch.\r\n********************************************************************************************************/\r\n\r\n\tIF OBJECT_ID('[Trade].[SalesOrderFeedstockValues_POLevel_RMA]','U') IS NOT NULL\r\n\t\tDROP TABLE [Trade].[SalesOrderFeedstockValues_POLevel_RMA]\r\n\r\n\tSELECT\t\t[Physical Date]\r\n\t,\t\t\t[Business Unit Name]\r\n\t,\t\t\t[Document Number] AS [Sales Order Number]\r\n\t,\t\t\t[Item Code]\r\n\t,\t\t\t[Item Name]\r\n\t,\t\t\tSUM(DISTINCT ABS([Quantity])) AS [Total Biodiesel Quantity in MT]\r\n\t,\t\t\tSUM(DISTINCT ABS(CASE WHEN [Returned Flag] = '1' THEN 0 ELSE [Quantity] END)) AS [Total Biodiesel Quantity Not Returned]\r\n\t,\t\t\t[Lot Numbers]\r\n\t,\t\t\t[Parent Order] AS [Purchase Order]\r\n\t,\t\t\t[PO Item Code]\r\n\t,\t\t\t[PO Item Description]\r\n\t,\t\t\t[PO Item Category]\r\n\t,\t\t\t[PO Transaction Date]\r\n\t,\t\t\t[PO Business Unit]\r\n\t,\t\t\tSUM(COALESCE([Quantity_21],[Quantity_19],[Quantity_17],[Quantity_15],[Quantity_13],[Quantity_11],[Quantity_9],[Quantity_7],[Quantity_5],[Quantity_3],[Quantity]))\tAS [PO Quantity Used]\r\n\t,\t\t\tSUM([PO Value]) AS [PO Value Used]\r\n\t,\t\t\tSUM(ABS(ISNULL(([Quantity]/[Quantity_2]),1) * ISNULL(([Quantity_3]/[Quantity_4]),1) * ISNULL(([Quantity_5]/[Quantity_6]),1) * ISNULL(([Quantity_7]/[Quantity_8]),1) * ISNULL(([Quantity_9]/[Quantity_10]),1) \r\n\t\t\t\t\t\t* ISNULL(([Quantity_11]/[Quantity_12]),1) * ISNULL(([Quantity_13]/[Quantity_14]),1) * ISNULL(([Quantity_15]/[Quantity_16]),1) * ISNULL(([Quantity_17]/[Quantity_18]),1) * ISNULL(([Quantity_19]/[Quantity_20]),1) \r\n\t\t\t\t\t\t\t* COALESCE([Quantity_21],[Quantity_19],[Quantity_17],[Quantity_15],[Quantity_13],[Quantity_11],[Quantity_9],[Quantity_7],[Quantity_5],[Quantity_3],[Quantity]))) AS [Feedstock Quantity]\r\n\t,\t\t\tSUM(ABS(ISNULL(([Quantity]/[Quantity_2]),1) * ISNULL(([Quantity_3]/[Quantity_4]),1) * ISNULL(([Quantity_5]/[Quantity_6]),1) * ISNULL(([Quantity_7]/[Quantity_8]),1) * ISNULL(([Quantity_9]/[Quantity_10]),1) \r\n\t\t\t\t\t\t* ISNULL(([Quantity_11]/[Quantity_12]),1) * ISNULL(([Quantity_13]/[Quantity_14]),1) * ISNULL(([Quantity_15]/[Quantity_16]),1) * ISNULL(([Quantity_17]/[Quantity_18]),1) * ISNULL(([Quantity_19]/[Quantity_20]),1) \r\n\t\t\t\t\t\t\t* [PO Value])) AS [Feedstock Value]\r\n\t,\t\t\tCAST(GETDATE() AS DATE) AS [DateStamp]\r\n\t,\t\t\t[Returned Flag]\r\n\tINTO\t\t[Trade].[SalesOrderFeedstockValues_POLevel_RMA]\r\n\tFROM\t\t[Trade].[POValues_RMA]\r\n\tGROUP BY\t[Physical Date]\r\n\t,\t\t\t[Business Unit Name]\r\n\t,\t\t\t[Document Number]\r\n\t,\t\t\t[Item Code]\r\n\t,\t\t\t[Item Name]\r\n\t,\t\t\t[Lot Numbers]\r\n\t,\t\t\t[Parent Order]\r\n\t,\t\t\t[PO Item Code]\r\n\t,\t\t\t[PO Item Description]\r\n\t,\t\t\t[PO Item Category]\r\n\t,\t\t\t[PO Transaction Date]\r\n\t,\t\t\t[PO Business Unit]\r\n\t,\t\t\t[Returned Flag]\r\n\r\n/********************************************************************************************************\r\n\tStep 4.3\tCalculate the biodiesel quantity that each PO has contributed to and also include yields.\r\n********************************************************************************************************/\r\n\r\n\tIF OBJECT_ID('[Trade].[SalesOrderFeedstockValues_POLevel_BiodieselQuantity_RMA]','U') IS NOT NULL\r\n\t\tDROP TABLE [Trade].[SalesOrderFeedstockValues_POLevel_BiodieselQuantity_RMA]\r\n\r\n\tSELECT\t\tpo.*\r\n\t,\t\t\tABS(MAX([Total Biodiesel Quantity in MT])OVER(PARTITION BY [Sales Order Number], [Lot Numbers], [Total Biodiesel Quantity in MT])/NULLIF(SUM([Feedstock Quantity])OVER(PARTITION BY [Sales Order Number], [Lot Numbers], [Total Biodiesel Quantity in MT]),0)\r\n\t\t\t\t\t* [Feedstock Quantity]) AS [Biodiesel Quantity Row Level]\r\n\t,\t\t\ty.[Actual Yield]\r\n\tINTO\t\t[Trade].[SalesOrderFeedstockValues_POLevel_BiodieselQuantity_RMA]\r\n\tFROM\t\t[Trade].[SalesOrderFeedstockValues_POLevel_RMA] po\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Business Unit]\r\n\t\t\t\t\t,\t\t\t[Start date]\r\n\t\t\t\t\t,\t\t\t[End date]\r\n\t\t\t\t\t,\t\t\tAVG(CAST([Expected yield] AS DECIMAL(28,8))) AS [Actual Yield]\r\n\t\t\t\t\tFROM\t\t[Trade].[Yield]\r\n\t\t\t\t\tGROUP BY\t[Business Unit]\r\n\t\t\t\t\t,\t\t\t[Start date]\r\n\t\t\t\t\t,\t\t\t[End date]\r\n\t\t\t\t) y\r\n\tON\t\t\tpo.[Business Unit Name] = y.[Business Unit]\r\n\tAND\t\t\tCAST(LEFT([Physical Date],10) AS DATE) BETWEEN CAST(y.[Start date] AS DATE) AND ISNULL(CAST(y.[End date] AS DATE),GETDATE())\r\n\r\n/********************************************************************************************************\r\n\tStep 4.4\tSummarise results at the SO level.\r\n********************************************************************************************************/\r\n\r\n\tIF OBJECT_ID('[Trade].[SalesOrderFeedstockValues_Summarised_RMA]','U') IS NOT NULL\r\n\t\tDROP TABLE [Trade].[SalesOrderFeedstockValues_Summarised_RMA]\r\n\r\n\tSELECT\t\tCAST(LEFT([Physical Date],10) AS DATE)\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Physical Date]\r\n\t,\t\t\t[Business Unit Name]\r\n\t,\t\t\t[Sales Order Number]\r\n\t,\t\t\t[Item Code]\r\n\t,\t\t\t[Item Name] \r\n\t,\t\t\tso.[Sales Invoice Amount]\r\n\t,\t\t\tSUM(ABS([Biodiesel Quantity Row Level]))\t\t\t\t\t\t\t\t\t\t\t\tAS [Biodiesel Quantity in MT] \r\n\t,\t\t\tMAX(so.[Sales Invoice Amount])/SUM(ABS([Biodiesel Quantity Row Level]))\t\t\t\t\tAS [Biodiesel Price]\r\n\t,\t\t\tSUM(ABS([Feedstock Value]))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Feedstock Value]\r\n\t,\t\t\tSUM(CASE\r\n\t\t\t\t\t\tWHEN [Purchase Order] IS NULL\r\n\t\t\t\t\t\t\tTHEN 0\r\n\t\t\t\t\t\tELSE [Feedstock Quantity]\r\n\t\t\t\t\tEND)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Feedstock Quantity in MT]\r\n\t,\t\t\tSUM(ABS([Feedstock Value]))/SUM(CASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN [Purchase Order] IS NULL\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tELSE [Feedstock Quantity]\r\n\t\t\t\t\t\t\t\t\t\t\t\tEND)\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Feedstock Price]\r\n\t,\t\t\ty.[Actual Yield]\r\n\t,\t\t\tIIF(so.[Sales Invoice Amount] IS NULL,'1','0') AS [Not Invoiced Flag]\r\n\t,\t\t\tCAST(GETDATE() AS DATE) AS [DateStamp]\r\n\tINTO\t\t[Trade].[SalesOrderFeedstockValues_Summarised_RMA]\r\n\tFROM\t\t[Trade].[SalesOrderFeedstockValues_POLevel_BiodieselQuantity_RMA] t\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Parent Order]\r\n\t\t\t\t\t,\t\t\tSUM(CASE\r\n\t\t\t\t\t\t\t\t\t\tWHEN [Transactional Currency Code] = 'GBP' THEN [Invoice Amount]/[EUR:GBP]\r\n\t\t\t\t\t\t\t\t\t\tWHEN [Transactional Currency Code] = 'USD' THEN [Invoice Amount]/[EUR:USD]\r\n\t\t\t\t\t\t\t\t\t\tELSE [Invoice Amount] \r\n\t\t\t\t\t\t\t\t\tEND) AS [Sales Invoice Amount]\r\n\t\t\t\t\tFROM\t\t[Trade].[SalesOrdersAndInvoices]\r\n\t\t\t\t\tGROUP BY\t[Parent Order]\r\n\t\t\t\t) so\t\t\r\n\tON\t\t\tt.[Sales Order Number] = so.[Parent Order]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Business Unit]\r\n\t\t\t\t\t,\t\t\t[Start date]\r\n\t\t\t\t\t,\t\t\t[End date]\r\n\t\t\t\t\t,\t\t\tAVG(CAST([Expected yield] AS DECIMAL(28,8))) AS [Actual Yield]\r\n\t\t\t\t\tFROM\t\t[Trade].[Yield]\r\n\t\t\t\t\tGROUP BY\t[Business Unit]\r\n\t\t\t\t\t,\t\t\t[Start date]\r\n\t\t\t\t\t,\t\t\t[End date]\r\n\t\t\t\t) y\r\n\tON\t\t\tt.[Business Unit Name] = y.[Business Unit]\r\n\tAND\t\t\tCAST(LEFT([Physical Date],10) AS DATE) BETWEEN CAST(y.[Start date] AS DATE) AND ISNULL(CAST(y.[End date] AS DATE),GETDATE())\r\n\tGROUP BY\tCAST(LEFT([Physical Date],10) AS DATE)\r\n\t,\t\t\t[Business Unit Name]\r\n\t,\t\t\t[Sales Order Number]\r\n\t,\t\t\t[Item Code]\r\n\t,\t\t\t[Item Name] \r\n\t,\t\t\tso.[Sales Invoice Amount]\r\n\t,\t\t\ty.[Actual Yield]\r\n\t,\t\t\tIIF(so.[Sales Invoice Amount] IS NULL,'1','0')\r\n\r\n\r\n\r\n/********************************************************************************************************\r\n\tStep 4.5\tRerun Step 4.1 but with returned orders removed.\r\n********************************************************************************************************/\r\n\r\n\tIF OBJECT_ID('[Trade].[POValues]','U') IS NOT NULL\r\n\t\tDROP TABLE [Trade].[POValues]\r\n\r\n\tSELECT\t\t* \r\n\t,\t\t\tCOALESCE([Quantity_21],[Quantity_19],[Quantity_17],[Quantity_15],[Quantity_13],[Quantity_11],[Quantity_9],[Quantity_7],[Quantity_5],[Quantity_3],[Quantity]) * [Price per MT] AS [PO Value]\r\n\tINTO\t\t[Trade].[POValues]\r\n\tFROM\t\t[Trade].[TraceabilityAndOrders]\r\n\tWHERE\t\t[Returned Flag] <> '1'\r\n\r\n/********************************************************************************************************\r\n\tStep 4.6\tRerun Step 4.2 but with returned orders removed.\r\n********************************************************************************************************/\r\n\r\n\tIF OBJECT_ID('[Trade].[SalesOrderFeedstockValues_POLevel]','U') IS NOT NULL\r\n\t\tDROP TABLE [Trade].[SalesOrderFeedstockValues_POLevel]\r\n\r\n\tSELECT\t\t[Physical Date]\r\n\t,\t\t\t[Business Unit Name]\r\n\t,\t\t\t[Document Number] AS [Sales Order Number]\r\n\t,\t\t\t[Item Code]\r\n\t,\t\t\t[Item Name]\r\n\t,\t\t\tSUM(DISTINCT ABS([Quantity])) AS [Total Biodiesel Quantity in MT]\r\n\t,\t\t\t[Lot Numbers]\r\n\t,\t\t\t[Parent Order] AS [Purchase Order]\r\n\t,\t\t\t[PO Item Code]\r\n\t,\t\t\t[PO Item Description]\r\n\t,\t\t\t[PO Item Category]\r\n\t,\t\t\t[PO Transaction Date]\r\n\t,\t\t\t[PO Business Unit]\r\n\t,\t\t\tSUM(COALESCE([Quantity_21],[Quantity_19],[Quantity_17],[Quantity_15],[Quantity_13],[Quantity_11],[Quantity_9],[Quantity_7],[Quantity_5],[Quantity_3],[Quantity]))\tAS [PO Quantity Used]\r\n\t,\t\t\tSUM([PO Value]) AS [PO Value Used]\r\n\t,\t\t\tSUM(ABS(ISNULL(([Quantity]/[Quantity_2]),1) * ISNULL(([Quantity_3]/[Quantity_4]),1) * ISNULL(([Quantity_5]/[Quantity_6]),1) * ISNULL(([Quantity_7]/[Quantity_8]),1) * ISNULL(([Quantity_9]/[Quantity_10]),1) \r\n\t\t\t\t\t\t* ISNULL(([Quantity_11]/[Quantity_12]),1) * ISNULL(([Quantity_13]/[Quantity_14]),1) * ISNULL(([Quantity_15]/[Quantity_16]),1) * ISNULL(([Quantity_17]/[Quantity_18]),1) * ISNULL(([Quantity_19]/[Quantity_20]),1) \r\n\t\t\t\t\t\t\t* COALESCE([Quantity_21],[Quantity_19],[Quantity_17],[Quantity_15],[Quantity_13],[Quantity_11],[Quantity_9],[Quantity_7],[Quantity_5],[Quantity_3],[Quantity]))) AS [Feedstock Quantity]\r\n\t,\t\t\tSUM(ABS(ISNULL(([Quantity]/[Quantity_2]),1) * ISNULL(([Quantity_3]/[Quantity_4]),1) * ISNULL(([Quantity_5]/[Quantity_6]),1) * ISNULL(([Quantity_7]/[Quantity_8]),1) * ISNULL(([Quantity_9]/[Quantity_10]),1) \r\n\t\t\t\t\t\t* ISNULL(([Quantity_11]/[Quantity_12]),1) * ISNULL(([Quantity_13]/[Quantity_14]),1) * ISNULL(([Quantity_15]/[Quantity_16]),1) * ISNULL(([Quantity_17]/[Quantity_18]),1) * ISNULL(([Quantity_19]/[Quantity_20]),1) \r\n\t\t\t\t\t\t\t* [PO Value])) AS [Feedstock Value]\r\n\t,\t\t\tCAST(GETDATE() AS DATE) AS [DateStamp]\r\n\tINTO\t\t[Trade].[SalesOrderFeedstockValues_POLevel]\r\n\tFROM\t\t[Trade].[POValues]\r\n\tGROUP BY\t[Physical Date]\r\n\t,\t\t\t[Business Unit Name]\r\n\t,\t\t\t[Document Number]\r\n\t,\t\t\t[Item Code]\r\n\t,\t\t\t[Item Name]\r\n\t,\t\t\t[Lot Numbers]\r\n\t,\t\t\t[Parent Order]\r\n\t,\t\t\t[PO Item Code]\r\n\t,\t\t\t[PO Item Description]\r\n\t,\t\t\t[PO Item Category]\r\n\t,\t\t\t[PO Transaction Date]\r\n\t,\t\t\t[PO Business Unit]\r\n\r\n/********************************************************************************************************\r\n\tStep 4.7\tRerun Step 4.3 but with returned orders removed.\r\n********************************************************************************************************/\r\n\r\n\tIF OBJECT_ID('[Trade].[SalesOrderFeedstockValues_POLevel_BiodieselQuantity]','U') IS NOT NULL\r\n\t\tDROP TABLE [Trade].[SalesOrderFeedstockValues_POLevel_BiodieselQuantity]\r\n\r\n\tSELECT\t\tpo.*\r\n\t,\t\t\tABS(MAX([Total Biodiesel Quantity in MT])OVER(PARTITION BY [Sales Order Number], [Lot Numbers], [Total Biodiesel Quantity in MT])/NULLIF(SUM([Feedstock Quantity])OVER(PARTITION BY [Sales Order Number], [Lot Numbers], [Total Biodiesel Quantity in MT]),0)\r\n\t\t\t\t\t* [Feedstock Quantity]) AS [Biodiesel Quantity Row Level]\r\n\t,\t\t\ty.[Actual Yield]\r\n\tINTO\t\t[Trade].[SalesOrderFeedstockValues_POLevel_BiodieselQuantity]\r\n\tFROM\t\t[Trade].[SalesOrderFeedstockValues_POLevel] po\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Business Unit]\r\n\t\t\t\t\t,\t\t\t[Start date]\r\n\t\t\t\t\t,\t\t\t[End date]\r\n\t\t\t\t\t,\t\t\tAVG(CAST([Expected yield] AS DECIMAL(28,8))) AS [Actual Yield]\r\n\t\t\t\t\tFROM\t\t[Trade].[Yield]\r\n\t\t\t\t\tGROUP BY\t[Business Unit]\r\n\t\t\t\t\t,\t\t\t[Start date]\r\n\t\t\t\t\t,\t\t\t[End date]\r\n\t\t\t\t) y\r\n\tON\t\t\tpo.[Business Unit Name] = y.[Business Unit]\r\n\tAND\t\t\tCAST(LEFT([Physical Date],10) AS DATE) BETWEEN CAST(y.[Start date] AS DATE) AND ISNULL(CAST(y.[End date] AS DATE),GETDATE())\r\n\r\n/********************************************************************************************************\r\n\tStep 4.8\tRerun Step 4.4 but with returned orders removed.\r\n********************************************************************************************************/\r\n\r\n\tIF OBJECT_ID('[Trade].[SalesOrderFeedstockValues_Summarised_PreRMAAdjustment]','U') IS NOT NULL\r\n\t\tDROP TABLE [Trade].[SalesOrderFeedstockValues_Summarised_PreRMAAdjustment]\r\n\r\n\tSELECT\t\tCAST(LEFT([Physical Date],10) AS DATE)\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Physical Date]\r\n\t,\t\t\t[Business Unit Name]\r\n\t,\t\t\t[Sales Order Number]\r\n\t,\t\t\t[Item Code]\r\n\t,\t\t\t[Item Name] \r\n\t,\t\t\tso.[Sales Invoice Amount]\r\n\t,\t\t\tSUM(ABS([Biodiesel Quantity Row Level]))\t\t\t\t\t\t\t\t\t\t\t\tAS [Biodiesel Quantity in MT] \r\n\t,\t\t\tMAX(so.[Sales Invoice Amount])/SUM(ABS([Biodiesel Quantity Row Level]))\t\t\t\t\tAS [Biodiesel Price]\r\n\t,\t\t\tSUM(ABS([Feedstock Value]))\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Feedstock Value]\r\n\t,\t\t\tSUM(CASE\r\n\t\t\t\t\t\tWHEN [Purchase Order] IS NULL\r\n\t\t\t\t\t\t\tTHEN 0\r\n\t\t\t\t\t\tELSE [Feedstock Quantity]\r\n\t\t\t\t\tEND)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Feedstock Quantity in MT]\r\n\t,\t\t\tSUM(ABS([Feedstock Value]))/SUM(CASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN [Purchase Order] IS NULL\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tELSE [Feedstock Quantity]\r\n\t\t\t\t\t\t\t\t\t\t\t\tEND)\t\t\t\t\t\t\t\t\t\t\t\t\tAS [Feedstock Price]\r\n\t,\t\t\ty.[Actual Yield]\r\n\t,\t\t\tIIF(so.[Sales Invoice Amount] IS NULL,'1','0') AS [Not Invoiced Flag]\r\n\t,\t\t\tCAST(GETDATE() AS DATE) AS [DateStamp]\r\n\tINTO\t\t[Trade].[SalesOrderFeedstockValues_Summarised_PreRMAAdjustment]\r\n\tFROM\t\t[Trade].[SalesOrderFeedstockValues_POLevel_BiodieselQuantity] t\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Parent Order]\r\n\t\t\t\t\t,\t\t\tSUM(CASE\r\n\t\t\t\t\t\t\t\t\t\tWHEN [Transactional Currency Code] = 'GBP' THEN [Invoice Amount]/[EUR:GBP]\r\n\t\t\t\t\t\t\t\t\t\tWHEN [Transactional Currency Code] = 'USD' THEN [Invoice Amount]/[EUR:USD]\r\n\t\t\t\t\t\t\t\t\t\tELSE [Invoice Amount] \r\n\t\t\t\t\t\t\t\t\tEND) AS [Sales Invoice Amount]\r\n\t\t\t\t\tFROM\t\t[Trade].[SalesOrdersAndInvoices]\r\n\t\t\t\t\tGROUP BY\t[Parent Order]\r\n\t\t\t\t) so\t\t\r\n\tON\t\t\tt.[Sales Order Number] = so.[Parent Order]\r\n\tLEFT JOIN\t(\r\n\t\t\t\t\tSELECT\t\t[Business Unit]\r\n\t\t\t\t\t,\t\t\t[Start date]\r\n\t\t\t\t\t,\t\t\t[End date]\r\n\t\t\t\t\t,\t\t\tAVG(CAST([Expected yield] AS DECIMAL(28,8))) AS [Actual Yield]\r\n\t\t\t\t\tFROM\t\t[Trade].[Yield]\r\n\t\t\t\t\tGROUP BY\t[Business Unit]\r\n\t\t\t\t\t,\t\t\t[Start date]\r\n\t\t\t\t\t,\t\t\t[End date]\r\n\t\t\t\t) y\r\n\tON\t\t\tt.[Business Unit Name] = y.[Business Unit]\r\n\tAND\t\t\tCAST(LEFT([Physical Date],10) AS DATE) BETWEEN CAST(y.[Start date] AS DATE) AND ISNULL(CAST(y.[End date] AS DATE),GETDATE())\r\n\tGROUP BY\tCAST(LEFT([Physical Date],10) AS DATE)\r\n\t,\t\t\t[Business Unit Name]\r\n\t,\t\t\t[Sales Order Number]\r\n\t,\t\t\t[Item Code]\r\n\t,\t\t\t[Item Name] \r\n\t,\t\t\tso.[Sales Invoice Amount]\r\n\t,\t\t\ty.[Actual Yield]\r\n\t,\t\t\tIIF(so.[Sales Invoice Amount] IS NULL,'1','0')\r\n\r\n/********************************************************************************************************\r\n\tStep 4.9\tReturned and resold biodiesel batches are linked using an RMA receipt number. This section calculates the \r\n\t\t\t\tfeedstock value on the original order for biodiesel that has returned and been resold.\r\n********************************************************************************************************/\r\n\r\n\tIF OBJECT_ID('[Trade].[RMA_Adjustments]','U') IS NOT NULL\r\n\t\tDROP TABLE [Trade].[RMA_Adjustments]\r\n\r\n\tSELECT\t\t* \r\n\tINTO\t\t[Trade].[RMA_Adjustments] \r\n\tFROM\t\t(\r\n\t\t\t\t\tSELECT\t\tt.[Document Number] AS [Sales Order Number]\r\n\t\t\t\t\t,\t\t\tSUM(DISTINCT (t.[Quantity]/oq.[Quantity]) * [Feedstock Value]) AS [RMA Feedstock Value]\r\n\t\t\t\t\t,\t\t\tSUM(DISTINCT (t.[Quantity]/oq.[Quantity]) * [Feedstock Quantity in MT]) AS [RMA Feedstock Quantity]\r\n\t\t\t\t\tFROM\t\t[Trade].[TraceabilityAndOrders] t\r\n\t\t\t\t\tLEFT JOIN\t(\r\n\t\t\t\t\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\t\t\t\t\tWHERE\t\t[Transaction Type] = 'RMA Receipt'\r\n\t\t\t\t\t\t\t\t) rmar\r\n\t\t\t\t\tON\t\t\tCOALESCE(t.[Lot Numbers_19],t.[Lot Numbers_18],t.[Lot Numbers_17],t.[Lot Numbers_16],t.[Lot Numbers_15],t.[Lot Numbers_14],t.[Lot Numbers_13],t.[Lot Numbers_12],t.[Lot Numbers_11],t.[Lot Numbers_10]\r\n\t\t\t\t\t\t\t\t\t\t,t.[Lot Numbers_9],t.[Lot Numbers_8],t.[Lot Numbers_7],t.[Lot Numbers_6],t.[Lot Numbers_5],t.[Lot Numbers_4],t.[Lot Numbers_3],t.[Lot Numbers_2],t.[Lot Numbers]) = rmar.[Lot Numbers]\r\n\t\t\t\t\tLEFT JOIN\t(\r\n\t\t\t\t\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\t\t\t\t\tFROM\t\t[Core].[SalesOrders]\r\n\t\t\t\t\t\t\t\t) so\r\n\t\t\t\t\tON\t\t\tso.[Order Number] = rmar.[Document Number]\r\n\t\t\t\t\tLEFT JOIN\t(\r\n\t\t\t\t\t\t\t\t\tSELECT\t\t*\r\n\t\t\t\t\t\t\t\t\tFROM\t\t[Core].[SalesOrderDocumentReferences]\r\n\t\t\t\t\t\t\t\t) ddr\r\n\t\t\t\t\tON\t\t\tso.[Header ID] = ddr.[HEADER_ID]\r\n\t\t\t\t\tAND\t\t\tddr.[DOC_REF_TYPE] = 'ORIGINAL_SALES_ORDER'\r\n\t\t\t\t\tLEFT JOIN\t(\r\n\t\t\t\t\t\t\t\t\tSELECT\t\t[Sales Order Number]\r\n\t\t\t\t\t\t\t\t\t,\t\t\t[Feedstock Value]\r\n\t\t\t\t\t\t\t\t\t,\t\t\t[Feedstock Quantity in MT]\r\n\t\t\t\t\t\t\t\t\t,\t\t\t[Biodiesel Quantity in MT]\r\n\t\t\t\t\t\t\t\t\tFROM\t\t[Trade].[SalesOrderFeedstockValues_Summarised_RMA]\r\n\t\t\t\t\t\t\t\t) ocos\r\n\t\t\t\t\tON\t\t\tddr.[DOC_USER_KEY] = ocos.[Sales Order Number]\r\n\t\t\t\t\tLEFT JOIN\t(\r\n\t\t\t\t\t\t\t\t\tSELECT\t\t[Document Number]\r\n\t\t\t\t\t\t\t\t\t,\t\t\tSUM([Quantity]) AS [Quantity]\r\n\t\t\t\t\t\t\t\t\tFROM\t\t[Trade].[Traceability]\r\n\t\t\t\t\t\t\t\t\tWHERE\t\t[Transaction Type] = 'Sales Order Issue'\r\n\t\t\t\t\t\t\t\t\tGROUP BY\t[Document Number]\r\n\t\t\t\t\t\t\t\t) oq\r\n\t\t\t\t\tON\t\t\tddr.[DOC_USER_KEY] = oq.[Document Number]\r\n\t\t\t\t\tWHERE\t\tt.[Parent Order] IS NULL\r\n\t\t\t\t\tGROUP BY\tt.[Document Number]\r\n\t\t\t\t) x\r\n\tWHERE\t\t[RMA Feedstock Value] IS NOT NULL\r\n\r\n/********************************************************************************************************\r\n\tStep 4.10\tSummarise [Trade].[SalesOrderFeedstockValues_Summarised_PreRMAAdjustment] at the SO level\r\n\t\t\t\tand include the RMA adjustments so that resold biodiesel has the correct cost of sales value.\r\n********************************************************************************************************/\r\n\r\n\tIF OBJECT_ID('[Trade].[SalesOrderFeedstockValues_Summarised]','U') IS NOT NULL\r\n\t\tDROP TABLE [Trade].[SalesOrderFeedstockValues_Summarised]\r\n\r\n\tSELECT\t\t[Physical Date]\r\n\t,\t\t\t[Business Unit Name]\r\n\t,\t\t\tsofv.[Sales Order Number]\r\n\t,\t\t\t[Item Code]\r\n\t,\t\t\t[Item Name]\r\n\t,\t\t\t[Sales Invoice Amount]\r\n\t,\t\t\t[Biodiesel Quantity in MT]\r\n\t,\t\t\t[Biodiesel Price]\r\n\t,\t\t\tISNULL([Feedstock Value],0) + ISNULL([RMA Feedstock Value],0) AS [Feedstock Value]\r\n\t,\t\t\tISNULL([Feedstock Quantity in MT],0) + ISNULL([RMA Feedstock Quantity],0) AS [Feedstock Quantity in MT]\r\n\t,\t\t\tISNULL((ISNULL([Feedstock Value],0) + ISNULL([RMA Feedstock Value],0))/NULLIF((ISNULL([Feedstock Quantity in MT],0) + ISNULL([RMA Feedstock Quantity],0)),0),0) AS [Feedstock Price]\r\n\t,\t\t\t[Actual Yield]\r\n\t,\t\t\t[Not Invoiced Flag]\r\n\t,\t\t\t[DateStamp]\r\n\tINTO\t\t[Trade].[SalesOrderFeedstockValues_Summarised]\r\n\tFROM\t\t[Trade].[SalesOrderFeedstockValues_Summarised_PreRMAAdjustment] sofv\r\n\tLEFT JOIN\t[Trade].[RMA_Adjustments]  rma\r\n\tON\t\t\tsofv.[Sales Order Number] = rma.[Sales Order Number]"
						}
					]
				}
			}
		],
		"folder": {
			"name": "Trade/Margin"
		},
		"annotations": [],
		"lastPublishTime": "2022-11-21T20:07:57Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}