{
	"name": "Sales_Blob_to_SQL",
	"properties": {
		"activities": [
			{
				"name": "Sales_Excel_tables_lookup",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ExcelSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						}
					},
					"dataset": {
						"referenceName": "Blob_Sales_DataWallet_Excel",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Copy sheets to tables",
				"description": "Copies each sheet in the lookup sheet to a separate SQL table",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Sales_Excel_tables_lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Sales_Excel_tables_lookup').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy from Excel file",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Drop",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ExcelSource",
									"additionalColumns": [
										{
											"name": "DateStamp",
											"value": {
												"value": "@utcNow()",
												"type": "Expression"
											}
										}
									],
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"enablePartitionDiscovery": false
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "Blob_Sales_DataWallet_Sheets",
									"type": "DatasetReference",
									"parameters": {
										"SheetName": {
											"value": "@item().SheetName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "SQL_Sharepoint_Data_Tables",
									"type": "DatasetReference",
									"parameters": {
										"TableName": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Drop",
							"description": "Drop existing Sales Excel tables",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "SqlServerArgent",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "NonQuery",
										"text": {
											"value": "DROP TABLE IF EXISTS [RAW].[@{item().TableName}]",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			}
		],
		"folder": {
			"name": "Sales"
		},
		"annotations": [],
		"lastPublishTime": "2022-11-14T16:24:18Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}