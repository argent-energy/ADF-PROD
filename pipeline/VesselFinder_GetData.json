{
	"name": "VesselFinder_GetData",
	"properties": {
		"activities": [
			{
				"name": "Lookup IMO",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "VesselFinder_IMOs",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Each IMO",
				"description": "Copies each IMO number in the lookup table to a separate API request.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup IMO",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup IMO').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy_VesselFinder_To_Blob",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "VesselFinder_Vessels",
									"type": "DatasetReference",
									"parameters": {
										"IMO": {
											"value": "@string(item().imo)",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "VesselFinder_JSON_Outputs",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			},
			{
				"name": "Vessel JSON Blob Get Metadata",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Each IMO",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "VesselFinder_JSON_Outputs",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "JsonReadSettings"
					}
				}
			},
			{
				"name": "Vesel JSON Copy Data",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Vessel JSON Blob Get Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"additionalColumns": [
							{
								"name": "Stamp",
								"value": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						],
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"wildcardFileName": "*.json",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "SqlServerSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": true,
						"tableOption": "autoCreate"
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['AIS']['MMSI']"
								},
								"sink": {
									"name": "MMSI",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['TIMESTAMP']"
								},
								"sink": {
									"name": "TIMESTAMP",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['LATITUDE']"
								},
								"sink": {
									"name": "LATITUDE",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['LONGITUDE']"
								},
								"sink": {
									"name": "LONGITUDE",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['COURSE']"
								},
								"sink": {
									"name": "COURSE",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['SPEED']"
								},
								"sink": {
									"name": "SPEED",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['HEADING']"
								},
								"sink": {
									"name": "HEADING",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['NAVSTAT']"
								},
								"sink": {
									"name": "NAVSTAT",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['IMO']"
								},
								"sink": {
									"name": "IMO",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['NAME']"
								},
								"sink": {
									"name": "NAME",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['CALLSIGN']"
								},
								"sink": {
									"name": "CALLSIGN",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['TYPE']"
								},
								"sink": {
									"name": "TYPE",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['A']"
								},
								"sink": {
									"name": "A",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['B']"
								},
								"sink": {
									"name": "B",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['C']"
								},
								"sink": {
									"name": "C",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['D']"
								},
								"sink": {
									"name": "D",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['DRAUGHT']"
								},
								"sink": {
									"name": "DRAUGHT",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['DESTINATION']"
								},
								"sink": {
									"name": "DESTINATION",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['LOCODE']"
								},
								"sink": {
									"name": "LOCODE",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['ETA_AIS']"
								},
								"sink": {
									"name": "ETA_AIS",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['ETA']"
								},
								"sink": {
									"name": "ETA",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['SRC']"
								},
								"sink": {
									"name": "SRC",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['ZONE']"
								},
								"sink": {
									"name": "ZONE",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['ECA']"
								},
								"sink": {
									"name": "ECA",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['DISTANCE_REMAINING']"
								},
								"sink": {
									"name": "DISTANCE_REMAINING",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['AIS']['ETA_PREDICTED']"
								},
								"sink": {
									"name": "ETA_PREDICTED",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['Stamp']"
								},
								"sink": {
									"name": "Stamp",
									"type": "String"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "VesselFinder_JSON_Outputs",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SQL_Argent_Database",
						"type": "DatasetReference",
						"parameters": {
							"TableName": {
								"value": "VesselFinderData",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Create Final Vessel Table",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Vesel JSON Copy Data",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "\n\tDELETE FROM SupplyChain.VesselData\n\tWHERE CAST(LEFT([Stamp],10) AS DATE) = CAST(GETDATE() AS DATE)\n\n\tINSERT INTO\t\tSupplyChain.VesselData\n\tSELECT\t\t*\n\tFROM\t\t[RAW].[VesselFinderData] v\n\tLEFT JOIN\t(\n\t\t\t\t\tSELECT\t\tDISTINCT [Index]\n\t\t\t\t\t,\t\t\t[Vessel IMO]\n\t\t\t\t\t,\t\t\t[Mothervessel IMO]\n\t\t\t\t\t,\t\t\t[Vessel Transfer Indicator]\n\t\t\t\t\tFROM\t\tSupplyChain.ShippingContracts\n\t\t\t\t\tWHERE\t\tISNULL([Mothervessel IMO],[Vessel IMO]) IS NOT NULL\n\t\t\t\t\tAND\t\t\tISNULL([Mothervessel IMO],[Vessel IMO]) <> ''\n\n\t\t\t\t) s\n\tON\t\t\tCASE\n\t\t\t\t\tWHEN [Vessel Transfer Indicator] = 'X'\n\t\t\t\t\t\tTHEN [Vessel IMO]\n\t\t\t\t\tELSE ISNULL([Mothervessel IMO],[Vessel IMO])\n\t\t\t\tEND = v.[IMO]\n\n\tDROP TABLE [RAW].[VesselFinderData]"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"folder": {
			"name": "Supply Chain"
		},
		"annotations": []
	}
}