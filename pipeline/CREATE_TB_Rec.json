{
	"name": "CREATE_TB_Rec",
	"properties": {
		"activities": [
			{
				"name": "CREATE_TB_Rec",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "7.0:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "SqlServerArgent",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "NonQuery",
							"text": "\t-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\t-- 4.1\tCOMBINE CY AND PY GL\r\n\t-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\t\r\n\tIF OBJECT_ID('Finance.GL','U') IS NOT NULL DROP TABLE Finance.GL;\r\n\tSELECT\t\t*\r\n\t,\t\t\tCAST(GETDATE() AS DATETIME) AS [DateStamp]\r\n\tINTO\t\tFinance.GL\r\n\tFROM\t\tCore.GL_CY\r\n\tUNION ALL\r\n\tSELECT\t\t*\r\n\t,\t\t\tCAST(GETDATE() AS DATETIME) AS [DateStamp]\r\n\tFROM\t\tCore.GL_PY\r\n\t-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\t-- 4.2\tCREATE TB PRE-ADJUSTMENT TABLE\r\n\t-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\tIF OBJECT_ID('tempdb..#WIP_TB','U') IS NOT NULL DROP TABLE #WIP_TB;\r\n\tSELECT\t\tgcc.SEGMENT1 AS [Entity] ,\r\n\t\t\t\te.[DESCRIPTION] AS [Company Name] ,\r\n\t\t\t\tgl.CURRENCY_CODE AS [Entity Currency (EC)],\r\n\t\t\t\tglb.PERIOD_YEAR AS [Financial Year],\r\n\t\t\t\tgcc.SEGMENT3 AS [Account Number] ,\r\n\t\t\t\ta.[DESCRIPTION] AS [Account Description] ,\r\n\t\t\t\tCASE \r\n\t\t\t\t\tWHEN gcc.SEGMENT3 IN ('111108','111112') THEN 'Cash and overdrafts' \r\n\t\t\t\t\tWHEN gcc.SEGMENT3 IN ('111110','111114') THEN 'Trade Debtors' \r\n\t\t\t\t\tWHEN gcc.SEGMENT3 IN ('122003','122005') THEN 'Other Debtors & Prepayments' \r\n\t\t\t\t\tWHEN gcc.SEGMENT3 IN ('131003','133006','133012','133014','133027','135001','135005','135009') THEN 'Stock' \r\n\t\t\t\t\tWHEN gcc.SEGMENT3 IN ('212999','231003','231004') THEN 'Other Creditors' \r\n\t\t\t\t\tWHEN gcc.SEGMENT3 IN ('311002','311003') THEN 'Share Capital & Reserves#5' \r\n\t\t\t\t\tWHEN gcc.SEGMENT3 IN ('414002') THEN 'Revenue' \r\n\t\t\t\t\tELSE  fr.[AccountDesc#5] \r\n\t\t\t\tEND AS [Account Category],\r\n\t\t\t\tRIGHT(CONCAT('0',glb.PERIOD_NUM),2) AS [Financial Period] ,\r\n\t\t\t\tglb.PERIOD_NUM ,\r\n\t\t\t\tgp.END_DATE\t,\r\n\t\t\t\tgl.PERIOD_SET_NAME,\r\n\t\t\t\tglb.PERIOD_TYPE ,\r\n\t\t\t\tCAST(ISNULL(glb.BEGIN_BALANCE_DR,0) AS DECIMAL(28,2)) - CAST(ISNULL(glb.BEGIN_BALANCE_CR,0) AS DECIMAL(28,2)) AS [Period Opening Balance EC] ,\r\n\t\t\t\tCAST(ISNULL(glb.PERIOD_NET_DR,0) AS DECIMAL(28,2)) AS [Debit EC] ,\r\n\t\t\t\tCAST(ISNULL(glb.PERIOD_NET_CR,0) AS DECIMAL(28,2)) AS [Credit EC] ,\r\n\t\t\t\tCAST(ISNULL(glb.PERIOD_NET_DR,0) AS DECIMAL(28,2)) - CAST(ISNULL(glb.PERIOD_NET_CR,0) AS DECIMAL(28,2)) AS [Movement EC],\r\n\t\t\t\t(CAST(ISNULL(glb.PERIOD_NET_DR,0) AS DECIMAL(28,2)) - CAST(ISNULL(glb.PERIOD_NET_CR,0) AS DECIMAL(28,2))) + (CAST(ISNULL(glb.BEGIN_BALANCE_DR,0) AS DECIMAL(28,2)) - CAST(ISNULL(glb.BEGIN_BALANCE_CR,0) AS DECIMAL(28,2))) AS [Period Closing Balance EC]\r\n\tINTO\t\t#WIP_TB\r\n\tFROM\t\t[RAW].[O.GL_BALANCES] glb\r\n\tLEFT JOIN\t[RAW].[O.GL_CODE_COMBINATIONS] gcc ON glb.CODE_COMBINATION_ID = gcc.CODE_COMBINATION_ID\r\n\tLEFT JOIN\t[RAW].[O.GL_LEDGERS] gl ON gl.LEDGER_ID = glb.LEDGER_ID \r\n\tLEFT JOIN\t[RAW].[O.GL_PERIODS] gp ON gp.PERIOD_NAME = glb.PERIOD_NAME AND gp.PERIOD_SET_NAME = gl.PERIOD_SET_NAME \r\n\tLEFT JOIN\tCore.GL_Descriptions e ON e.FLEX_VALUE = gcc.SEGMENT1 AND e.VALUE_CATEGORY = 'Company Argent'\r\n\tLEFT JOIN\tCore.GL_Descriptions a ON a.FLEX_VALUE = gcc.SEGMENT3 AND a.VALUE_CATEGORY = 'Account Argent'\r\n\tLEFT JOIN\t[RAW].[F.FinanceReference] fr ON gcc.[SEGMENT3] = fr.[AccountDesc#9]\r\n\tWHERE\t\tREPLACE(glb.ACTUAL_FLAG,'|','') = 'A'\r\n\tAND\t\t\tglb.CURRENCY_CODE = gl.CURRENCY_CODE\r\n\tAND \t\tgcc.SUMMARY_FLAG = 'N'\r\n\tAND\t\t\tglb.PERIOD_YEAR  >= YEAR(CAST(GETDATE() AS DATE)) - 1 \r\n\r\n\tIF OBJECT_ID('Finance.TB_PreAdjustments','U') IS NOT NULL DROP TABLE Finance.TB_PreAdjustments;\r\n\t;WITH a AS (\t\r\n\tSELECT MIN(gp.PERIOD_NUM) AS [Min Period], MAX(gp.PERIOD_NUM) AS [Max Period], gb.PERIOD_TYPE, gp.PERIOD_SET_NAME, gp.END_DATE, gp.QUARTER_NUM\r\n\tFROM [RAW].[O.GL_PERIODS] gp LEFT JOIN (SELECT DISTINCT PERIOD_TYPE, PERIOD_NUM, PERIOD_SET_NAME, END_DATE FROM #WIP_TB) gb\r\n\tON gb.PERIOD_NUM = gp.PERIOD_NUM AND gb.PERIOD_TYPE = gp.PERIOD_TYPE AND gb.END_DATE = gp.END_DATE\r\n\tWHERE gb.PERIOD_NUM IS NOT NULL\r\n\tGROUP BY gb.PERIOD_TYPE, gp.PERIOD_SET_NAME,gp.END_DATE, gp.QUARTER_NUM\r\n\t)\r\n\tSELECT \tt.[Entity] , \r\n\t\t\tt.[Company Name] , \r\n\t\t\tt.[Entity Currency (EC)] AS [Entity Currency (EC)], \r\n\t\t\tt.[Financial Year] , \r\n\t\t\t[Account Number] , \r\n\t\t\tMAX(LTRIM(RTRIM([Account Description]))) AS [Account Description] , \r\n\t\t\tMAX(LTRIM(RTRIM([Account Category]))) AS [Account Category] , \r\n\t\t\t--[Spotlight Type] , \r\n\t\t\tCAST(a.[Min Period] AS INT) AS [Financial Period] ,\r\n\t\t\tSUM(CASE WHEN CAST([Min Period] AS INT) <> CAST(t.[Financial Period] AS INT) THEN 0 ELSE CAST(t.[Period Opening Balance EC] AS MONEY) END) AS [Period Opening Balance EC],\r\n\t\t\tSUM(CAST(t.[Debit EC] AS MONEY)) AS [Debit EC], \r\n\t\t\tSUM(CAST(t.[Credit EC] AS MONEY)) AS [Credit EC],\r\n\t\t\tSUM(CAST(t.[Movement EC] AS MONEY)) AS [Movement EC],\r\n\t\t\tSUM(CASE WHEN CAST([Max Period] AS INT) <> CAST(t.[Financial Period] AS INT) THEN 0 ELSE CAST( t.[Period Closing Balance EC] AS MONEY) END) AS [Period Closing Balance EC]\r\n\tINTO\tFinance.TB_PreAdjustments\r\n\tFROM \t#WIP_TB t \r\n\tLEFT JOIN a ON a.PERIOD_SET_NAME = t.PERIOD_SET_NAME AND a.PERIOD_TYPE = t.PERIOD_TYPE AND a.END_DATE = t.END_DATE \r\n\tGROUP BY CAST(a.[Min Period] AS INT), t.Entity, t.[Company Name], t.[Entity Currency (EC)], t.[Financial Year], t.[Account Number]\r\n\tORDER BY CAST(a.[Min Period] AS INT) \r\n\t-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\t-- 4.3\tCREATE TB WITH ADJUSTMENTS\r\n\t-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\tIF OBJECT_ID('tempdb..#FinanceTB','U') IS NOT NULL DROP TABLE #FinanceTB\r\n\tIF OBJECT_ID('Finance.TB','U') IS NOT NULL DROP TABLE Finance.TB;\r\n\r\n\tSELECT\t\ttb.[Entity]\r\n\t,\t\t\ttb.[Company Name]\r\n\t,\t\t\ttb.[Entity Currency (EC)]\r\n\t,\t\t\ttb.[Financial Year]\r\n\t,\t\t\ttb.[Account Number]\r\n\t,\t\t\ttb.[Account Description]\r\n\t,\t\t\ttb.[Account Category]\r\n\t,\t\t\ttb.[Financial Period]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN tb.[Financial Period] BETWEEN 6 AND 11 AND tb.[Entity] = '331' AND [Account Number] = '211003' AND tb.[Financial Year] = '2022'\r\n\t\t\t\t\t\tTHEN [Period Opening Balance EC] + 572105707.69 - 948.89\r\n\t\t\t\t\tELSE [Period Opening Balance EC]\r\n\t\t\t\tEND + CASE\r\n\t\t\t\t\t  \tWHEN [Account Number] = '133025'\r\n\t\t\t\t\t  \t\tTHEN CAST(ISNULL(git_open.[Adjustment],0) AS MONEY)\r\n\t\t\t\t\t  \tELSE (-1)*CAST(ISNULL(git_open.[Adjustment],0) AS MONEY)\r\n\t\t\t\t\t  END AS [Period Opening Balance EC]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN tb.[Financial Period] = 11 AND tb.[Entity] = '331' AND [Account Number] = '211003' AND tb.[Financial Year] = '2022'\r\n\t\t\t\t\t\tTHEN [Debit EC] - 572105707.69 + 948.89\r\n\t\t\t\t\tELSE [Debit EC]\r\n\t\t\t\tEND + CAST(ISNULL(git.[Adjustment],0) AS MONEY) AS [Debit EC]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN tb.[Financial Period] = 5 AND tb.[Entity] = '331' AND [Account Number] = '211003' AND tb.[Financial Year] = '2022'\r\n\t\t\t\t\t\tTHEN [Credit EC] - 572105707.69 + 948.89\r\n\t\t\t\t\tELSE [Credit EC]\r\n\t\t\t\tEND + CAST(ISNULL(git.[Adjustment],0) AS MONEY) AS [Credit EC]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN tb.[Financial Period] = 5 AND tb.[Entity] = '331' AND [Account Number] = '211003' AND tb.[Financial Year] = '2022'\r\n\t\t\t\t\t\tTHEN [Movement EC] + 572105707.69 - 948.89\r\n\t\t\t\t\tWHEN tb.[Financial Period] = 11 AND tb.[Entity] = '331' AND [Account Number] = '211003' AND tb.[Financial Year] = '2022'\r\n\t\t\t\t\t\tTHEN [Movement EC] - 572105707.69 + 948.89\r\n\t\t\t\t\tWHEN [Account Number] IN ('133025','122001')\r\n\t\t\t\t\t\tTHEN [Period Closing Balance EC] +\tCASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN [Account Number] = '133025'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN CAST(ISNULL(git.[Adjustment],0) AS MONEY)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE (-1)*CAST(ISNULL(git.[Adjustment],0) AS MONEY)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND \r\n\t\t\t\t\t\t\t- ([Period Opening Balance EC]+ CASE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWHEN [Account Number] = '133025'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tTHEN CAST(ISNULL(git_open.[Adjustment],0) AS MONEY)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE (-1)*CAST(ISNULL(git_open.[Adjustment],0) AS MONEY)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND)\r\n\t\t\t\t\tELSE [Movement EC]\r\n\t\t\t\tEND AS [Movement EC]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN tb.[Financial Period] BETWEEN 5 AND 10 AND tb.[Entity] = '331' AND [Account Number] = '211003' AND tb.[Financial Year] = '2022'\r\n\t\t\t\t\t\tTHEN [Period Closing Balance EC] + 572105707.69 - 948.89\r\n\t\t\t\t\tELSE [Period Closing Balance EC]\r\n\t\t\t\tEND + CASE\r\n\t\t\t\t\t  \tWHEN [Account Number] = '133025'\r\n\t\t\t\t\t  \t\tTHEN CAST(ISNULL(git.[Adjustment],0) AS MONEY)\r\n\t\t\t\t\t  \tELSE (-1)*CAST(ISNULL(git.[Adjustment],0) AS MONEY)\r\n\t\t\t\t\t  END AS [Period Closing Balance EC]\r\n\t,\t\t\tCASE \r\n\t\t\t\t\tWHEN [Account Category] = 'Revenue' AND  LEFT([Account Description],12) IN ('Intercompany','Intracompany') THEN '1'\r\n\t\t\t\t\tWHEN [Account Category] = 'Cost of sales' AND  [Account Description] NOT LIKE 'Cost of sales%' THEN '1'\r\n\t\t\t\t\tELSE '0'\r\n\t\t\t\tEND AS [Internal Account Flag]\r\n\t,\t\t\tDATENAME(MONTH,CONCAT(tb.[Financial Year],'-',tb.[Financial Period],'-01')) + ' ' + tb.[Financial Year] AS [Date]\r\n\t,\t\t\tCONCAT(tb.[Financial Year],'-',RIGHT(CONCAT('0',tb.[Financial Period]),2),'-01') AS [Date2]\r\n\tINTO\t\t#FinanceTB\r\n\tFROM\t\tFinance.TB_PreAdjustments tb\r\n\tLEFT JOIN\t[RAW].[GIT_Adjustments_Template] git\r\n\tON\t\t\ttb.[Entity] = git.[Entity]\r\n\tAND\t\t\ttb.[Financial Year] = git.[Financial year]\r\n\tAND\t\t\ttb.[Financial Period] = git.[Financial Period]\r\n\tAND\t\t\t[Account Number] IN ('133025','122001')\r\n\tLEFT JOIN\t[RAW].[GIT_Adjustments_Template] git_open\r\n\tON\t\t\ttb.[Entity] = git_open.[Entity]\r\n\tAND\t\t\ttb.[Financial Year] = CASE WHEN tb.[Financial Period] = 12 THEN CAST(git_open.[Financial Year] AS INT) + 1 ELSE git_open.[Financial Year] END \r\n\tAND\t\t\ttb.[Financial Period] = CASE WHEN tb.[Financial Period] = 12 THEN CAST(git_open.[Financial Period] AS INT) + 1 ELSE git_open.[Financial Period] + 1 END\r\n\tAND\t\t\t[Account Number] IN ('133025','122001')\r\n\r\n\tSELECT\t\ttb.*\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'EUR'\r\n\t\t\t\t\t\tTHEN IIF(CAST(LEFT([Account Number],1) AS INT) >= 4,[Period Opening Balance EC]*fxpl.[EUR GBP],[Period Opening Balance EC]*fxbs.[EUR GBP])\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'CNY'\r\n\t\t\t\t\t\tTHEN [Period Opening Balance EC] * [CNY GBP]\r\n\t\t\t\t\tELSE [Period Opening Balance EC]\r\n\t\t\t\tEND AS [Period Opening Balkance (EC) GBP]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'EUR'\r\n\t\t\t\t\t\tTHEN IIF(CAST(LEFT([Account Number],1) AS INT) >= 4,[Debit EC]*fxpl.[EUR GBP],[Debit EC]*fxbs.[EUR GBP])\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'CNY'\r\n\t\t\t\t\t\tTHEN [Debit EC] * [CNY GBP]\r\n\t\t\t\t\tELSE [Debit EC]\r\n\t\t\t\tEND AS [Debit EC GBP]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'EUR'\r\n\t\t\t\t\t\tTHEN IIF(CAST(LEFT([Account Number],1) AS INT) >= 4,[Credit EC]*fxpl.[EUR GBP],[Credit EC]*fxbs.[EUR GBP])\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'CNY'\r\n\t\t\t\t\t\tTHEN [Credit EC] * [CNY GBP]\r\n\t\t\t\t\tELSE [Credit EC]\r\n\t\t\t\tEND AS [Credit EC GBP]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'EUR'\r\n\t\t\t\t\t\tTHEN IIF(CAST(LEFT([Account Number],1) AS INT) >= 4,[Movement EC]*fxpl.[EUR GBP],[Movement EC]*fxbs.[EUR GBP])\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'CNY'\r\n\t\t\t\t\t\tTHEN [Movement EC] * [CNY GBP]\r\n\t\t\t\t\tELSE [Movement EC]\r\n\t\t\t\tEND AS [Movement EC GBP]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'EUR'\r\n\t\t\t\t\t\tTHEN IIF(CAST(LEFT([Account Number],1) AS INT) >= 4,[Period Closing Balance EC]*fxpl.[EUR GBP],[Period Closing Balance EC]*fxbs.[EUR GBP])\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'CNY'\r\n\t\t\t\t\t\tTHEN [Period Closing Balance EC] * [CNY GBP]\r\n\t\t\t\t\tELSE [Period Closing Balance EC]\r\n\t\t\t\tEND AS [Period Closing Balance (EC) GBP]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'GBP'\r\n\t\t\t\t\t\tTHEN IIF(CAST(LEFT([Account Number],1) AS INT) >= 4,[Period Opening Balance EC]/fxpl.[EUR GBP],[Period Opening Balance EC]/fxbs.[EUR GBP])\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'CNY'\r\n\t\t\t\t\t\tTHEN ([Period Opening Balance EC] * [CNY GBP]) * [fx2].[EUR GBP]\r\n\t\t\t\t\tELSE [Period Opening Balance EC]\r\n\t\t\t\tEND AS [Period Opening Balkance (EC) EUR]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'GBP'\r\n\t\t\t\t\t\tTHEN IIF(CAST(LEFT([Account Number],1) AS INT) >= 4,[Debit EC]/fxpl.[EUR GBP],[Debit EC]/fxbs.[EUR GBP])\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'CNY'\r\n\t\t\t\t\t\tTHEN ([Debit EC] * [CNY GBP]) * [fx2].[EUR GBP]\r\n\t\t\t\t\tELSE [Debit EC]\r\n\t\t\t\tEND AS [Debit EC EUR]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'GBP'\r\n\t\t\t\t\t\tTHEN IIF(CAST(LEFT([Account Number],1) AS INT) >= 4,[Credit EC]/fxpl.[EUR GBP],[Credit EC]/fxbs.[EUR GBP])\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'CNY'\r\n\t\t\t\t\t\tTHEN ([Credit EC] * [CNY GBP]) * [fx2].[EUR GBP]\r\n\t\t\t\t\tELSE [Period Opening Balance EC]\r\n\t\t\t\tEND AS [Credit EC EUR]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'GBP'\r\n\t\t\t\t\t\tTHEN IIF(CAST(LEFT([Account Number],1) AS INT) >= 4,[Movement EC]/fxpl.[EUR GBP],[Movement EC]/fxbs.[EUR GBP])\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'CNY'\r\n\t\t\t\t\t\tTHEN ([Movement EC] * [CNY GBP]) * [fx2].[EUR GBP]\r\n\t\t\t\t\tELSE [Movement EC]\r\n\t\t\t\tEND AS [Movement EC EUR]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'GBP'\r\n\t\t\t\t\t\tTHEN IIF(CAST(LEFT([Account Number],1) AS INT) >= 4,[Period Closing Balance EC]/fxpl.[EUR GBP],[Period Closing Balance EC]/fxbs.[EUR GBP])\r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'CNY'\r\n\t\t\t\t\t\tTHEN ([Period Closing Balance EC] * [CNY GBP]) * [fx2].[EUR GBP]\r\n\t\t\t\t\tELSE [Period Closing Balance EC]\r\n\t\t\t\tEND AS [Period Closing Balance (EC) EUR]\r\n\t,\t\t\tCONCAT([Entity],':',[Entity Currency (EC)],':',[Account Number],':',tb.[Date]) AS [TB_GL Link]\r\n\tINTO\t\t[Finance].[TB]\r\n\tFROM\t\t#FinanceTB tb\r\n\tLEFT JOIN\tCore.FXRates_PL fxpl\r\n\tON\t\t\tfxpl.[Year] = tb.[Financial Year]\r\n\tAND\t\t\tCAST(fxpl.[Month] AS INT) = tb.[Financial Period]\r\n\tLEFT JOIN\tCore.FXRates_BS fxbs\r\n\tON\t\t\tfxbs.[Year] = tb.[Financial Year]\r\n\tAND\t\t\tCAST(fxbs.[Month] AS INT) = tb.[Financial Period]\r\n\tLEFT JOIN\tCore.FXRates fx2\r\n\tON\t\t\tLEFT(fx2.[CONVERSION_DATE],10) = tb.[Date2]\r\n\r\n\t-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\t-- 4.4\tFILTER OUT INTER ACCOUNTS\r\n\t-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\tIF OBJECT_ID('Finance.TB_Filtered','U') IS NOT NULL DROP TABLE Finance.TB_Filtered;\r\n\tSELECT\t\t*\r\n\t,\t\t\tCAST(GETDATE() AS DATETIME) AS [DateStamp]\r\n\tINTO\t\tFinance.TB_Filtered\r\n\tFROM\t\tFinance.TB \r\n\tWHERE\t\t[Internal Account Flag] = '0'\r\n\r\n\tUNION ALL\r\n\r\n\tSELECT\t\t'999' AS [Entity]\r\n\t,\t\t\t'GIT Adjustments' AS [Company Name]\r\n\t,\t\t\t'GBP' AS [Entity Currency (EC)]\r\n\t,\t\t\tRIGHT([Date],4) AS [Year]\r\n\t,\t\t\t'999999' AS [Account Number]\r\n\t,\t\t\t'Goods in Transit Adjustments' AS [Account Description]\r\n\t,\t\t\t'Stock' AS [Account Category]\r\n\t,\t\t\tCAST(LEFT(REPLACE([Date],'P',''),CHARINDEX(' ',REPLACE([Date],'P',''),1)) AS INT) AS [Financial Period]\r\n\t,\t\t\t0\r\n\t,\t\t\t0\r\n\t,\t\t\t0\r\n\t,\t\t\t0\r\n\t,\t\t\tISNULL(CAST([Prepayments – Manual (£m)] AS DECIMAL(28,4)),0) AS [Period Closing Balance EC]\r\n\t,\t\t\t'0' AS [Internal Account Flag]\r\n\t,\t\t\tDATENAME(MONTH,CONCAT(RIGHT([Date],4),'-',LEFT(REPLACE([Date],'P',''),CHARINDEX(' ',REPLACE([Date],'P',''),1)),'-01')) + ' ' + RIGHT([Date],4) AS [Date]\r\n\t,\t\t\tCONCAT(RIGHT([Date],4),'-',LEFT(REPLACE([Date],'P',''),CHARINDEX(' ',REPLACE([Date],'P',''),1)-1),'-01') AS [Date2]\t\t\r\n\t,\t\t\t0\r\n\t,\t\t\t0\r\n\t,\t\t\t0\r\n\t,\t\t\t0\r\n\t,\t\t\tISNULL(CAST([Prepayments – Manual (£m)] AS DECIMAL(28,4)),0) * 1000000 \t\r\n\t,\t\t\t0\r\n\t,\t\t\t0\r\n\t,\t\t\t0\r\n\t,\t\t\t0\r\n\t,\t\t\tISNULL((ISNULL(CAST([Prepayments – Manual (£m)] AS DECIMAL(28,4)),0) * 1000000)/[fxbs].[EUR GBP],0)\r\n\t,\t\t\tCONCAT('999',':','GBP',':','999999',':',DATENAME(MONTH,CONCAT(RIGHT([Date],4),'-',LEFT(REPLACE([Date],'P',''),CHARINDEX(' ',REPLACE([Date],'P',''),1)),'-01')) + ' ' + RIGHT([Date],4)) AS [TB_GL Link]\r\n\t,\t\t\tCAST(GETDATE() AS DATETIME) AS [DateStamp]\r\n\tFROM\t\t[RAW].[F.RatiosGIT] git\r\n\tLEFT JOIN\tCore.FXRates_BS fxbs\r\n\tON\t\t\tfxbs.[Year] = RIGHT(git.[Date],4)\r\n\tAND\t\t\tCAST(fxbs.[Month] AS INT) = CAST(LEFT(REPLACE(git.[Date],'P',''),CHARINDEX(' ',REPLACE(git.[Date],'P',''),1)) AS INT)\r\n\r\n\t-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\t-- 4.5 RECONCILE GL AND TB\r\n\t-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\tIF OBJECT_ID('Finance.Reconciliation','U') IS NOT NULL DROP TABLE Finance.Reconciliation\r\n\t;WITH\t\r\n\tGLPivot AS ( \r\n\tSELECT\t\tRIGHT([Date Effective],4) AS [Financial Year],\r\n\t\t\t\t[Financial Period] ,\r\n\t\t\t\tCAST([Entity] AS NVARCHAR(50)) AS [GL Entity] ,\r\n\t\t\t\t[Account Number] AS [GL Account] ,\t\t\t\t\t\t\r\n\t\t\t\tSUM(CAST([Signed Amount EC] AS MONEY)) AS [GL Movement],\r\n\t\t\t\tCOUNT(1) AS [GL Count]\t\t\t\r\n\tFROM\t\tFinance.GL\r\n\tWHERE\t\tRIGHT([Date Effective],4) >= YEAR(CAST(GETDATE() AS DATE)) - 1\r\n\tGROUP BY\t[Account Number] , CAST([Entity] AS NVARCHAR(50)), [Financial Period], RIGHT([Date Effective],4)\r\n\t), \r\n\tTBPivot AS\t(\r\n\tSELECT\t\t[Financial Year] ,\r\n\t\t\t\t[Financial Period] ,\r\n\t\t\t\tCAST([Entity] AS NVARCHAR(50)) AS [TB Entity] ,\r\n\t\t\t\t[Account Number] AS [TB Account] ,\r\n\t\t\t\t[Account Description] AS [Description] ,\r\n\t\t\t\tSUM(CAST(ISNULL([Period Opening Balance EC],0) AS MONEY)) AS Opening ,\t\t\t\t\t\t\r\n\t\t\t\tSUM(CAST(ISNULL([Period Closing Balance EC],0) AS MONEY)) AS Closing \t\t\t\t\t\r\n\tFROM\t\tFinance.TB_PreAdjustments\r\n\tGROUP BY\t[Account Number] , [Account Description], CAST([Entity] AS NVARCHAR(50)), [Financial Period], [Financial Year]\r\n\t),\r\n\tReconciliation AS (\r\n\tSELECT\t\tCOALESCE(G.[Financial Year],T.[Financial Year]) AS [Financial Year] ,\r\n\t\t\t\tCOALESCE(G.[Financial Period],T.[Financial Period]) AS [Financial Period] , \r\n\t\t\t\tCOALESCE(G.[GL Entity],T.[TB Entity] ) AS [Entity] ,\r\n\t\t\t\tISNULL(G.[GL Account] , 'NOT IN GL') AS [GL Account] , \r\n\t\t\t\tISNULL(G.[GL Movement] , 0) AS [GL Movement] ,\r\n\t\t\t\tISNULL(G.[GL Count], 0) AS [GL Count] ,\r\n\t\t\t\tISNULL(T.[TB Account] , 'NOT IN TB') AS [TB Account] ,\r\n\t\t\t\tISNULL(T.[Description] , '') AS [Description] ,\r\n\t\t\t\tISNULL(T.[Opening] , 0) AS [Opening] ,\r\n\t\t\t\tISNULL(T.[Closing] , 0) AS [Closing] ,\r\n\t\t\t\tISNULL(T.[Closing] , 0) - ISNULL(T.[Opening] , 0) AS [TB Movement] ,\r\n\t\t\t\tISNULL([GL Movement],0)- (ISNULL(T.[Closing] , 0) - ISNULL(T.[Opening] , 0)) AS [Difference]\r\n\tFROM\t\tGLPivot G\r\n\tFULL JOIN\tTBPivot T \r\n\tON\t\t\tG.[GL Account] = T.[TB Account]\r\n\tAND\t\t\tG.[GL Entity] = T.[TB Entity]\r\n\tAND\t\t\tG.[Financial Period] = T.[Financial Period]\r\n\tAND\t\t\tg.[Financial Year] = T.[Financial Year]\r\n\t) \r\n\tSELECT\t\t* \r\n\tINTO\t\tFinance.Reconciliation\r\n\tFROM\t\tReconciliation\r\n\tORDER BY\t[Entity], [TB Account]\r\n\r\n\t-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\t-- 4.6 CREATE YTD RECONCILIATION\r\n\t-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n\tIF OBJECT_ID('Finance.Reconciliation','U') IS NOT NULL DROP TABLE Finance.Reconciliation\r\n\t;WITH\t\r\n\tGLPivot AS ( \r\n\tSELECT\t\tRIGHT([Date Effective],4) AS [Financial Year],\r\n\t\t\t\t[Financial Period] ,\r\n\t\t\t\tCAST([Entity] AS NVARCHAR(50)) AS [GL Entity] ,\r\n\t\t\t\t[Account Number] AS [GL Account] ,\t\t\t\t\t\t\r\n\t\t\t\tSUM(CAST([Signed Amount EC] AS MONEY)) AS [GL Movement],\r\n\t\t\t\tCOUNT(1) AS [GL Count],\r\n\t\t\t\t[Entity Currency (EC)]\t\t\t\r\n\tFROM\t\tFinance.GL\r\n\tWHERE\t\tRIGHT([Date Effective],4) >= YEAR(CAST(GETDATE() AS DATE)) - 1\r\n\tGROUP BY\t[Account Number] , CAST([Entity] AS NVARCHAR(50)), [Financial Period], RIGHT([Date Effective],4), [Entity Currency (EC)]\r\n\t), \r\n\tTBPivot AS\t(\r\n\tSELECT\t\t[Financial Year] ,\r\n\t\t\t\t[Financial Period] ,\r\n\t\t\t\tCAST([Entity] AS NVARCHAR(50)) AS [TB Entity] ,\r\n\t\t\t\t[Account Number] AS [TB Account] ,\r\n\t\t\t\t[Account Description] AS [Description] ,\r\n\t\t\t\tSUM(CAST(ISNULL([Period Opening Balance EC],0) AS MONEY)) AS Opening ,\t\t\t\t\t\t\r\n\t\t\t\tSUM(CAST(ISNULL([Period Closing Balance EC],0) AS MONEY)) AS Closing,\r\n\t\t\t\t[Entity Currency (EC)] \t\t\t\t\t\r\n\tFROM\t\tFinance.TB_PreAdjustments\r\n\tGROUP BY\t[Account Number] , [Account Description], CAST([Entity] AS NVARCHAR(50)), [Financial Period], [Financial Year], [Entity Currency (EC)]\r\n\t),\r\n\tReconciliation AS (\r\n\tSELECT\t\tCOALESCE(G.[Financial Year],T.[Financial Year]) AS [Financial Year] ,\r\n\t\t\t\tCOALESCE(G.[Financial Period],T.[Financial Period]) AS [Financial Period] , \r\n\t\t\t\tCOALESCE(G.[GL Entity],T.[TB Entity] ) AS [Entity] ,\r\n\t\t\t\tISNULL(G.[GL Account] , 'NOT IN GL') AS [GL Account] , \r\n\t\t\t\tISNULL(G.[GL Movement] , 0) AS [GL Movement] ,\r\n\t\t\t\tISNULL(G.[GL Count], 0) AS [GL Count] ,\r\n\t\t\t\tISNULL(T.[TB Account] , 'NOT IN TB') AS [TB Account] ,\r\n\t\t\t\tISNULL(T.[Description] , '') AS [Description] ,\r\n\t\t\t\tISNULL(T.[Opening] , 0) AS [Opening] ,\r\n\t\t\t\tISNULL(T.[Closing] , 0) AS [Closing] ,\r\n\t\t\t\tISNULL(T.[Closing] , 0) - ISNULL(T.[Opening] , 0) AS [TB Movement] ,\r\n\t\t\t\tISNULL([GL Movement],0)- (ISNULL(T.[Closing] , 0) - ISNULL(T.[Opening] , 0)) AS [Difference],\r\n\t\t\t\tISNULL(G.[Entity Currency (EC)],T.[Entity Currency (EC)]) AS [Entity Currency (EC)]\r\n\tFROM\t\tGLPivot G\r\n\tFULL JOIN\tTBPivot T \r\n\tON\t\t\tG.[GL Account] = T.[TB Account]\r\n\tAND\t\t\tG.[GL Entity] = T.[TB Entity]\r\n\tAND\t\t\tG.[Financial Period] = T.[Financial Period]\r\n\tAND\t\t\tg.[Financial Year] = T.[Financial Year]\r\n\t) \r\n\tSELECT\t\t* \r\n\tINTO\t\tFinance.Reconciliation\r\n\tFROM\t\tReconciliation\r\n\tORDER BY\t[Entity], [TB Account]\r\n\r\n\r\n-----------------------------------------------------------------------------------------------------------------------------------------------\r\n-- 4.7\tCreate Entity table\r\n-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\t\r\n\tIF OBJECT_ID('[Finance].[EntityDescription]','U') IS NOT NULL DROP TABLE [Finance].[EntityDescription]\r\n\r\n\tSELECT\t\t[Entity]\r\n\t,\t\t\t[Company Name]\r\n\t,\t\t\t[Entity Currency (EC)]\r\n\t,\t\t\tCASE \r\n\t\t\t\t\tWHEN LEFT([Entity],1) = '3' THEN 'NL' \r\n\t\t\t\t\tWHEN [Entity Currency (EC)] = 'CNY' THEN 'CH'\r\n\t\t\t\t\tELSE 'UK' \r\n\t\t\t\tEND AS [Country]\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN LEFT([Entity],1) = '3' THEN 'Amsterdam'\r\n\t\t\t\t\tWHEN LEFT([Entity],1) = '2' THEN 'Stanlow'\r\n\t\t\t\t\tWHEN LEFT([Entity],1) = '1' THEN 'Motherwell'\r\n\t\t\t\t\tWHEN LEFT([Entity],1) = '9' THEN 'Head Office'\r\n\t\t\t\t\tWHEN LEFT([Entity],1) = '7' THEN 'China'\r\n\t\t\t\t\tWHEN LEFT([Entity],1) IN ('4','5','6') THEN 'UK'\r\n\t\t\t\tEND AS [Location]\r\n\t,\t\t\tCONCAT([Entity],':',[Company Name]) AS [Entity Name]\r\n\tINTO\t\t[Finance].[EntityDescription]\r\n\tFROM\t\t[Finance].[GL]\r\n\tGROUP BY\t[Entity]\r\n\t,\t\t\t[Company Name]\r\n\t,\t\t\t[Entity Currency (EC)]\r\n\t,\t\t\tCASE WHEN LEFT([Entity],1) = '3' THEN 'NL' ELSE 'UK' END\r\n\t,\t\t\tCASE\r\n\t\t\t\t\tWHEN LEFT([Entity],1) = '3' THEN 'Amsterdam'\r\n\t\t\t\t\tWHEN LEFT([Entity],1) = '2' THEN 'Stanlow'\r\n\t\t\t\t\tWHEN LEFT([Entity],1) = '1' THEN 'Motherwell'\r\n\t\t\t\t\tWHEN LEFT([Entity],1) = '9' THEN 'Head Office'\r\n\t\t\t\tEND\r\n\t,\t\t\tCONCAT([Entity],':',[Company Name])\r\n\r\n-----------------------------------------------------------------------------------------------------------------------------------------------\r\n-- 4.7\tCreate cost centre table\r\n-----------------------------------------------------------------------------------------------------------------------------------------------\r\n\t\r\n\tIF OBJECT_ID('[Finance].[CostCentre]','U') IS NOT NULL DROP TABLE [Finance].[CostCentre]\r\n\r\n\tSELECT\t\t[Cost Centre]\r\n\t,\t\t\t[Cost Centre Description]\r\n\t,\t\t\tCONCAT([Cost Centre],':',[Cost Centre Description]) AS [Cost Centre Full Description]\r\n\tINTO\t\t[Finance].[CostCentre]\r\n\tFROM\t\t[Finance].[GL]\r\n\tGROUP BY\t[Cost Centre]\r\n\t,\t\t\t[Cost Centre Description]\r\n\t,\t\t\tCONCAT([Cost Centre],':',[Cost Centre Description])\r\n"
						}
					]
				}
			}
		],
		"folder": {
			"name": "Finance"
		},
		"annotations": [],
		"lastPublishTime": "2023-01-09T17:36:58Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}